{"version":3,"sources":["../src/graphics/gameplay/gameplay.ts"],"sourcesContent":["import { EventBusManager } from \"@utils/event_management/eventBusFactory\";\nimport { getGlobalContext } from \"@utils/globalContext\";\nimport { GlobalState } from \"@utils/state/globalState\";\nimport { Camera, Clock, Scene, WebGLRenderer } from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { createPlayer, Player, PlayerProps } from \"./player\";\n\nexport interface GameplayOptions {\n  player: PlayerProps;\n}\n\nexport interface GameplayContext {\n  globalState: GlobalState;\n  eventBusManager: EventBusManager;\n}\n\nexport interface ThreeJSContext {\n  scene: Scene;\n  renderer: WebGLRenderer;\n  camera: Camera;\n  controls: OrbitControls;\n}\n\nexport interface Gameplay {\n  mount: (context: ThreeJSContext) => void;\n  update: () => void;\n  unmount: () => void;\n}\n\ninterface References {\n  player: Player;\n}\n\ninterface State {\n  deltaTime: number;\n}\n\ninterface TempData {\n  deltaTime: number;\n}\n\nexport const createGameplay = (options: GameplayOptions): Gameplay => {\n  const { globalState, eventBusManager, globalStorage } = getGlobalContext();\n\n  let state: State = {\n    deltaTime: 0,\n  };\n  let references: References;\n  let context: ThreeJSContext;\n  let clock: Clock = new Clock();\n  let tempData: TempData = {\n    deltaTime: 0,\n  };\n\n  const mount = (_context: ThreeJSContext) => {\n    const player = createPlayer(\n      {\n        ids: options.player.ids,\n      },\n      {\n        scene: _context.scene,\n      }\n    );\n    player.create();\n\n    references = {\n      player: player,\n    };\n\n    context = _context;\n  };\n\n  const updateDeltaTime = () => {\n    tempData.deltaTime = clock.getDelta();\n\n    if (!isNaN(tempData.deltaTime)) {\n      state.deltaTime = tempData.deltaTime;\n    }\n  };\n\n  const update = () => {\n    updateDeltaTime();\n    references.player.update(state.deltaTime);\n  };\n\n  const unmount = () => {\n    references.player.destroy();\n  };\n\n  return {\n    mount: mount,\n    update: update,\n    unmount: unmount,\n  };\n};\n"],"mappings":";;;;;;;;AAGA,SAAiB,aAAmC;AAsC7C,IAAM,iBAAiB,CAAC,YAAuC;AACpE,QAAM,EAAE,aAAa,iBAAiB,cAAc,IAAI,iBAAiB;AAEzE,MAAI,QAAe;AAAA,IACjB,WAAW;AAAA,EACb;AACA,MAAI;AACJ,MAAI;AACJ,MAAI,QAAe,IAAI,MAAM;AAC7B,MAAI,WAAqB;AAAA,IACvB,WAAW;AAAA,EACb;AAEA,QAAM,QAAQ,CAAC,aAA6B;AAC1C,UAAM,SAAS;AAAA,MACb;AAAA,QACE,KAAK,QAAQ,OAAO;AAAA,MACtB;AAAA,MACA;AAAA,QACE,OAAO,SAAS;AAAA,MAClB;AAAA,IACF;AACA,WAAO,OAAO;AAEd,iBAAa;AAAA,MACX;AAAA,IACF;AAEA,cAAU;AAAA,EACZ;AAEA,QAAM,kBAAkB,MAAM;AAC5B,aAAS,YAAY,MAAM,SAAS;AAEpC,QAAI,CAAC,MAAM,SAAS,SAAS,GAAG;AAC9B,YAAM,YAAY,SAAS;AAAA,IAC7B;AAAA,EACF;AAEA,QAAM,SAAS,MAAM;AACnB,oBAAgB;AAChB,eAAW,OAAO,OAAO,MAAM,SAAS;AAAA,EAC1C;AAEA,QAAM,UAAU,MAAM;AACpB,eAAW,OAAO,QAAQ;AAAA,EAC5B;AAEA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;","names":[]}