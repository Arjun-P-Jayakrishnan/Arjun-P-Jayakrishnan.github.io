{"version":3,"sources":["../src/utils/storage/globalStorage.ts"],"sourcesContent":["import { AnimationClip, Group, Object3DEventMap } from \"three\";\nimport { createStorageUnit, StorageUnit } from \"./storageUnit\";\n\nexport interface GlobalStorageProps {}\n\nexport interface GlobalStorage {\n  mount: () => void;\n  unmount: () => void;\n  getStorage: <K extends keyof StorageMap>(key: K) => GenericStorageUnit[K];\n}\n\ntype StorageMap = {\n  animations: AnimationClip[];\n  groups: Group<Object3DEventMap>;\n};\n\ntype GenericStorageUnit = {\n  [K in keyof StorageMap]: StorageUnit<StorageMap[K]>;\n};\n\nexport const createGlobalStorage = <K extends keyof StorageMap>(\n  _props: GlobalStorageProps\n): GlobalStorage => {\n  let storage: GenericStorageUnit | undefined;\n\n  const mount = () => {\n    storage = {\n      animations: createStorageUnit<AnimationClip[]>(),\n      groups: createStorageUnit<Group<Object3DEventMap>>(),\n    };\n  };\n\n  const unmount = () => {\n    if (storage) {\n    }\n    storage = undefined;\n  };\n\n  const getStorage = <K extends keyof StorageMap>(\n    key: K\n  ): GenericStorageUnit[K] => {\n    if (storage === undefined) {\n      throw new Error(`Must mount the storage first`);\n    }\n    return storage[key];\n  };\n\n  return {\n    mount: mount,\n    unmount: unmount,\n    getStorage: getStorage,\n  };\n};\n"],"mappings":";;;;;AAoBO,IAAM,sBAAsB,CACjC,WACkB;AAClB,MAAI;AAEJ,QAAM,QAAQ,MAAM;AAClB,cAAU;AAAA,MACR,YAAY,kBAAmC;AAAA,MAC/C,QAAQ,kBAA2C;AAAA,IACrD;AAAA,EACF;AAEA,QAAM,UAAU,MAAM;AACpB,QAAI,SAAS;AAAA,IACb;AACA,cAAU;AAAA,EACZ;AAEA,QAAM,aAAa,CACjB,QAC0B;AAC1B,QAAI,YAAY,QAAW;AACzB,YAAM,IAAI,MAAM,8BAA8B;AAAA,IAChD;AACA,WAAO,QAAQ,GAAG;AAAA,EACpB;AAEA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;","names":[]}