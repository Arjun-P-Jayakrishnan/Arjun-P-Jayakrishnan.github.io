{"version":3,"sources":["../src/graphics/main.ts"],"sourcesContent":["import { getGlobalContext } from \"@utils/globalContext\";\n\nimport { createGameplay, Gameplay } from \"./gameplay/gameplay\";\nimport { createThreeJsInstance } from \"./internal/internal\";\nimport { createLoader, LoaderOptions } from \"./loader/loader\";\n\ninterface GameManagerProps {\n  loaderOptions: LoaderOptions;\n}\n\nexport interface GameEngineManager {\n  mount: () => void;\n  unmount: () => void;\n  update: () => void;\n  load: () => Promise<void>;\n}\n\nexport const createGameManager = (\n  props: GameManagerProps\n): GameEngineManager => {\n  const { globalState, eventBusManager } = getGlobalContext();\n  const engineInstance = createThreeJsInstance({\n    camera: {},\n    domMountTag: \"game-engine\",\n  });\n  const { scene, renderer, camera, controls } = engineInstance;\n\n  const loaderInstance = createLoader(props.loaderOptions, {\n    globalState: globalState,\n    loaderEventBus: eventBusManager.loadingBus,\n    renderer: renderer,\n    scene: scene,\n  });\n\n  const gameplay: Gameplay = createGameplay({\n    player: {\n      ids: {\n        rootMesh: \"player\",\n      },\n    },\n  });\n\n  /**\n   * @description handle resize of the canvas\n   */\n  const _handleResize = () => {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n\n    renderer.setSize(width, height);\n  };\n\n  const _handleDebug = (e: KeyboardEvent) => {\n    if (e.key.toLowerCase() === \"u\" && e.shiftKey) {\n      e.preventDefault();\n      eventBusManager.debugBus.emit({\n        type: \"debug:inspector\",\n        scene: scene,\n      });\n    }\n  };\n\n  /**\n   * @description creates event listeners for various tasks\n   */\n  const _mountWindowEventListeners = () => {\n    /**\n     * Primary initialization to ensure correct aspect ratios\n     */\n    _handleResize();\n\n    window.addEventListener(\"resize\", _handleResize);\n    window.addEventListener(\"keydown\", _handleDebug);\n  };\n\n  const mount = () => {\n    /**\n     * Attach Event Listeners\n     */\n    _mountWindowEventListeners();\n    engineInstance.mount();\n\n    /**\n     * load all meshes ,objects and animations as per the given props\n     */\n    loaderInstance.configure();\n  };\n\n  const _onLoad = () => {\n    /**\n     * Initialize the gameplay mechanics and then pass update logic to renderer\n     */\n    gameplay.mount({\n      renderer: renderer,\n      scene: scene,\n      camera: camera,\n      controls: controls,\n    });\n\n    /**\n     * Register gameplay loop\n     */\n    engineInstance.register(gameplay.update);\n  };\n\n  const load = async () => {\n    await loaderInstance.loadAll();\n\n    _onLoad();\n  };\n\n  /**\n   * @description unmount\n   */\n  const unmount = () => {\n    /**\n     * Release all event listeners to prevent memory leaks\n     */\n    window.removeEventListener(\"resize\", _handleResize);\n    window.removeEventListener(\"keydown\", _handleDebug);\n  };\n\n  const update = () => {\n    engineInstance.render();\n  };\n\n  return {\n    mount: mount,\n    unmount: unmount,\n    update: update,\n    load: load,\n  };\n};\n"],"mappings":";;;;;;;;;;;;;;AAiBO,IAAM,oBAAoB,CAC/B,UACsB;AACtB,QAAM,EAAE,aAAa,gBAAgB,IAAI,iBAAiB;AAC1D,QAAM,iBAAiB,sBAAsB;AAAA,IAC3C,QAAQ,CAAC;AAAA,IACT,aAAa;AAAA,EACf,CAAC;AACD,QAAM,EAAE,OAAO,UAAU,QAAQ,SAAS,IAAI;AAE9C,QAAM,iBAAiB,aAAa,MAAM,eAAe;AAAA,IACvD;AAAA,IACA,gBAAgB,gBAAgB;AAAA,IAChC;AAAA,IACA;AAAA,EACF,CAAC;AAED,QAAM,WAAqB,eAAe;AAAA,IACxC,QAAQ;AAAA,MACN,KAAK;AAAA,QACH,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,EACF,CAAC;AAKD,QAAM,gBAAgB,MAAM;AAC1B,UAAM,QAAQ,OAAO;AACrB,UAAM,SAAS,OAAO;AAEtB,WAAO,SAAS,QAAQ;AACxB,WAAO,uBAAuB;AAE9B,aAAS,QAAQ,OAAO,MAAM;AAAA,EAChC;AAEA,QAAM,eAAe,CAAC,MAAqB;AACzC,QAAI,EAAE,IAAI,YAAY,MAAM,OAAO,EAAE,UAAU;AAC7C,QAAE,eAAe;AACjB,sBAAgB,SAAS,KAAK;AAAA,QAC5B,MAAM;AAAA,QACN;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AAKA,QAAM,6BAA6B,MAAM;AAIvC,kBAAc;AAEd,WAAO,iBAAiB,UAAU,aAAa;AAC/C,WAAO,iBAAiB,WAAW,YAAY;AAAA,EACjD;AAEA,QAAM,QAAQ,MAAM;AAIlB,+BAA2B;AAC3B,mBAAe,MAAM;AAKrB,mBAAe,UAAU;AAAA,EAC3B;AAEA,QAAM,UAAU,MAAM;AAIpB,aAAS,MAAM;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAKD,mBAAe,SAAS,SAAS,MAAM;AAAA,EACzC;AAEA,QAAM,OAAO,YAAY;AACvB,UAAM,eAAe,QAAQ;AAE7B,YAAQ;AAAA,EACV;AAKA,QAAM,UAAU,MAAM;AAIpB,WAAO,oBAAoB,UAAU,aAAa;AAClD,WAAO,oBAAoB,WAAW,YAAY;AAAA,EACpD;AAEA,QAAM,SAAS,MAAM;AACnB,mBAAe,OAAO;AAAA,EACxB;AAEA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;","names":[]}