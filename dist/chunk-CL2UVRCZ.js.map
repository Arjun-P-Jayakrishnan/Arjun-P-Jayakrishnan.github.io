{"version":3,"sources":["../src/engine/managers/InputManager.ts"],"names":["inputs","createInputManager","createMouseController","createKeyboardController","key"],"mappings":"+EAiBIA,IAAAA,CAAAA,CAAwB,KAEfC,CAAqB,CAAA,KAmCzB,CACL,MAhCY,CAAA,IAAM,CACbD,CACHA,GAAAA,CAAAA,CAAS,CACP,KAAOE,CAAAA,GAAAA,GACP,QAAUC,CAAAA,CAAAA,EACZ,CAEAH,CAAAA,CAAAA,CAAO,KAAM,CAAA,OAAA,EACbA,CAAAA,CAAAA,CAAO,SAAS,OAAQ,EAAA,EAE5B,EAuBE,aAN6CI,CAAAA,CAAAA,EACtCJ,EAASA,CAAOI,CAAAA,CAAG,EAAI,IAM9B,CAAA,SAAA,CAnBc,IAAM,CACfJ,CAAAA,GAELA,EAAO,KAAM,CAAA,SAAA,GACbA,CAAO,CAAA,QAAA,CAAS,SAAU,EAAA,EAC5B,CAeA,CAAA","file":"chunk-CL2UVRCZ.js","sourcesContent":["import {\n  createKeyboardController,\n  KeyboardInput,\n} from \"plugins/input/keyboard\";\nimport { createMouseController, MouseInput } from \"../../plugins/input/mouse\";\n\ninterface Inputs {\n  mouse: MouseInput;\n  keyboard: KeyboardInput;\n}\n\nexport interface InputManager {\n  onInit: () => void;\n  onUnmount: () => void;\n  getController: <K extends keyof Inputs>(key: K) => Inputs[K] | null;\n}\n\nlet inputs: Inputs | null = null;\n\nexport const createInputManager = (): InputManager => {\n  /**\n   *\n   */\n  const mount = () => {\n    if (!inputs) {\n      inputs = {\n        mouse: createMouseController(),\n        keyboard: createKeyboardController(),\n      };\n\n      inputs.mouse.onMount();\n      inputs.keyboard.onMount();\n    }\n  };\n\n  /**\n   *\n   */\n  const unmount = () => {\n    if (!inputs) return;\n\n    inputs.mouse.onUnmount();\n    inputs.keyboard.onUnmount();\n  };\n\n  /**\n   *\n   * @param key which plugin are you looking for\n   * @returns the controller if it exists\n   */\n  const getController = <K extends keyof Inputs>(key: K): Inputs[K] | null => {\n    return inputs ? inputs[key] : null;\n  };\n\n  return {\n    onInit: mount,\n    getController: getController,\n    onUnmount: unmount,\n  };\n};\n"]}