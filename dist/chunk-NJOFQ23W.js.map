{"version":3,"sources":["../src/components/loading/loading.ts"],"names":["template","LoadingModal","clone","getServiceRegistry","eventBusManager"],"mappings":"oCAMA,IAAMA,EAAW,QAAS,CAAA,aAAA,CAAc,UAAU,CAAA,CAElDA,EAAS,SAAY,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAA,KAaRC,CAAN,CAAA,cAA2B,WAAY,CAO5C,aAAc,CACZ,KAAA,EAcF,CAAA,IAAA,CAAA,aAAA,CAAgB,IAAM,EAWtB,CAxBE,KAAK,IAAO,CAAA,IAAA,CAAK,aAAa,CAAE,IAAA,CAAM,MAAO,CAAC,EAE9C,IAAMC,CAAAA,CAAQF,CAAS,CAAA,OAAA,CAAQ,UAAU,IAAI,CAAA,CAC7C,IAAK,CAAA,IAAA,CAAK,YAAYE,CAAK,CAAA,CAC3B,KAAK,QAAW,CAAA,CAAA,CAEhB,KAAK,IAAO,CAAA,CACV,OAAS,CAAA,IAAA,CAAK,KAAK,cAAe,CAAA,SAAS,CAC7C,CAAA,CACA,KAAK,MAASC,CAAAA,CAAAA,EAAqB,CAAA,GAAA,CAAI,QAAQ,CAC/C,CAAA,IAAA,CAAK,OAAO,MAAO,CAAA,CAAE,OAAQ,eAAgB,CAAC,EAChD,CAeA,IAAI,eAAgBC,CAAAA,CAAAA,CAAkC,CACpD,IAAA,CAAK,gBAAkBA,CAAgB,CAAA,UAAA,CACvC,IAAK,CAAA,aAAA,GACP,CAEA,iBAAA,EAAoB,EAEpB,oBAAA,EAAuB,EACzB","file":"chunk-NJOFQ23W.js","sourcesContent":["import { EventBus } from \"@events/eventBus\";\nimport { EventBusManager } from \"@events/EventBusManager\";\nimport { Logger } from \"@utils/Logger\";\nimport { getServiceRegistry } from \"engine/core/ServiceRegistry\";\nimport { LoadingEvents } from \"types/eventType\";\n\nconst template = document.createElement(\"template\");\n///TODO: Re-add hidden in overlay\ntemplate.innerHTML = `\n    <link rel=\"stylesheet\" href=\"/style/loading_modal.css\"/>\n   \n    <div class=\"overlay hidden\" id=\"overlay\">\n      <div class=\"loading-logo\"></div>\n      <div id=\"loading-text\">Loading...</div>\n    </div>\n`;\n\ninterface Tags {\n  overlay: HTMLElement | null;\n}\n\nexport class LoadingModal extends HTMLElement {\n  loadingEventBus?: EventBus<LoadingEvents>;\n  root: ShadowRoot;\n  tags: Tags;\n  progress: number;\n  logger: Logger;\n\n  constructor() {\n    super();\n    this.root = this.attachShadow({ mode: \"open\" });\n\n    const clone = template.content.cloneNode(true);\n    this.root.appendChild(clone);\n    this.progress = 0;\n\n    this.tags = {\n      overlay: this.root.getElementById(\"overlay\"),\n    };\n    this.logger = getServiceRegistry().get(\"Logger\");\n    this.logger.onLoad({ origin: \"Loading Modal\" });\n  }\n\n  handleLoading = () => {\n    // this.loadingEventBus?.on(\"load:start\", (data) => {\n    //   this.tags.overlay?.classList.remove(\"hidden\");\n    // });\n    // this.loadingEventBus?.on(\"load:progress\", (data) => {\n    //   this.progress = data.loaded / data.total;\n    // });\n    // this.loadingEventBus?.on(\"load:complete\", (data) => {\n    //   this.tags.overlay?.classList.add(\"hidden\");\n    // });\n    // this.loadingEventBus?.on(\"load:error\", (data) => {});\n  };\n\n  set eventBusManager(eventBusManager: EventBusManager) {\n    this.loadingEventBus = eventBusManager.loadingBus;\n    this.handleLoading();\n  }\n\n  connectedCallback() {}\n\n  disconnectedCallback() {}\n}\n"]}