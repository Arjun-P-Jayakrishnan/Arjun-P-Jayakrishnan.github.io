{"version":3,"sources":["../src/graphics/main.ts"],"sourcesContent":["import { getGlobalContext } from \"@utils/globalContext\";\n\nimport { createGameplay, Gameplay } from \"./gameplay/gameplay\";\nimport { createThreeJsInstance } from \"./internal/internal\";\nimport { createLoader, LoaderOptions } from \"./loader/loader\";\n\ninterface GameManagerProps {\n  loaderOptions: LoaderOptions;\n}\n\nexport interface GameEngineManager {\n  mount: () => void;\n  unmount: () => void;\n  update: () => void;\n  load: () => Promise<void>;\n}\n\nexport const createGameManager = (\n  props: GameManagerProps\n): GameEngineManager => {\n  const { globalState, eventBusManager } = getGlobalContext();\n  const engineInstance = createThreeJsInstance({\n    camera: {},\n    domMountTag: \"game-engine\",\n  });\n  const { scene, renderer, camera, controls } = engineInstance;\n\n  const loaderInstance = createLoader(props.loaderOptions, {\n    globalState: globalState,\n    loaderEventBus: eventBusManager.loadingBus,\n    renderer: renderer,\n    scene: scene,\n  });\n\n  const gameplay: Gameplay = createGameplay({\n    player: {\n      ids: {\n        rootMesh: \"player\",\n      },\n    },\n  });\n\n  /**\n   * @description handle resize of the canvas\n   */\n  const _handleResize = () => {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n\n    renderer.setSize(width, height);\n  };\n\n  const _handleDebug = (e: KeyboardEvent) => {\n    if (e.key.toLowerCase() === \"u\" && e.shiftKey) {\n      e.preventDefault();\n      eventBusManager.debugBus.emit({\n        type: \"debug:inspector\",\n        scene: scene,\n      });\n    }\n  };\n\n  /**\n   * @description creates event listeners for various tasks\n   */\n  const _mountWindowEventListeners = () => {\n    /**\n     * Primary initialization to ensure correct aspect ratios\n     */\n    _handleResize();\n\n    window.addEventListener(\"resize\", _handleResize);\n    window.addEventListener(\"keydown\", _handleDebug);\n  };\n\n  const mount = () => {\n    /**\n     * Attach Event Listeners\n     */\n    _mountWindowEventListeners();\n    engineInstance.mount();\n\n    /**\n     * load all meshes ,objects and animations as per the given props\n     */\n    loaderInstance.configure();\n  };\n\n  const _onLoad = () => {\n    /**\n     * Initialize the gameplay mechanics and then pass update logic to renderer\n     */\n    gameplay.mount({\n      renderer: renderer,\n      scene: scene,\n      camera: camera,\n      controls: controls,\n    });\n\n    /**\n     * Register gameplay loop\n     */\n    engineInstance.register(gameplay.update);\n  };\n\n  const load = async () => {\n    await loaderInstance.loadAll();\n\n    _onLoad();\n  };\n\n  /**\n   * @description unmount\n   */\n  const unmount = () => {\n    /**\n     * Release all event listeners to prevent memory leaks\n     */\n    window.removeEventListener(\"resize\", _handleResize);\n    window.removeEventListener(\"keydown\", _handleDebug);\n  };\n\n  const update = () => {\n    engineInstance.render();\n  };\n\n  return {\n    mount: mount,\n    unmount: unmount,\n    update: update,\n    load: load,\n  };\n};\n"],"mappings":"gKAiBO,IAAMA,EACXC,GACsB,CACtB,GAAM,CAAE,YAAAC,EAAa,gBAAAC,CAAgB,EAAIC,EAAiB,EACpDC,EAAiBC,EAAsB,CAC3C,OAAQ,CAAC,EACT,YAAa,aACf,CAAC,EACK,CAAE,MAAAC,EAAO,SAAAC,EAAU,OAAAC,EAAQ,SAAAC,CAAS,EAAIL,EAExCM,EAAiBC,EAAaX,EAAM,cAAe,CACvD,YAAaC,EACb,eAAgBC,EAAgB,WAChC,SAAUK,EACV,MAAOD,CACT,CAAC,EAEKM,EAAqBC,EAAe,CACxC,OAAQ,CACN,IAAK,CACH,SAAU,QACZ,CACF,CACF,CAAC,EAKKC,EAAgB,IAAM,CAC1B,IAAMC,EAAQ,OAAO,WACfC,EAAS,OAAO,YAEtBR,EAAO,OAASO,EAAQC,EACxBR,EAAO,uBAAuB,EAE9BD,EAAS,QAAQQ,EAAOC,CAAM,CAChC,EAEMC,EAAgB,GAAqB,CACrC,EAAE,IAAI,YAAY,IAAM,KAAO,EAAE,WACnC,EAAE,eAAe,EACjBf,EAAgB,SAAS,KAAK,CAC5B,KAAM,kBACN,MAAOI,CACT,CAAC,EAEL,EAKMY,EAA6B,IAAM,CAIvCJ,EAAc,EAEd,OAAO,iBAAiB,SAAUA,CAAa,EAC/C,OAAO,iBAAiB,UAAWG,CAAY,CACjD,EAEME,EAAQ,IAAM,CAIlBD,EAA2B,EAC3Bd,EAAe,MAAM,EAKrBM,EAAe,UAAU,CAC3B,EAEMU,EAAU,IAAM,CAIpBR,EAAS,MAAM,CACb,SAAUL,EACV,MAAOD,EACP,OAAQE,EACR,SAAUC,CACZ,CAAC,EAKDL,EAAe,SAASQ,EAAS,MAAM,CACzC,EAuBA,MAAO,CACL,MAAOO,EACP,QAdc,IAAM,CAIpB,OAAO,oBAAoB,SAAUL,CAAa,EAClD,OAAO,oBAAoB,UAAWG,CAAY,CACpD,EASE,OAPa,IAAM,CACnBb,EAAe,OAAO,CACxB,EAME,KAzBW,SAAY,CACvB,MAAMM,EAAe,QAAQ,EAE7BU,EAAQ,CACV,CAsBA,CACF","names":["createGameManager","props","globalState","eventBusManager","getGlobalContext","engineInstance","createThreeJsInstance","scene","renderer","camera","controls","loaderInstance","createLoader","gameplay","createGameplay","_handleResize","width","height","_handleDebug","_mountWindowEventListeners","mount","_onLoad"]}