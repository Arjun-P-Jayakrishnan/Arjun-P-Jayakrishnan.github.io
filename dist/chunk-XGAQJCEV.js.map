{"version":3,"sources":["../src/components/website/about/about.ts"],"names":["template","AboutPage","BackgroundPage","ExperiencePage","ResumePage","FrameworkPage","background","experience","resume","frameworks","button","index","clone","buttons","_","e","name","type","id","el","eventBusManager","data","offset","prevIndex","length","activeSlide","education","skills","skillItem","experienceData","resumeData","frameworkData"],"mappings":"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","file":"chunk-XGAQJCEV.js","sourcesContent":["import { EventBus } from \"@utils/event_management/eventBus\";\nimport { EventBusManager } from \"@utils/event_management/eventBusFactory\";\nimport { DisplayEvents } from \"@utils/event_management/eventType\";\nimport { BackgroundPage } from \"./background\";\nimport { ExperiencePage, JobExperience } from \"./experience\";\nimport { FrameworkPage } from \"./frameworks\";\nimport { ResumePage } from \"./resume\";\n\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = `\n    <link rel=\"stylesheet\" href=\"/style/about.css\">\n    <div class=\"about hidden\">\n        <div class=\"carousel\">\n          <div class=\"carousel-container\">\n            <ul class=\"carousel-track\">\n                <li class=\"slide\" data-active><slot name=\"background\">Background</slot></li>\n                <li class=\"slide\"><slot name=\"experience\">Experience</slot></li>\n                <li class=\"slide\"><slot name=\"resume\">Resume</slot></li>\n                <li class=\"slide\"><slot name=\"frameworks\">Frameworks</slot></li>\n            </ul>\n          </div>\n          <button class=\"carousel__button prev\">&#8678;</button>\n          <button class=\"carousel__button next\">&#8680;</button>\n          <div class=\"carousel_nav\">\n                <button class=\"carousel_indicator\" data-active-button></button>\n                <button class=\"carousel_indicator\"></button>\n                <button class=\"carousel_indicator\"></button>\n                <button class=\"carousel_indicator\"></button>\n          </div>\n        </div>\n    </div>\n`;\n\ninterface State {\n  currentIndex: number;\n}\n\ninterface Components {\n  about: HTMLDivElement | null;\n  carousel: HTMLDivElement | null;\n  next: HTMLButtonElement | null;\n  prev: HTMLButtonElement | null;\n  track: HTMLUListElement | null;\n  navButtons: HTMLButtonElement[];\n}\n\ninterface CarouselItems {\n  background: BackgroundPage;\n  experience: ExperiencePage;\n  resume: ResumePage;\n  frameworks: FrameworkPage;\n}\n\nexport type AboutData =\n  | {\n      isError: false;\n      records: Record<string, { type: string; data: any }>;\n    }\n  | {\n      isError: true;\n      message: string;\n    };\n\nexport class AboutPage extends HTMLElement {\n  state: State = {\n    currentIndex: 0,\n  };\n  root: ShadowRoot;\n  displayBus: EventBus<DisplayEvents> | null = null;\n  components: Components;\n  carouselItem: CarouselItems | null = null;\n\n  prevClick = (e: Event) => this.swapSlides(-1);\n  nextClick = (e: Event) => this.swapSlides(1);\n  navButtonClicks: Array<(e: Event) => void> = [];\n\n  constructor() {\n    super();\n    this.root = this.attachShadow({ mode: \"open\" });\n\n    const clone = template.content.cloneNode(true);\n\n    this.root.appendChild(clone);\n\n    const buttons = Array.from(\n      this.root.querySelector(\".carousel_nav\")?.children ?? []\n    );\n\n    this.components = {\n      about: this.root.querySelector(\".about\"),\n      carousel: this.root.querySelector(\".carousel\"),\n      next: this.root.querySelector(\".next\"),\n      prev: this.root.querySelector(\".prev\"),\n      track: this.root.querySelector(\".carousel-track\"),\n      navButtons: buttons as any as HTMLButtonElement[],\n    };\n\n    console.log(this.components.navButtons);\n\n    this.components.navButtons.forEach((_, index) => {\n      this.navButtonClicks.push((e: Event) =>\n        this.swapSlides(index - this.state.currentIndex)\n      );\n    });\n    this.defineElements();\n    this.querySlottedElements();\n  }\n\n  private defineElements = () => {\n    if (!customElements.get(\"background-page\")) {\n      customElements.define(\"background-page\", BackgroundPage);\n    }\n\n    if (!customElements.get(\"experience-page\")) {\n      customElements.define(\"experience-page\", ExperiencePage);\n    }\n\n    if (!customElements.get(\"resume-page\")) {\n      customElements.define(\"resume-page\", ResumePage);\n    }\n\n    if (!customElements.get(\"frameworks-page\")) {\n      customElements.define(\"frameworks-page\", FrameworkPage);\n    }\n  };\n\n  private findElement(name: string, type: any) {\n    const id = `slot[name=\"${name}\"]`;\n    console.log(id);\n    const slot = this.root.querySelector(id) as HTMLSlotElement;\n    const nodes = slot.assignedElements?.() || [];\n\n    const element = nodes.find((el) => el instanceof type);\n\n    return element as typeof type;\n  }\n\n  private querySlottedElements = () => {\n    const background: BackgroundPage = this.findElement(\n      \"background\",\n      BackgroundPage\n    );\n\n    const experience: ExperiencePage = this.findElement(\n      \"experience\",\n      ExperiencePage\n    );\n    const resume: ResumePage = this.findElement(\"resume\", ResumePage);\n    const frameworks: FrameworkPage = this.findElement(\n      \"frameworks\",\n      FrameworkPage\n    );\n\n    this.carouselItem = {\n      background: background,\n      experience: experience,\n      resume: resume,\n      frameworks: frameworks,\n    };\n  };\n\n  set eventBusManager(eventBusManager: EventBusManager) {\n    this.displayBus = eventBusManager.displayBus;\n\n    this.displayBus.on(\"about:show\", this.onShow);\n    this.displayBus.on(\"about:hide\", this.onHide);\n  }\n\n  set updateData(data: AboutData) {\n    if (!data.isError) {\n      this.inflateCarousel(data.records);\n    } else {\n      this.root.innerHTML = `\n        <p>${data.message}</p>\n      `;\n    }\n  }\n\n  connectedCallback() {\n    this.bindEvents();\n  }\n\n  disconnectedCallback() {\n    this.unbindEvents();\n\n    this.displayBus?.off(\"about:show\", this.onShow);\n    this.displayBus?.off(\"about:hide\", this.onHide);\n  }\n\n  private onShow = () => {\n    this.components.about?.classList.toggle(\"hidden\", false);\n  };\n\n  private onHide = () => {\n    this.components.about?.classList.toggle(\"hidden\", true);\n  };\n\n  swapSlides(offset: number) {\n    if (!this.components.track) return;\n\n    const prevIndex = this.state.currentIndex;\n    const length = this.components.track.children.length;\n\n    this.state.currentIndex += offset;\n    if (this.state.currentIndex < 0) this.state.currentIndex = length - 1;\n    if (this.state.currentIndex >= length) this.state.currentIndex = 0;\n\n    const activeSlide = this.components.track.children[\n      prevIndex\n    ] as HTMLElement;\n\n    (\n      this.components.track.children[this.state.currentIndex] as HTMLElement\n    ).dataset.active = \"true\";\n    delete activeSlide.dataset.active;\n\n    this.components.navButtons[this.state.currentIndex].dataset.activeButton =\n      \"true\";\n    delete this.components.navButtons[prevIndex].dataset.activeButton;\n  }\n\n  private bindEvents = () => {\n    this.components.prev?.addEventListener(\"click\", this.prevClick);\n    this.components.next?.addEventListener(\"click\", this.nextClick);\n    this.components.navButtons.forEach((button, index) => {\n      button.addEventListener(\"click\", this.navButtonClicks[index]);\n    });\n  };\n\n  private unbindEvents = () => {\n    this.components.prev?.removeEventListener(\"click\", this.prevClick);\n    this.components.next?.removeEventListener(\"click\", this.nextClick);\n    this.components.navButtons.forEach((button, index) => {\n      button.removeEventListener(\"click\", this.navButtonClicks[index]);\n    });\n  };\n\n  private setBackground(data: any) {\n    if (!this.carouselItem?.background) return;\n\n    this.carouselItem.background.Summary = {\n      title: data[\"summary\"][\"title\"] ?? \"Title-Placeholder\",\n      description: data[\"summary\"][\"description\"] ?? \"Description\",\n    };\n\n    const education = data[\"education\"];\n\n    this.carouselItem.background.Education = {\n      course: education[\"course\"],\n      institute: education[\"institute\"],\n      description: education[\"description\"],\n    };\n\n    const skills: Array<any> = data[\"skills\"] as Array<any>;\n    this.carouselItem.background.Skills = skills.map((skillItem) => {\n      return {\n        title: skillItem[\"title\"],\n        tags: skillItem[\"tags\"] as Array<string>,\n      };\n    });\n  }\n\n  private setExperience(experienceData: any) {\n    if (!this.carouselItem?.experience) return;\n\n    this.carouselItem.experience.Experience = experienceData.map(\n      (data: any) => {\n        return {\n          title: data.title,\n          duration: data.duration,\n          responsibilities: data[\"responsibilities\"] as Array<string>,\n        } as JobExperience;\n      }\n    );\n  }\n\n  private setResume(resumeData: any) {\n    if (!this.carouselItem?.resume) return;\n  }\n\n  private setFrameworks(frameworkData: any) {\n    if (!this.carouselItem?.frameworks) return;\n\n    this.carouselItem.frameworks.FrameworkData = frameworkData;\n  }\n\n  private inflateCarousel(data: Record<string, { type: string; data: any }>) {\n    this.setBackground(data[\"personal\"].data);\n    this.setExperience(data[\"experience\"].data);\n    this.setResume(data[\"resume\"].data);\n    this.setFrameworks(data[\"frameworks\"].data);\n  }\n}\n"]}