{"version":3,"sources":["../src/managers/storage/globalStorage.ts"],"names":["createGlobalStorage","_props","storage","unit","key","createStorageUnit"],"mappings":"oCAiBaA,IAAAA,CAAAA,CACXC,GACkB,CAClB,IAAIC,EACAC,CAyBJ,CAAA,OAAO,CACL,KAAA,CAzBY,IAAM,CAClBD,EAAU,GACZ,EAwBE,OAtBc,CAAA,IAAM,CAGpBA,CAAU,CAAA,OACZ,CAmBE,CAAA,UAAA,CAjBkBE,CAAyC,EAAA,CAC3D,GAAIF,CAAY,GAAA,MAAA,CACd,MAAM,IAAI,KAAA,CAAM,8BAA8B,CAEhD,CAAA,OAAAC,CAAOD,CAAAA,CAAAA,CAAQE,CAAG,CAAA,CAEdD,IAAS,MACXA,GAAAA,CAAAA,CAAOE,GACPH,CAAAA,CAAAA,CAAQE,CAAG,CAAID,CAAAA,CAAAA,CAAAA,CAGVA,CACT,CAMA,CACF","file":"chunk-K5SYR3S2.js","sourcesContent":["import { ObjectStorageUnit } from \"./storageTypes\";\nimport { createStorageUnit, StorageUnit } from \"./storageUnit\";\n\nexport interface GlobalStorageProps {}\n\nexport interface GlobalStorage {\n  mount: () => void;\n  unmount: () => void;\n  getStorage: (id: string) => StorageUnit<StorageMap>;\n}\n\ntype StorageMap = ObjectStorageUnit;\n\ntype GenericStorageUnit = {\n  [id: string]: StorageUnit<StorageMap>;\n};\n\nexport const createGlobalStorage = (\n  _props: GlobalStorageProps\n): GlobalStorage => {\n  let storage: GenericStorageUnit | undefined;\n  let unit: StorageUnit<StorageMap>;\n  const mount = () => {\n    storage = {};\n  };\n\n  const unmount = () => {\n    if (storage) {\n    }\n    storage = undefined;\n  };\n\n  const getStorage = (key: string): StorageUnit<StorageMap> => {\n    if (storage === undefined) {\n      throw new Error(`Must mount the storage first`);\n    }\n    unit = storage[key];\n\n    if (unit === undefined) {\n      unit = createStorageUnit();\n      storage[key] = unit;\n    }\n\n    return unit;\n  };\n\n  return {\n    mount: mount,\n    unmount: unmount,\n    getStorage: getStorage,\n  };\n};\n"]}