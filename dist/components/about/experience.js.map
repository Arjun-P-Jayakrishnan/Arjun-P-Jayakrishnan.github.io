{"version":3,"sources":["../../../src/components/about/experience.ts"],"names":["template","ExperiencePage","clone","button","index","collapsibleElement","fn","e","data","li","header","title","duration","details","responsibilities","documentFragment","responsibility","_li","entry","dataList"],"mappings":"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","file":"experience.js","sourcesContent":["const template = document.createElement(\"template\");\ntemplate.innerHTML = `\n    <link rel=\"stylesheet\" href=\"/style/experience.css\">\n    <div class=\"experience\">\n        <ul class=\"job-list\">\n          <li class=\"job-item\">\n            <div class=\"job-header\">\n              <h3 class=\"job-title\">Title</h2>\n              <h5 class=\"job-duration\">Duration</h2>\n            </div>\n            <div class=\"job-details\">\n              <ul class=\"job-responsibilities\">\n                <li class=\"job-responsibility-item\">Done task which improved some item</li>\n              </ul>\n            </div>\n          </li>\n        </ul>\n    </div>\n`;\n\ninterface Components {\n  root: HTMLDivElement | null;\n  jobList: HTMLUListElement | null;\n}\n\nexport interface JobExperience {\n  title: string;\n  duration: string;\n  responsibilities: string[];\n}\n\nexport class ExperiencePage extends HTMLElement {\n  root: ShadowRoot;\n  components: Components;\n  events: Record<\n    string,\n    { button: HTMLButtonElement; callback: (e: Event) => void }\n  > = {};\n\n  constructor() {\n    super();\n    this.root = this.attachShadow({ mode: \"open\" });\n\n    const clone = template.content.cloneNode(true);\n\n    this.root.appendChild(clone);\n\n    this.components = {\n      root: this.root.querySelector(\".experience\") as HTMLDivElement,\n      jobList: this.root.querySelector(\".job-list\") as HTMLUListElement,\n    };\n  }\n\n  connectedCallback() {}\n\n  disconnectedCallback() {}\n\n  private addEvent(\n    button: HTMLButtonElement,\n    index: number,\n    collapsibleElement: HTMLDivElement\n  ) {\n    const fn = (e: Event) => {\n      collapsibleElement.classList.toggle(\"hidden\");\n      console.log(\"button is clicked \", index);\n    };\n    this.events[`button :${index}`] = {\n      button: button,\n      callback: fn,\n    };\n    button.addEventListener(\"click\", fn);\n    console.log(\"attaching event\", index);\n  }\n\n  private addJobExperience(data: {\n    title: string;\n    duration: string;\n    responsibilities: string[];\n    index: number;\n  }): HTMLLIElement {\n    const li = document.createElement(\"li\");\n    li.classList.add(\"job-item\");\n\n    const header = document.createElement(\"div\");\n    header.classList.add(\"job-header\");\n\n    const title = document.createElement(\"h3\");\n    title.classList.add(\"job-title\");\n    title.textContent = data.title;\n\n    const duration = document.createElement(\"h5\");\n    duration.classList.add(\"job-duration\");\n    duration.textContent = data.duration;\n\n    header.appendChild(title);\n    header.appendChild(duration);\n    // header.appendChild(button);\n\n    const details = document.createElement(\"div\");\n    details.classList.add(\"job-details\");\n    details.classList.add(\"hidden\");\n\n    // this.addEvent(button, data.index, details);\n\n    const responsibilities = document.createElement(\"ul\");\n    responsibilities.classList.add(\"job-responsibilities\");\n\n    const documentFragment = document.createDocumentFragment();\n\n    data.responsibilities.forEach((responsibility) => {\n      const _li = document.createElement(\"li\");\n      _li.classList.add(\"job-responsibility-item\");\n      _li.textContent = responsibility;\n      documentFragment.appendChild(_li);\n    });\n\n    responsibilities.appendChild(documentFragment);\n    details.appendChild(responsibilities);\n    li.appendChild(header);\n    li.appendChild(details);\n\n    return li;\n  }\n\n  private removeEvents() {\n    console.log(\"remove all\");\n    Object.entries(this.events).forEach((entry) => {\n      entry[1].button.removeEventListener(\"click\", entry[1].callback);\n    });\n  }\n\n  private inflateCarousel(dataList: Array<JobExperience>) {\n    if (!this.components.jobList) return;\n    this.removeEvents();\n    this.components.jobList.innerHTML = \"\";\n\n    dataList.forEach((data, index) => {\n      this.components.jobList?.appendChild(\n        this.addJobExperience({\n          ...data,\n          index: index,\n        })\n      );\n    });\n  }\n\n  set Experience(data: Array<JobExperience>) {\n    console.log(\"experience\", data);\n    this.inflateCarousel(data);\n  }\n}\n"]}