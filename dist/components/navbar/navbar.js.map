{"version":3,"sources":["../../../src/engine/core/ServiceRegistry.ts","../../../src/components/navbar/navbar.ts"],"names":["createServiceRegistry","services","name","service","serviceRegistry","getServiceRegistry","template","Navbar","nextState","tabId","link","key","hideEvent","showEvent","id","showHandler","e","hideHandler","clone","eventBusManager"],"mappings":"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","file":"navbar.js","sourcesContent":["import {\n  ServiceKey,\n  ServiceMap,\n  ServiceRegistry,\n  ServiceType,\n} from \"types/service.types\";\n\nconst createServiceRegistry = (): ServiceRegistry => {\n  const services: Map<ServiceKey, ServiceType> = new Map<\n    ServiceKey,\n    ServiceType\n  >();\n\n  const register = <K extends ServiceKey>(\n    name: K,\n    service: ServiceMap[K]\n  ): void => {\n    if (services.has(name)) {\n      throw new Error(`Error : Redefining the service [${name}]`);\n    }\n    services.set(name, service);\n  };\n\n  const get = <K extends ServiceKey>(name: K): ServiceMap[K] => {\n    const service = services.get(name);\n    if (!service) {\n      throw new Error(\n        `Error : Trying to obtain value of an unregistered service ${name}`\n      );\n    }\n    return service as ServiceMap[K];\n  };\n\n  const has = (name: ServiceKey): boolean => {\n    return services.has(name);\n  };\n\n  return {\n    register: register,\n    get: get,\n    has: has,\n  };\n};\n\nlet serviceRegistry: ServiceRegistry | undefined = undefined;\n\nconst getServiceRegistry = () => {\n  if (!serviceRegistry) {\n    serviceRegistry = createServiceRegistry();\n  }\n\n  return serviceRegistry;\n};\n\nexport { getServiceRegistry };\n","import { EventBus } from \"@events/eventBus\";\nimport { EventBusManager } from \"@events/EventBusManager\";\nimport { Logger } from \"@utils/Logger\";\nimport { getServiceRegistry } from \"engine/core/ServiceRegistry\";\nimport { NavigationEvents } from \"types/eventType\";\n\nconst template = document.createElement(\"template\");\n\ntemplate.innerHTML = `\n  <link\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\"\n    />\n  <link rel=\"stylesheet\" href=\"/style/navbar.css\">\n  <nav class=\"navbar\" id=\"main-nav\">\n      <div class=\"logo\">Logo</div>\n      <button class=\"toggle-btn\" aria-expanded=\"false\" aria-controls=\"main-nav\">&#9776</button>\n      <ul class=\"nav-links\" aria-expanded=\"false\">\n          <li>\n            <a href=\"\" id=\"home\" aria-label=\"Home\" class=\"active\"> \n              <i class=\"fas fa-home\"></i>\n              <span class=\"desktop\">Home</span>\n            </a>\n          </li>\n          <li>\n            <a href=\"\" id=\"about\" aria-label=\"About\">\n              <i class=\"fas fa-user\"></i> \n              <span>About</span>\n            </a>\n          </li>\n          <li>\n            <a href=\"\" id=\"projects\" aria-label=\"Projects\">\n              <i class=\"fas fa-folder-open\"></i>\n              <span>Projects</span>\n            </a>\n          </li>\n          <li>\n            <a href=\"\" id=\"contact\" aria-label=\"Contact\">\n              <i class=\"fas fa-envelope\"></i>\n              <span>Contact</span>\n            </a>\n          </li>\n      </ul>\n  </nav>\n`;\n\ntype TabKeys = \"home\" | \"about\" | \"projects\" | \"contact\";\ntype BusHandler = Record<\n  `${TabKeys}:show` | `${TabKeys}:hide`,\n  (e: NavigationEvents) => void\n>;\n\ninterface State {\n  activeTab: TabKeys;\n}\n\ninterface Components {\n  toggleBtn: Nullable<HTMLElement>;\n  navLinks: Nullable<HTMLElement>;\n  projects: Nullable<HTMLAnchorElement>;\n  about: Nullable<HTMLAnchorElement>;\n  home: Nullable<HTMLAnchorElement>;\n  contact: Nullable<HTMLAnchorElement>;\n}\n\nexport class Navbar extends HTMLElement {\n  //State\n  private state: State;\n  private displayEventBus: EventBus<NavigationEvents> | null = null;\n  private components: Components;\n  private root: ShadowRoot;\n  private busHandlers: Nullable<BusHandler> = null;\n  private sections = [\"projects\", \"about\", \"contact\", \"home\"] as const;\n  private links;\n  private logger: Logger;\n\n  constructor() {\n    super();\n    this.root = this.attachShadow({ mode: \"open\" });\n    const clone = template.content.cloneNode(true);\n    this.root.appendChild(clone);\n\n    this.state = {\n      activeTab: \"home\",\n    };\n\n    this.components = {\n      about: null,\n      navLinks: null,\n      projects: null,\n      contact: null,\n      home: null,\n      toggleBtn: null,\n    };\n\n    this.queryElements();\n    this.links = [\n      this.components.home,\n      this.components.about,\n      this.components.projects,\n      this.components.contact,\n    ];\n\n    this.logger = getServiceRegistry().get(\"Logger\");\n    this.logger.onLoad({ origin: \"Navbar\" });\n  }\n\n  static get observedAttributes() {\n    return [];\n  }\n\n  /**\n   * @description called when the component is mounted\n   */\n  connectedCallback() {\n    this.bindEvents();\n    this.setupBusListeners();\n  }\n\n  /**\n   * @description called when component is un mounted\n   */\n  disconnectedCallback() {\n    this.unBindEvents();\n    this.disposeBusListeners();\n  }\n\n  queryElements() {\n    this.components.toggleBtn = this.root.querySelector(\".toggle-btn\");\n    this.components.navLinks = this.root.querySelector(\".nav-links\");\n\n    if (this.components.navLinks) {\n      this.components.projects =\n        this.components.navLinks.querySelector(\"#projects\");\n\n      this.components.about = this.components.navLinks.querySelector(\"#about\");\n\n      this.components.contact =\n        this.components.navLinks.querySelector(\"#contact\");\n\n      this.components.home = this.components.navLinks.querySelector(\"#home\");\n    }\n  }\n\n  bindEvents() {\n    this.components.toggleBtn?.addEventListener(\"click\", this.onToggleClick);\n    this.components.projects?.addEventListener(\"click\", this.onProjectClick);\n    this.components.about?.addEventListener(\"click\", this.onAboutClick);\n    this.components.home?.addEventListener(\"click\", this.onHomeClick);\n    this.components.contact?.addEventListener(\"click\", this.onContactClick);\n  }\n\n  unBindEvents() {\n    this.components.toggleBtn?.removeEventListener(\"click\", this.onToggleClick);\n    this.components.projects?.removeEventListener(\"click\", this.onProjectClick);\n    this.components.about?.removeEventListener(\"click\", this.onAboutClick);\n    this.components.home?.removeEventListener(\"click\", this.onHomeClick);\n    this.components.contact?.removeEventListener(\"click\", this.onContactClick);\n  }\n\n  /***\n   * @description on Click handler for hamburger menu closing or opening\n   */\n  toggleHamburgerMenu = (): void => {\n    console.log(this.components.navLinks);\n    if (!this.components.navLinks) return;\n\n    const isOpen =\n      this.components.navLinks.getAttribute(\"aria-expanded\") === \"true\";\n    const nextState = !isOpen;\n\n    this.components.navLinks.setAttribute(\"aria-expanded\", String(nextState));\n    this.components?.toggleBtn?.setAttribute(\n      \"aria-expanded\",\n      String(nextState)\n    );\n  };\n\n  setActiveTab = (tabId: TabKeys) => {\n    this.links.forEach((link) => {\n      link?.classList.remove(\"active\");\n    });\n\n    this.components[tabId]?.classList.add(\"active\");\n    this.state.activeTab = tabId;\n  };\n\n  toggleSections = <K extends NavigationEvents[\"elementId\"]>(\n    e: Event,\n    key: K\n  ) => {\n    if (this.state.activeTab == key) return;\n    e.preventDefault();\n\n    const hideEvent = {\n      elementId: key,\n      type: `${this.state.activeTab}:hide`,\n    } as NavigationEvents;\n    this.displayEventBus?.emit(hideEvent);\n\n    this.setActiveTab(key);\n\n    const showEvent = {\n      elementId: key,\n      type: `${key}:show`,\n    } as NavigationEvents;\n\n    console.log(`nvbar emits  ${showEvent.type}`);\n    this.displayEventBus?.emit(showEvent);\n  };\n\n  private onToggleClick = (e: Event) => this.toggleHamburgerMenu();\n  private onProjectClick = (e: Event) => this.toggleSections(e, \"projects\");\n  private onAboutClick = (e: Event) => this.toggleSections(e, \"about\");\n  private onHomeClick = (e: Event) => this.toggleSections(e, \"home\");\n  private onContactClick = (e: Event) => this.toggleSections(e, \"contact\");\n\n  setupBusListeners = () => {\n    if (!this.displayEventBus) return;\n\n    this.sections.forEach((id) => {\n      const showHandler = (e: NavigationEvents) => {\n        this.logger.onMount({ origin: `[${id}]-component` });\n      };\n      const hideHandler = (e: NavigationEvents) => {\n        this.logger.onUnmount({ origin: `[${id}]-component` });\n      };\n\n      this.displayEventBus?.on(`${id}:show`, showHandler);\n      this.displayEventBus?.on(`${id}:hide`, hideHandler);\n\n      if (!this.busHandlers) return;\n\n      this.busHandlers[`${id}:show`] = showHandler;\n      this.busHandlers[`${id}:hide`] = hideHandler;\n    });\n  };\n\n  disposeBusListeners = () => {\n    if (!this.displayEventBus) return;\n\n    this.sections.forEach((id) => {\n      if (!this.busHandlers) return;\n\n      this.displayEventBus?.off(`${id}:show`, this.busHandlers[`${id}:show`]);\n      this.displayEventBus?.off(`${id}:hide`, this.busHandlers[`${id}:hide`]);\n    });\n  };\n\n  set eventBusManager(eventBusManager: EventBusManager) {\n    this.displayEventBus = eventBusManager.displayBus;\n  }\n}\n"]}