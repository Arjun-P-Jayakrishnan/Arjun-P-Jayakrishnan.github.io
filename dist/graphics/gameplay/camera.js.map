{"version":3,"sources":["../../../src/graphics/gameplay/camera.ts"],"sourcesContent":["import { PerspectiveCamera, Vector3 } from \"three\";\r\n\r\nexport interface CameraProps {\r\n  camera: PerspectiveCamera;\r\n}\r\n\r\nexport interface CameraControls {\r\n  update: (playerPosition: Vector3) => void;\r\n}\r\n\r\nconst CAMERA_CONSTANTS = {\r\n  THIRD_PERSON: {\r\n    OFFSET: new Vector3(0, 5, -10),\r\n  },\r\n  FIRST_PERSON: {\r\n    OFFSET: new Vector3(0, 0, 0),\r\n  },\r\n};\r\n\r\nlet tempData: {\r\n  position: Vector3;\r\n} = {\r\n  position: new Vector3(0, 0, 0),\r\n};\r\n\r\nexport const createCameraControls = (props: CameraProps): CameraControls => {\r\n  const { camera } = props;\r\n  let isThirdPerson: boolean = true;\r\n\r\n  const update = (playerPosition: Vector3) => {\r\n    if (isThirdPerson) {\r\n      tempData.position.copy(playerPosition);\r\n      tempData.position.add(CAMERA_CONSTANTS.THIRD_PERSON.OFFSET);\r\n\r\n      camera.position.lerp(tempData.position, 0.1);\r\n      camera.lookAt(playerPosition);\r\n    } else {\r\n      /**TODO: FPV */\r\n    }\r\n  };\r\n\r\n  return {\r\n    update: update,\r\n  };\r\n};\r\n"],"mappings":";AAAA,SAA4B,eAAe;AAU3C,IAAM,mBAAmB;AAAA,EACvB,cAAc;AAAA,IACZ,QAAQ,IAAI,QAAQ,GAAG,GAAG,GAAG;AAAA,EAC/B;AAAA,EACA,cAAc;AAAA,IACZ,QAAQ,IAAI,QAAQ,GAAG,GAAG,CAAC;AAAA,EAC7B;AACF;AAEA,IAAI,WAEA;AAAA,EACF,UAAU,IAAI,QAAQ,GAAG,GAAG,CAAC;AAC/B;AAEO,IAAM,uBAAuB,CAAC,UAAuC;AAC1E,QAAM,EAAE,OAAO,IAAI;AACnB,MAAI,gBAAyB;AAE7B,QAAM,SAAS,CAAC,mBAA4B;AAC1C,QAAI,eAAe;AACjB,eAAS,SAAS,KAAK,cAAc;AACrC,eAAS,SAAS,IAAI,iBAAiB,aAAa,MAAM;AAE1D,aAAO,SAAS,KAAK,SAAS,UAAU,GAAG;AAC3C,aAAO,OAAO,cAAc;AAAA,IAC9B,OAAO;AAAA,IAEP;AAAA,EACF;AAEA,SAAO;AAAA,IACL;AAAA,EACF;AACF;","names":[]}