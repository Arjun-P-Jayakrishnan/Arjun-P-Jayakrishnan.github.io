{"version":3,"sources":["../src/components/website/header.ts"],"sourcesContent":["import { EventBus } from \"@utils/event_management/eventBus\";\r\nimport { EventBusManager } from \"@utils/event_management/eventBusFactory\";\r\nimport { DisplayEvents } from \"@utils/event_management/eventType\";\r\n\r\nconst template = document.createElement(\"template\");\r\n\r\ntemplate.innerHTML = `\r\n  <link rel=\"stylesheet\" href=\"/style/header.css\"/>\r\n  <nav class=\"navbar\">\r\n      <div class=\"logo\">Logo</div>\r\n      <button class=\"toggle-btn\">&#9776</button>\r\n      <ul class=\"nav-links\">\r\n          <li><a href=\"\" id=\"home\">Home</a></li>\r\n          <li><a href=\"\" id=\"about\">About</a></li>\r\n          <li><a href=\"\" id=\"projects\">Projects</a></li>\r\n          <li><a href=\"\" id=\"contact\">Contact</a></li>\r\n      </ul>\r\n  </nav>\r\n`;\r\n\r\ninterface State {\r\n  hamburgerMenu: {\r\n    isOpen: boolean;\r\n    isTransitioning: boolean;\r\n  };\r\n  isProjectsShown: boolean;\r\n}\r\n\r\nexport class Navbar extends HTMLElement {\r\n  toggleBtn: Element;\r\n  navLinks: Element;\r\n\r\n  state: State;\r\n  displayEventBus: EventBus<DisplayEvents> | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    const shadowRoot = this.attachShadow({ mode: \"open\" });\r\n\r\n    const clone = template.content.cloneNode(true);\r\n\r\n    shadowRoot.appendChild(clone);\r\n\r\n    this.toggleBtn = shadowRoot.querySelector(\".toggle-btn\")!;\r\n    this.navLinks = shadowRoot.querySelector(\".nav-links\")!;\r\n\r\n    this.state = {\r\n      hamburgerMenu: {\r\n        isOpen: false,\r\n        isTransitioning: false,\r\n      },\r\n      isProjectsShown: false,\r\n    };\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param e event triggered\r\n   * @returns\r\n   */\r\n  handleTransitionEnd = (e: Event) => {\r\n    if ((e as TransitionEvent).propertyName !== \"transform\") return;\r\n\r\n    if (this.navLinks!.classList.contains(\"closing\")) {\r\n      this.navLinks!.classList.remove(\"closing\");\r\n    }\r\n\r\n    this.state.hamburgerMenu.isTransitioning = false;\r\n  };\r\n  /**\r\n   *\r\n   * @param navLinks reference to navigation\r\n   */\r\n  toggleOpenState = (navLinks: Element): void => {\r\n    if (this.state.hamburgerMenu.isTransitioning) return;\r\n\r\n    this.state.hamburgerMenu.isTransitioning = true;\r\n\r\n    if (this.state.hamburgerMenu.isOpen) {\r\n      navLinks.classList.remove(\"open\");\r\n      navLinks.classList.add(\"closing\");\r\n      this.state.hamburgerMenu.isOpen = false;\r\n    } else {\r\n      navLinks.classList.add(\"open\");\r\n      navLinks.classList.remove(\"closing\");\r\n      this.state.hamburgerMenu.isOpen = true;\r\n    }\r\n  };\r\n\r\n  set eventBusManager(eventBusManager: EventBusManager) {\r\n    this.displayEventBus = eventBusManager.displayBus;\r\n\r\n    //update its local state to true if fired externally\r\n    this.displayEventBus.on(\"project:show\", (data) => {\r\n      this.handleShowEvent(data);\r\n    });\r\n\r\n    //update its local state to false if fired externally\r\n    this.displayEventBus.on(\"project:hide\", (data) => {\r\n      this.handleHideEvent(data);\r\n    });\r\n  }\r\n\r\n  handleShowEvent(_: any) {\r\n    this.state.isProjectsShown = true;\r\n\r\n  }\r\n\r\n  handleHideEvent(_: any) {\r\n    this.state.isProjectsShown = false;\r\n \r\n  }\r\n\r\n  /**\r\n   * @description called when the component is mounted\r\n   */\r\n  connectedCallback() {\r\n    this.toggleBtn!.addEventListener(\"click\", () => {\r\n      this.toggleOpenState(this.navLinks!);\r\n    });\r\n\r\n    this.navLinks!.addEventListener(\"transitionend\", (e) => {\r\n      this.handleTransitionEnd(e);\r\n    });\r\n\r\n    const projectLink = this.navLinks.querySelector(\"#projects\");\r\n\r\n    projectLink?.addEventListener(\"click\", (e) => {\r\n      e.preventDefault();\r\n\r\n      this.state.isProjectsShown = !this.state.isProjectsShown;\r\n\r\n      this.state.isProjectsShown\r\n        ? this.displayEventBus?.emit({ type: \"project:show\" })\r\n        : this.displayEventBus?.emit({ type: \"project:hide\" });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @description called when component is un mounted\r\n   */\r\n  disconnectedCallback() {\r\n    this.displayEventBus?.off(\"project:show\", (data) => {\r\n      this.handleShowEvent(data);\r\n    });\r\n    this.displayEventBus?.off(\"project:hide\", (data) => {\r\n      this.handleHideEvent(data);\r\n    });\r\n  }\r\n}\r\n"],"mappings":";AAIA,IAAM,WAAW,SAAS,cAAc,UAAU;AAElD,SAAS,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBd,IAAM,SAAN,cAAqB,YAAY;AAAA,EAOtC,cAAc;AACZ,UAAM;AA6BR;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAsB,CAAC,MAAa;AAClC,UAAK,EAAsB,iBAAiB,YAAa;AAEzD,UAAI,KAAK,SAAU,UAAU,SAAS,SAAS,GAAG;AAChD,aAAK,SAAU,UAAU,OAAO,SAAS;AAAA,MAC3C;AAEA,WAAK,MAAM,cAAc,kBAAkB;AAAA,IAC7C;AAKA;AAAA;AAAA;AAAA;AAAA,2BAAkB,CAAC,aAA4B;AAC7C,UAAI,KAAK,MAAM,cAAc,gBAAiB;AAE9C,WAAK,MAAM,cAAc,kBAAkB;AAE3C,UAAI,KAAK,MAAM,cAAc,QAAQ;AACnC,iBAAS,UAAU,OAAO,MAAM;AAChC,iBAAS,UAAU,IAAI,SAAS;AAChC,aAAK,MAAM,cAAc,SAAS;AAAA,MACpC,OAAO;AACL,iBAAS,UAAU,IAAI,MAAM;AAC7B,iBAAS,UAAU,OAAO,SAAS;AACnC,aAAK,MAAM,cAAc,SAAS;AAAA,MACpC;AAAA,IACF;AAtDE,UAAM,aAAa,KAAK,aAAa,EAAE,MAAM,OAAO,CAAC;AAErD,UAAM,QAAQ,SAAS,QAAQ,UAAU,IAAI;AAE7C,eAAW,YAAY,KAAK;AAE5B,SAAK,YAAY,WAAW,cAAc,aAAa;AACvD,SAAK,WAAW,WAAW,cAAc,YAAY;AAErD,SAAK,QAAQ;AAAA,MACX,eAAe;AAAA,QACb,QAAQ;AAAA,QACR,iBAAiB;AAAA,MACnB;AAAA,MACA,iBAAiB;AAAA,IACnB;AAAA,EACF;AAAA,EAEA,WAAW,qBAAqB;AAC9B,WAAO,CAAC;AAAA,EACV;AAAA,EAoCA,IAAI,gBAAgB,iBAAkC;AACpD,SAAK,kBAAkB,gBAAgB;AAGvC,SAAK,gBAAgB,GAAG,gBAAgB,CAAC,SAAS;AAChD,WAAK,gBAAgB,IAAI;AAAA,IAC3B,CAAC;AAGD,SAAK,gBAAgB,GAAG,gBAAgB,CAAC,SAAS;AAChD,WAAK,gBAAgB,IAAI;AAAA,IAC3B,CAAC;AAAA,EACH;AAAA,EAEA,gBAAgB,GAAQ;AACtB,SAAK,MAAM,kBAAkB;AAAA,EAE/B;AAAA,EAEA,gBAAgB,GAAQ;AACtB,SAAK,MAAM,kBAAkB;AAAA,EAE/B;AAAA;AAAA;AAAA;AAAA,EAKA,oBAAoB;AAClB,SAAK,UAAW,iBAAiB,SAAS,MAAM;AAC9C,WAAK,gBAAgB,KAAK,QAAS;AAAA,IACrC,CAAC;AAED,SAAK,SAAU,iBAAiB,iBAAiB,CAAC,MAAM;AACtD,WAAK,oBAAoB,CAAC;AAAA,IAC5B,CAAC;AAED,UAAM,cAAc,KAAK,SAAS,cAAc,WAAW;AAE3D,iBAAa,iBAAiB,SAAS,CAAC,MAAM;AAC5C,QAAE,eAAe;AAEjB,WAAK,MAAM,kBAAkB,CAAC,KAAK,MAAM;AAEzC,WAAK,MAAM,kBACP,KAAK,iBAAiB,KAAK,EAAE,MAAM,eAAe,CAAC,IACnD,KAAK,iBAAiB,KAAK,EAAE,MAAM,eAAe,CAAC;AAAA,IACzD,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAKA,uBAAuB;AACrB,SAAK,iBAAiB,IAAI,gBAAgB,CAAC,SAAS;AAClD,WAAK,gBAAgB,IAAI;AAAA,IAC3B,CAAC;AACD,SAAK,iBAAiB,IAAI,gBAAgB,CAAC,SAAS;AAClD,WAAK,gBAAgB,IAAI;AAAA,IAC3B,CAAC;AAAA,EACH;AACF;","names":[]}