{"version":3,"sources":["../../../src/utils/Logger.ts","../../../src/engine/managers/ContextManager.ts","../../../src/plugins/input/keyboard.ts","../../../src/config/constants.ts","../../../src/plugins/input/mouse.ts","../../../src/engine/managers/InputManager.ts","../../../src/plugins/backend/InMemoryBackend.ts","../../../src/engine/managers/storage/genericStorageUnit.ts","../../../src/engine/managers/storage/StorageManager.ts","../../../src/utils/dsl.ts","../../../src/components/about/background.ts","../../../src/components/about/experience.ts","../../../src/components/about/frameworks.ts","../../../src/components/about/resume.ts","../../../src/components/about/about.ts","../../../src/components/gallery/card.ts","../../../src/components/gallery/gallery.ts","../../../src/engine/core/ServiceRegistry.ts","../../../src/components/loading/loading.ts","../../../src/components/navbar/navbar.ts","../../../src/components/threejs/scene_inspector.ts","../../../src/engine/managers/DOMManger.ts","../../../src/config/asset_manifest.ts","../../../src/config/rooms.ts","../../../src/engine/core/LoadingManager.ts","../../../src/plugins/loader/fbx_loader.ts","../../../src/plugins/loader/glb_loader.ts","../../../src/plugins/loader/hdr_loader.ts","../../../src/gameplay/rooms/about/camera.ts","../../../src/gameplay/rooms/about/ground.ts","../../../src/gameplay/rooms/about/lights.ts","../../../src/gameplay/rooms/about/player.ts","../../../src/gameplay/rooms/about/room.ts","../../../src/gameplay/rooms/navigation/camera.ts","../../../src/materials/grid/grid-material.ts","../../../src/materials/grid/grid-fragment.ts","../../../src/materials/grid/grid-vertex.ts","../../../src/gameplay/rooms/navigation/ground.ts","../../../src/gameplay/modules/animation.ts","../../../src/gameplay/modules/fsm/player.ts","../../../src/gameplay/rooms/navigation/player.ts","../../../src/gameplay/rooms/navigation/room.ts","../../../src/gameplay/rooms/projects/camera.ts","../../../src/gameplay/rooms/projects/ground.ts","../../../src/gameplay/rooms/projects/lights.ts","../../../src/gameplay/rooms/projects/player.ts","../../../src/gameplay/rooms/projects/room.ts","../../../src/gameplay/RoomManager.ts","../../../src/gameplay/GameplayManager.ts","../../../src/engine/managers/ThreeJsManager.ts","../../../src/engine/managers/RenderManager.ts","../../../src/engine/core/Engine.ts","../../../src/engine/core/LifecycleScheduler.ts","../../../src/engine/core/events/eventBus.ts","../../../src/engine/core/events/EventBusManager.ts","../../../src/engine/core/state/observable.ts","../../../src/engine/core/state/globalState.ts","../../../src/engine/core/state/StateManager.ts","../../../src/engine/core/Bootstrap.ts"],"names":["createLogger","info","deltaTime","createThreeJsContextManager","internalContext","key","context","createKeyboardController","pressedKeys","normalizedKey","_handleKeyUp","e","_handleKeyDown","DEFAULT_CAMERA_OPTIONS","CANVAS_ID","MOUSE_CONFIG","createMouseController","sensitivityPitch","state","handleMouse","sideways","up_down","sensitivityYaw","inputs","createInputManager","createInMemoryBackend","map","payload","selectBackend","createStorageUnit","backend","id","createGlobalStorageManager","storage","keys","createStorageForType","unit","queueStep","fn","args","flattenTask","tasks","result","task","template","BackgroundPage","clone","data","summary","education","li","h3","ul","item","tag","skills","fragment","skill","ExperiencePage","button","index","collapsibleElement","header","title","duration","details","responsibilities","documentFragment","responsibility","_li","entry","dataList","FrameworkPage","web","mobile","languages","cmdLine","name","className","url","img","type","fragmentWeb","icon","fragmentMobile","fragmentLanguages","ResumePage","TabNames","AboutPage","background","experience","resume","frameworks","buttons","_","el","eventBusManager","offset","prevIndex","length","activeSlide","skillItem","experienceData","resumeData","frameworkData","PROJECT_CARD_CONSTANTS","ProjectCard","oldValue","newValue","props","description","image","_title","tags","children","span","github_link","ProjectGallery","projects","cardProps","card","createServiceRegistry","services","service","serviceRegistry","getServiceRegistry","LoadingModal","Navbar","nextState","tabId","link","hideEvent","showEvent","showHandler","hideHandler","SceneInspector","resizer","panel","newWidth","scene","objects","materialsMap","traverse","object","node","child","mat","treeNode","label","treeRoot","nodes","isCollapsed","nodeList","nodeRoot","_loadJSON","loadAboutData","about","err","loadProjectData","projectGallery","createDomManager","flags","serviceRegsitry","lifecycleScheduler","logger","loadingModal","navbar","sceneInspector","selector","element","FILE_CONSTANTS","PLAYER_ASSET","NAVIGATION_ROOM_ASSETS","ABOUT_ROOM_ASSETS","PROJECTS_ROOM_ASSETS","NAVIGATION_ROOM_OPTIONS","ABOUT_ROOM_OPTIONS","PROJECTS_ROOM_OPTIONS","createFBXLoader","loadingManager","storageManager","fbxLoader","FBXLoader","_loadMesh","metaData","model","assets","promises","asset","createGLBLoader","gltfLoader","GLTFLoader","dracoLoader","DRACOLoader","createHDRLoader","renderer","pmremGenerator","PMREMGenerator","rgbeLoader","RGBELoader","_loadHDRTexture","reject","resolve","texData","envMap","load","createLoader","loaderEventBus","stateManager","manager","LoadingManager","isConfigured","glbLoader","hdrLoader","assetQueue","_configureLoadingManager","itemsLoaded","itemsTotal","pushToRespectiveLoaderQueue","_configurePlugins","createCameraManager","camera","target","Vector3","createGround","reference","ground","createLighting","dirLight","ambientLight","DirectionalLight","AmbientLight","PCFShadowMap","createPlayer","animations","castShadow","player","playerRoot","AnimationMixer","createAboutRoom","orbit","components","group","TPV_CONFIG","tempPosition","tempOffset","tempLookTarget","clampRotation","yaw","pitch","MathUtils","computeThirdPersonOffset","spherical","lerpVector","from","to","alpha","Spherical","setCamera","mode","mount","activate","updateRotation","delta","clamped","updateThirdPerson","updateFirstPerson","playerPos","GridFragment","GridVertex","createGridMaterial","ShaderMaterial","cameraPos","references","gridMat","createAnimationController","mixer","actions","crossFadeDuration","currentAnimation","blendTime","currentAction","animationName","blendDuration","nextAction","Idle","Walk","Run","createFSMController","animationController","keyboard","shiftPressed","idle","walk","run","currentState","update","playerFSM","isMoving","isShiftPressed","_getState","newState","changeState","PLAYER_CONSTANTS","InputManager","controllers","tempData","fsmController","updateMouse","mouse","updateKeyboard","VELOCITY_DEADZONE","inputDirection","decay","updateControllers","Euler","createNavigationRoom","contextManager","room","isMounted","points","camPath","CatmullRomCurve3","t","isComplete","position","lookAt","groups","excludeShadow","mixers","createProjectRoom","createRoomController","loader","rooms","roomAssets","activeRoom","activeRoomKey","initializeLoader","instantiateRoom","loadRoom","loadItems","switchRoom","unmount","transitionRooms","deactivateRoom","createGameplayManager","input","clock","Clock","roomController","bind","updateDeltaTime","unbind","createThreeJsInstance","fov","aspectRatio","near","far","Scene","PerspectiveCamera","WebGLRenderer","animationCallback","animationFrameId","mountRendererToDom","elementId","container","OrbitControls","exposeToContext","callback","loop","handleResize","height","width","handleDebug","debugEventBus","createRenderManager","threeJsManager","threeJsContext","gameplay","_handleResize","_handleDebug","addEventListeners","removeEventListeners","createEngine","domManager","renderManager","onInit","onLoad","onMount","onUpdate","onUnmount","onDispose","createLifecycleScheduler","queue","start","resolved","createEventBus","listeners","_on","_off","event","wrapper","createEventBusManager","loadingBus","displayBus","debugBus","switchTabBus","viewBus","createObservable","value","scheduled","_value","createGlobalState","stateMap","observable","createGlobalStateManager","bootstrap","registry"],"mappings":"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","file":"Bootstrap.js","sourcesContent":["import { Lifecycle } from \"types/lifecycle.types\";\n\ntype LoggerInfo = { origin: string };\n\ninterface Logger\n  extends Lifecycle<\n    [LoggerInfo], //OnLoad\n    [LoggerInfo], //onMount\n    [deltaTime: number, info: LoggerInfo], //onUpdate\n    [LoggerInfo], //onUnmount\n    [LoggerInfo], //onDestroy\n    false\n  > {}\n\nconst createLogger = (): Logger => {\n  const onLoad = (info: LoggerInfo) => {\n    console.log(`♻️ [${info.origin}] is being loaded....`);\n  };\n\n  const onMount = (info: LoggerInfo) => {\n    console.log(`➕ [${info.origin}] is being mounted...`);\n  };\n\n  const onUpdate = (deltaTime: number, info: LoggerInfo) => {\n    console.log(\n      `🔄 [${info.origin}] is being updated.. with ${deltaTime.toFixed(2)}`\n    );\n  };\n\n  const onUnmount = (info: LoggerInfo) => {\n    console.log(`➖ [${info.origin}] is being unmounted`);\n  };\n\n  const onDestroy = (info: LoggerInfo) => {\n    console.log(`🗑️ [${info.origin}] is being disposed`);\n  };\n\n  return {\n    onLoad,\n    onMount,\n    onUpdate,\n    onUnmount,\n    onDestroy,\n  };\n};\n\nexport { createLogger };\nexport type { Logger };\n","import { PerspectiveCamera, Scene, WebGLRenderer } from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n\nexport interface ThreeJsContext {\n  scene: Scene | undefined;\n  renderer: WebGLRenderer | undefined;\n  camera: PerspectiveCamera | undefined;\n  orbit: OrbitControls | undefined;\n}\n\nexport interface ThreeJsContextManager {\n  /** Injects three js context */\n  set: <K extends keyof ThreeJsContext>(\n    key: K,\n    context: ThreeJsContext[K]\n  ) => void;\n\n  /**Safely access a property from context */\n  get: <K extends keyof ThreeJsContext>(\n    key: K\n  ) => ThreeJsContext[K] | undefined;\n\n  /** reset context to allow re-initailization */\n  clear: () => void;\n}\n\n/** Interface to react with three js shared context */\nexport const createThreeJsContextManager = (): ThreeJsContextManager => {\n  let internalContext: ThreeJsContext = {\n    camera: undefined,\n    orbit: undefined,\n    renderer: undefined,\n    scene: undefined,\n  };\n\n  const get = <K extends keyof ThreeJsContext>(key: K): ThreeJsContext[K] => {\n    if (!internalContext[key])\n      throw new Error(`Error : Accessing context when its not initialized`);\n\n    return internalContext[key];\n  };\n\n  const set = <K extends keyof ThreeJsContext>(\n    key: K,\n    context: ThreeJsContext[K]\n  ): void => {\n    if (internalContext[key] !== undefined)\n      throw new Error(\n        `Error : Trying to overwrite already initialized context`\n      );\n\n    internalContext[key] = context;\n  };\n\n  const clear = () => {\n    internalContext = {\n      camera: undefined,\n      orbit: undefined,\n      renderer: undefined,\n      scene: undefined,\n    };\n  };\n\n  return {\n    get: get,\n    set: set,\n    clear: clear,\n  };\n};\n","import { InputPlugin } from \"types/plugin.types\";\n\nexport interface KeyboardInput extends InputPlugin {\n  getPressedKeys: () => string[];\n  isKeyPressed: (key: string) => boolean;\n}\n\nexport const createKeyboardController = (): KeyboardInput => {\n  const pressedKeys = new Set<string>();\n\n  const normalizedKey = (key: string) => key.toLowerCase();\n\n  const _handleKeyUp = (e: KeyboardEvent) => {\n    pressedKeys.delete(normalizedKey(e.key));\n  };\n\n  const _handleKeyDown = (e: KeyboardEvent) => {\n    pressedKeys.add(normalizedKey(e.key));\n  };\n\n  const mountEvents = () => {\n    window.addEventListener(\"keyup\", _handleKeyUp);\n    window.addEventListener(\"keydown\", _handleKeyDown);\n  };\n\n  const unmountEvents = () => {\n    window.removeEventListener(\"keyup\", _handleKeyUp);\n    window.removeEventListener(\"keydown\", _handleKeyDown);\n    pressedKeys.clear();\n  };\n\n  const getPressedKeys = (): string[] => {\n    return Array.from(pressedKeys);\n  };\n\n  const isKeyPressed = (key: string) => {\n    return pressedKeys.has(normalizedKey(key));\n  };\n\n  return {\n    onMount: mountEvents,\n    onUnmount: unmountEvents,\n    getPressedKeys: getPressedKeys,\n    isKeyPressed: isKeyPressed,\n  };\n};\n","const MAX_TASKS_PER_FRAME = 5;\nconst MAX_FRAME_BUCKET_TIME = 20; //ms\n\nconst DEFAULT_CAMERA_OPTIONS = {\n  fov: 75,\n  aspectRatio: window.innerWidth / window.innerHeight,\n  near: 0.1,\n  far: 1000,\n} as const;\n\nconst CANVAS_ID = \"game-engine\";\n\nconst MOUSE_CONFIG = {\n  SENSITIVITY: { sensitivityYaw: 0.003, sensitivityPitch: 0.001 },\n};\n\nexport {\n  CANVAS_ID,\n  DEFAULT_CAMERA_OPTIONS,\n  MAX_FRAME_BUCKET_TIME,\n  MAX_TASKS_PER_FRAME,\n  MOUSE_CONFIG,\n};\n","import { MOUSE_CONFIG } from \"config/constants\";\nimport { InputPlugin } from \"types/plugin.types\";\n\ninterface MouseInput extends InputPlugin {\n  /**Gets the delta Rotation */\n  getRotation: () => { pitch: number; yaw: number };\n}\n\ninterface State {\n  mouse: {\n    lastX: number;\n    lastY: number;\n  };\n\n  rotation: {\n    pitch: number;\n    yaw: number;\n  };\n}\n\nexport const createMouseController = (): MouseInput => {\n  const { sensitivityYaw, sensitivityPitch } = MOUSE_CONFIG.SENSITIVITY;\n\n  let state: State = {\n    mouse: {\n      lastX: 0,\n      lastY: 0,\n    },\n    rotation: {\n      pitch: 0,\n      yaw: 0,\n    },\n  };\n\n  const handleMouse = (e: MouseEvent) => {\n    state.rotation.pitch += e.movementY;\n    state.rotation.yaw += e.movementX;\n  };\n\n  const mountEvents = () => {\n    document.addEventListener(\"mousemove\", handleMouse);\n  };\n\n  const unmountEvents = () => {\n    document.removeEventListener(\"mousemove\", handleMouse);\n  };\n\n  const getRotation = () => {\n    const sideways = state.rotation.yaw;\n    const up_down = state.rotation.pitch;\n\n    state.rotation.pitch = 0;\n    state.rotation.yaw = 0;\n\n    return {\n      yaw: -sensitivityYaw * sideways,\n      pitch: sensitivityPitch * up_down,\n    };\n  };\n\n  return {\n    onMount: mountEvents,\n    onUnmount: unmountEvents,\n    getRotation: getRotation,\n  };\n};\n\nexport type { MouseInput };\n","import {\n  createKeyboardController,\n  KeyboardInput,\n} from \"plugins/input/keyboard\";\nimport { createMouseController, MouseInput } from \"../../plugins/input/mouse\";\n\ninterface Inputs {\n  mouse: MouseInput;\n  keyboard: KeyboardInput;\n}\n\nexport interface InputManager {\n  onInit: () => void;\n  onUnmount: () => void;\n  getController: <K extends keyof Inputs>(key: K) => Inputs[K] | null;\n}\n\nlet inputs: Inputs | null = null;\n\nexport const createInputManager = (): InputManager => {\n  /**\n   *\n   */\n  const mount = () => {\n    if (!inputs) {\n      inputs = {\n        mouse: createMouseController(),\n        keyboard: createKeyboardController(),\n      };\n\n      inputs.mouse.onMount();\n      inputs.keyboard.onMount();\n    }\n  };\n\n  /**\n   *\n   */\n  const unmount = () => {\n    if (!inputs) return;\n\n    inputs.mouse.onUnmount();\n    inputs.keyboard.onUnmount();\n  };\n\n  /**\n   *\n   * @param key which plugin are you looking for\n   * @returns the controller if it exists\n   */\n  const getController = <K extends keyof Inputs>(key: K): Inputs[K] | null => {\n    return inputs ? inputs[key] : null;\n  };\n\n  return {\n    onInit: mount,\n    getController: getController,\n    onUnmount: unmount,\n  };\n};\n","import { StorageBackend } from \"types/plugin.types\";\n\nexport const createInMemoryBackend = <T>(): StorageBackend<T> => {\n  const map = new Map<keyof T, T[keyof T]>();\n\n  const _get = <K extends keyof T>(key: K): T[K] | undefined => {\n    return map.get(key) as T[K] | undefined;\n  };\n\n  const _set = <K extends keyof T>(key: K, payload: T[K]): void => {\n    map.set(key, payload);\n  };\n\n  const _clear = (): void => {\n    map.clear();\n  };\n\n  const _delete = <K extends keyof T>(key: K): void => {\n    map.delete(key);\n  };\n\n  const _keys = (): IterableIterator<keyof T> => {\n    return map.keys();\n  };\n\n  return {\n    get: _get,\n    set: _set,\n    clear: _clear,\n    delete: _delete,\n    keys: _keys,\n  };\n};\n","import { StorageBackend } from \"types/plugin.types\";\nimport { createInMemoryBackend } from \"../../../plugins/backend/InMemoryBackend\";\nimport { BackendTypes, GenericStorageUnit } from \"./storageTypes\";\n\nconst selectBackend = <T>(key: BackendTypes): StorageBackend<T> => {\n  const backend = createInMemoryBackend<T>();\n\n  return backend;\n};\n\n//T is the storage structure of object\n//player {animations:Type,model:type etc}\nexport const createStorageUnit = <T>(): GenericStorageUnit<T> => {\n  /** string mapped  */\n  const backend = selectBackend<T>(\"InMemory\");\n\n  const store = <K extends keyof T>(id: K, payload: T[K]): void => {\n    backend.set(id, payload);\n  };\n\n  const retrieve = <K extends keyof T>(id: K): T[K] | undefined => {\n    return backend.get(id) as T[K] | undefined;\n  };\n\n  const deleteKey = <K extends keyof T>(id: K): void => {\n    backend.delete(id);\n  };\n\n  const has = <K extends keyof T>(id: K): boolean => {\n    if (!backend.get(id)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const clear = (): void => {\n    backend.clear();\n  };\n\n  const size = (): number => {\n    return backend.keys.length;\n  };\n\n  return {\n    store: store,\n    retrieve: retrieve,\n    clear: clear,\n    delete: deleteKey,\n    has: has,\n    size: size,\n  };\n};\n","import {\n  JSONStorageUnit,\n  ObjectStorageUnit,\n  StorageKey,\n  StorageMap,\n} from \"types/managers.types\";\nimport { createStorageUnit } from \"./genericStorageUnit\";\nimport { GenericStorageUnit, GlobalStorageManager } from \"./storageTypes\";\n\nexport const createGlobalStorageManager = (): GlobalStorageManager => {\n  let storage: Partial<{\n    [K in StorageKey]: GenericStorageUnit<StorageMap[K]>;\n  }> = {};\n\n  const keys: StorageKey[] = [\"model\", \"json\"];\n\n  const createStorageForType = (key: StorageKey) => {\n    switch (key) {\n      case \"model\":\n        storage[key] = createStorageUnit<Record<string, ObjectStorageUnit>>();\n        break;\n      case \"json\":\n        storage[key] = createStorageUnit<Record<string, JSONStorageUnit>>();\n        break;\n    }\n  };\n\n  const inflate = () => {\n    keys.forEach(<K extends StorageKey>(key: K) => {\n      createStorageForType(key);\n    });\n  };\n\n  const clear = () => {\n    Object.values(storage).forEach((unit) => {\n      unit.clear();\n    });\n  };\n\n  const getStorage = <K extends StorageKey>(\n    key: K\n  ): GenericStorageUnit<StorageMap[K]> => {\n    if (!storage[key]) {\n      createStorageForType(key);\n    }\n\n    return storage[key]!;\n  };\n\n  return {\n    inflate: inflate,\n    clear: clear,\n    getStorage: getStorage,\n  };\n};\n","//Domain Specific Language\n\nimport { Task } from \"types/lifecycle.types\";\n\ntype Step<F extends (...args: any[]) => any> = [F, ...Parameters<F>];\n\nfunction queueStep<F extends (...args: any[]) => any>(\n  fn: F,\n  ...args: Parameters<F>\n): Task {\n  return () => fn(...args);\n}\n\nfunction flattenTask(tasks: (Task | Task[])[]): Task[] {\n  const result: Task[] = [];\n\n  for (const task of tasks) {\n    if (Array.isArray(task)) {\n      result.push(...flattenTask(task));\n    } else {\n      result.push(task);\n    }\n  }\n\n  return result;\n}\n\nexport { flattenTask, queueStep };\n","const template = document.createElement(\"template\");\ntemplate.innerHTML = `\n    <link rel=\"stylesheet\" href=\"/style/background.css\">\n    <div class=\"background\">\n       <section class=\"summary\">\n          <h2 class=\"summary--title\">Title</h2>\n          <p class=\"summary--description\">Description</p>\n       </section>\n\n       <section class=\"education\">\n          <h2 class=\"education--title\">🎓 Education</h2>\n          <article class=\"education--item\">\n            <h3 class=\"education--course\">Course</h3>\n            <h4 class=\"education--institute\">Institute Name</h4>\n            <p class=\"education--description\">Description</p>\n          </article>\n       </section>\n\n       <section class=\"skills\">\n        <h2 class=\"skills-title\">🛠 Skills</h2>\n\n        <ul class=\"skills--list\">\n            <li class=\"skill--category\">\n                <h3 class=\"skill--category--title\">Title</h3>\n                <ul class=\"skill--tags\">\n                  <li class=\"skill--item\">Skill 1</li>\n                  <li class=\"skill--item\">Skill 2</li>\n                  <li class=\"skill--item\">Skill 3</li>\n                  <li class=\"skill--item\">Skill 4</li>\n                  <li class=\"skill--item\">Skill 5</li>\n                  <li class=\"skill--item\">Skill 6</li>\n\n                </ul>\n            </li>\n        </ul>\n       </section>\n    </div>\n`;\n\ninterface Components {\n  summary: {\n    root: HTMLElement | null;\n    title: HTMLHeadingElement | null;\n    description: HTMLParagraphElement | null;\n  };\n  education: {\n    course: HTMLHeadingElement | null;\n    institution: HTMLHeadingElement | null;\n    description: HTMLParagraphElement | null;\n  };\n  skillsRoot: HTMLUListElement;\n}\n\nexport interface Skill {\n  title: string;\n  tags: string[];\n}\n\nexport interface Summary {\n  title: string;\n  description: string;\n}\n\nexport interface Education {\n  institute: string;\n  course: string;\n  description: string;\n}\n\nexport class BackgroundPage extends HTMLElement {\n  root: ShadowRoot;\n  components: Components;\n\n  constructor() {\n    super();\n    this.root = this.attachShadow({ mode: \"open\" });\n\n    const clone = template.content.cloneNode(true);\n\n    this.root.appendChild(clone);\n\n    this.components = {\n      summary: {\n        root: this.root.querySelector(\".summary\") as HTMLElement,\n        title: this.root.querySelector(\".summary--title\") as HTMLHeadingElement,\n        description: this.root.querySelector(\n          \".summary--description\"\n        ) as HTMLParagraphElement,\n      },\n      education: {\n        course: this.root.querySelector(\n          \".education--course\"\n        ) as HTMLHeadingElement,\n        institution: this.root.querySelector(\n          \".education--institute\"\n        ) as HTMLHeadingElement,\n        description: this.root.querySelector(\n          \".education--description\"\n        ) as HTMLParagraphElement,\n      },\n\n      skillsRoot: this.root.querySelector(\".skills--list\") as HTMLUListElement,\n    };\n  }\n\n  connectedCallback() {}\n\n  disconnectedCallback() {}\n\n  set Summary(data: Summary) {\n    console.log(\"update summary\");\n    const summary = this.components.summary;\n\n    if (!summary.title) return;\n    summary.title.textContent = data.title;\n\n    if (!summary.description) return;\n    summary.description.textContent = data.description;\n  }\n\n  set Education(data: Education) {\n    console.log(\"update education\");\n    const education = this.components.education;\n\n    if (!education.course) return;\n    education.course.textContent = data.course;\n\n    if (!education.institution) return;\n    education.institution.textContent = data.institute;\n\n    if (!education.description) return;\n    education.description.textContent = data.description;\n  }\n\n  private addSkill(data: Skill): HTMLLIElement {\n    console.log(\"update skills\");\n\n    const li = document.createElement(\"li\");\n    li.classList.add(\"skill--category\");\n\n    const h3 = document.createElement(\"h3\");\n    h3.classList.add(\"skill--category--title\");\n    h3.textContent = data.title;\n    li.appendChild(h3);\n\n    const ul = document.createElement(\"ul\");\n    ul.classList.add(\"skill--tags\");\n    li.appendChild(ul);\n\n    data.tags.forEach((item) => {\n      const tag = document.createElement(\"li\");\n      tag.classList.add(\"skill--item\");\n      tag.textContent = item;\n      ul.appendChild(tag);\n    });\n\n    return li;\n  }\n\n  set Skills(skills: Array<Skill>) {\n    const fragment = document.createDocumentFragment();\n    skills.forEach((skill) => {\n      const li = this.addSkill(skill);\n\n      fragment.appendChild(li);\n    });\n\n    this.components.skillsRoot.innerHTML = \"\";\n    this.components.skillsRoot.appendChild(fragment);\n  }\n}\n","const template = document.createElement(\"template\");\ntemplate.innerHTML = `\n    <link rel=\"stylesheet\" href=\"/style/experience.css\">\n    <div class=\"experience\">\n        <ul class=\"job-list\">\n          <li class=\"job-item\">\n            <div class=\"job-header\">\n              <h3 class=\"job-title\">Title</h2>\n              <h5 class=\"job-duration\">Duration</h2>\n            </div>\n            <div class=\"job-details\">\n              <ul class=\"job-responsibilities\">\n                <li class=\"job-responsibility-item\">Done task which improved some item</li>\n              </ul>\n            </div>\n          </li>\n        </ul>\n    </div>\n`;\n\ninterface Components {\n  root: HTMLDivElement | null;\n  jobList: HTMLUListElement | null;\n}\n\nexport interface JobExperience {\n  title: string;\n  duration: string;\n  responsibilities: string[];\n}\n\nexport class ExperiencePage extends HTMLElement {\n  root: ShadowRoot;\n  components: Components;\n  events: Record<\n    string,\n    { button: HTMLButtonElement; callback: (e: Event) => void }\n  > = {};\n\n  constructor() {\n    super();\n    this.root = this.attachShadow({ mode: \"open\" });\n\n    const clone = template.content.cloneNode(true);\n\n    this.root.appendChild(clone);\n\n    this.components = {\n      root: this.root.querySelector(\".experience\") as HTMLDivElement,\n      jobList: this.root.querySelector(\".job-list\") as HTMLUListElement,\n    };\n  }\n\n  connectedCallback() {}\n\n  disconnectedCallback() {}\n\n  private addEvent(\n    button: HTMLButtonElement,\n    index: number,\n    collapsibleElement: HTMLDivElement\n  ) {\n    const fn = (e: Event) => {\n      collapsibleElement.classList.toggle(\"hidden\");\n      console.log(\"button is clicked \", index);\n    };\n    this.events[`button :${index}`] = {\n      button: button,\n      callback: fn,\n    };\n    button.addEventListener(\"click\", fn);\n    console.log(\"attaching event\", index);\n  }\n\n  private addJobExperience(data: {\n    title: string;\n    duration: string;\n    responsibilities: string[];\n    index: number;\n  }): HTMLLIElement {\n    const li = document.createElement(\"li\");\n    li.classList.add(\"job-item\");\n\n    const header = document.createElement(\"div\");\n    header.classList.add(\"job-header\");\n\n    const title = document.createElement(\"h3\");\n    title.classList.add(\"job-title\");\n    title.textContent = data.title;\n\n    const duration = document.createElement(\"h5\");\n    duration.classList.add(\"job-duration\");\n    duration.textContent = data.duration;\n\n    header.appendChild(title);\n    header.appendChild(duration);\n    // header.appendChild(button);\n\n    const details = document.createElement(\"div\");\n    details.classList.add(\"job-details\");\n    details.classList.add(\"hidden\");\n\n    // this.addEvent(button, data.index, details);\n\n    const responsibilities = document.createElement(\"ul\");\n    responsibilities.classList.add(\"job-responsibilities\");\n\n    const documentFragment = document.createDocumentFragment();\n\n    data.responsibilities.forEach((responsibility) => {\n      const _li = document.createElement(\"li\");\n      _li.classList.add(\"job-responsibility-item\");\n      _li.textContent = responsibility;\n      documentFragment.appendChild(_li);\n    });\n\n    responsibilities.appendChild(documentFragment);\n    details.appendChild(responsibilities);\n    li.appendChild(header);\n    li.appendChild(details);\n\n    return li;\n  }\n\n  private removeEvents() {\n    console.log(\"remove all\");\n    Object.entries(this.events).forEach((entry) => {\n      entry[1].button.removeEventListener(\"click\", entry[1].callback);\n    });\n  }\n\n  private inflateCarousel(dataList: Array<JobExperience>) {\n    if (!this.components.jobList) return;\n    this.removeEvents();\n    this.components.jobList.innerHTML = \"\";\n\n    dataList.forEach((data, index) => {\n      this.components.jobList?.appendChild(\n        this.addJobExperience({\n          ...data,\n          index: index,\n        })\n      );\n    });\n  }\n\n  set Experience(data: Array<JobExperience>) {\n    console.log(\"experience\", data);\n    this.inflateCarousel(data);\n  }\n}\n","import { EventBus } from \"@events/eventBus\";\nimport { NavigationEvents } from \"types/eventType\";\n\nconst template = document.createElement(\"template\");\n\ntemplate.innerHTML = `\n    <link rel=\"stylesheet\" href=\"/style/frameworks.css\">\n    <div class=\"frameworks\">\n      <div class=\"framework__navigation\">\n        <button class=\"nav-btn nav--web\">Web</button>\n        <button class=\"nav-btn nav--mobile\">Mobile</button>\n        <button class=\"nav-btn nav--languages\">Languages</button>\n        <button class=\"nav-btn nav--cli\">CLI</button>\n      </div>\n\n      <div class=\"framework__contents\">\n        <div class=\"web\">\n          <ul class=\"web__content\"></ul>\n        </div>\n        <div class=\"mobile\">\n          <ul class=\"mobile__content\"></ul>\n        </div>\n        <div class=\"languages\">\n          <ul class=\"languages__content\"></ul>\n        </div>\n        <div class=\"cli\">\n          <ul class=\"cli__content\"></ul>\n        </div>\n      </div>\n    </div>\n`;\n\ninterface Navigation {\n  web: HTMLButtonElement | null;\n  mobile: HTMLButtonElement | null;\n  language: HTMLButtonElement | null;\n  cli: HTMLButtonElement | null;\n}\n\ninterface Components {\n  framework: HTMLUListElement | null;\n  web: HTMLUListElement | null;\n  mobile: HTMLUListElement | null;\n  languages: HTMLUListElement | null;\n  cli: HTMLUListElement | null;\n}\n\nexport interface FrameworkData {\n  web: any;\n  mobile: any;\n  languages: any;\n  cli: any;\n}\n\nexport class FrameworkPage extends HTMLElement {\n  root: ShadowRoot;\n  displayBus: EventBus<NavigationEvents> | null = null;\n  components: Components;\n  navigation: Navigation;\n\n  constructor() {\n    super();\n    this.root = this.attachShadow({ mode: \"open\" });\n\n    const clone = template.content.cloneNode(true);\n\n    this.root.appendChild(clone);\n\n    this.components = {\n      framework: this.root.querySelector(\".frameworks\"),\n      web: this.root.querySelector(\".web__content\"),\n      mobile: this.root.querySelector(\".mobile__content\"),\n      languages: this.root.querySelector(\".languages__content\"),\n      cli: this.root.querySelector(\".cli__content\"),\n    };\n\n    this.navigation = {\n      web: this.root.querySelector(\".nav--web\"),\n      mobile: this.root.querySelector(\".nav--mobile\"),\n      language: this.root.querySelector(\".nav--languages\"),\n      cli: this.root.querySelector(\".nav--cli\"),\n    };\n  }\n\n  connectedCallback() {\n    this.bindEvents();\n  }\n\n  disconnectedCallback() {\n    this.unbindEvents();\n  }\n\n  webClick = (e: Event) => this.openPage(0);\n  mobileClick = (e: Event) => this.openPage(1);\n  languagesClick = (e: Event) => this.openPage(2);\n  cliClick = (e: Event) => this.openPage(3);\n\n  private openPage(index: number) {\n    const web = this.root.querySelector(\".web\");\n    const mobile = this.root.querySelector(\".mobile\");\n    const languages = this.root.querySelector(\".languages\");\n    const cmdLine = this.root.querySelector(\".cli\");\n\n    web?.classList.toggle(\"active\", false);\n    mobile?.classList.toggle(\"active\", false);\n    languages?.classList.toggle(\"active\", false);\n    cmdLine?.classList.toggle(\"active\", false);\n\n    if (index === 0) {\n      web?.classList.toggle(\"active\", true);\n    } else if (index == 1) {\n      mobile?.classList.toggle(\"active\", true);\n    } else if (index == 2) {\n      languages?.classList.toggle(\"active\", true);\n    } else if (index == 3) {\n      cmdLine?.classList.toggle(\"active\", true);\n    }\n  }\n\n  private bindEvents = () => {\n    if (this.navigation.web) {\n      this.navigation.web.addEventListener(\"click\", this.webClick);\n    }\n\n    if (this.navigation.mobile) {\n      this.navigation.mobile.addEventListener(\"click\", this.mobileClick);\n    }\n\n    if (this.navigation.language) {\n      this.navigation.language.addEventListener(\"click\", this.languagesClick);\n    }\n\n    if (this.navigation.cli) {\n      this.navigation.cli.addEventListener(\"click\", this.cliClick);\n    }\n  };\n\n  private unbindEvents = () => {\n    if (this.navigation.web) {\n      this.navigation.web.removeEventListener(\"click\", this.webClick);\n    }\n\n    if (this.navigation.mobile) {\n      this.navigation.mobile.removeEventListener(\"click\", this.mobileClick);\n    }\n\n    if (this.navigation.language) {\n      this.navigation.language.removeEventListener(\n        \"click\",\n        this.languagesClick\n      );\n    }\n\n    if (this.navigation.cli) {\n      this.navigation.cli.removeEventListener(\"click\", this.cliClick);\n    }\n  };\n\n  private addIcon(\n    name: string,\n    className: string[],\n    url: string\n  ): HTMLLIElement {\n    const li = document.createElement(\"li\");\n\n    // const icon = document.createElement(\"i\");\n    // icon.classList.add(...className);\n\n    // const span = document.createElement(\"span\");\n    // span.textContent = name;\n\n    // li.appendChild(icon);\n    // li.appendChild(span);\n\n    const img = document.createElement(\"img\");\n    img.setAttribute(\"src\", url);\n    img.setAttribute(\"alt\", name);\n    img.classList.add(\"framework_logo\");\n\n    li.appendChild(img);\n\n    return li;\n  }\n\n  private inflate(data: Array<{ name: string; link: string }>, type: string) {\n    switch (type) {\n      case \"web\":\n        const fragmentWeb = document.createDocumentFragment();\n        data.forEach((icon) => {\n          fragmentWeb.appendChild(this.addIcon(icon.name, [], icon.link));\n        });\n        this.components.web?.appendChild(fragmentWeb);\n        break;\n      case \"mobile\":\n        const fragmentMobile = document.createDocumentFragment();\n        data.forEach((icon) => {\n          fragmentMobile.appendChild(this.addIcon(icon.name, [], icon.link));\n        });\n        this.components.mobile?.appendChild(fragmentMobile);\n        break;\n      case \"languages\":\n        const fragmentLanguages = document.createDocumentFragment();\n        data.forEach((icon) => {\n          fragmentLanguages.appendChild(this.addIcon(icon.name, [], icon.link));\n        });\n        this.components.languages?.appendChild(fragmentLanguages);\n        break;\n      case \"command-line\":\n        const fragment = document.createDocumentFragment();\n        data.forEach((icon) => {\n          fragment.appendChild(this.addIcon(icon.name, [], icon.link));\n        });\n\n        this.components.cli?.appendChild(fragment);\n        break;\n      default:\n        console.warn(\"The types doesnt match for frameworks\");\n    }\n  }\n\n  set FrameworkData(data: FrameworkData) {\n    this.inflate(data[\"web\"], \"web\");\n    this.inflate(data[\"mobile\"], \"mobile\");\n    this.inflate(data[\"languages\"], \"languages\");\n    this.inflate(data[\"cli\"], \"command-line\");\n  }\n}\n","const template = document.createElement(\"template\");\ntemplate.innerHTML = `\n    <link rel=\"stylesheet\" href=\"/style/resume.css\">\n    <div class=\"resume\">\n      <div class=\"resume__layout\">\n        <div class=\"resume__pdf\">\n          <iframe \n            src=\"/assets/pdf/my_resume.pdf\"\n            title=\"Resume PDF Viewer\"\n            loading=\"lazy\"\n          >\n            Your browser does not support embedded PDFs. \n            <a href=\"/assets/pdf/my_resume.pdf\" download>Download the resume</a>.\n          </iframe>\n        </div>\n        <a \n          class=\"download\" \n          href=\"/assets/pdf/my_resume.pdf\" \n          download \n          title=\"Download a copy of the resume\"\n        >\n          📄 Download Resume\n        </a>\n      </div> \n    </div>\n`;\n\nexport class ResumePage extends HTMLElement {\n  root: ShadowRoot;\n\n  constructor() {\n    super();\n    this.root = this.attachShadow({ mode: \"open\" });\n    const clone = template.content.cloneNode(true);\n    this.root.appendChild(clone);\n  }\n\n  connectedCallback() {}\n\n  disconnectedCallback() {}\n}\n","import { EventBus } from \"@events/eventBus\";\nimport { EventBusManager } from \"@events/EventBusManager\";\nimport { NavigationEvents } from \"types/eventType\";\nimport { BackgroundPage } from \"./background\";\nimport { ExperiencePage, JobExperience } from \"./experience\";\nimport { FrameworkPage } from \"./frameworks\";\nimport { ResumePage } from \"./resume\";\n\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = `\n    <link rel=\"stylesheet\" href=\"/style/about.css\">\n    <style>\n    .hidden {\n      opacity: 0;\n      pointer-events: none;\n      transform: translateY(-50%) scale(0.95);\n      transition: all 0.3s ease;\n    }\n    </style>\n    <div class=\"about hidden\">\n        <div class=\"tab\">\n          <h3 class=\"tab--name\">Background</h3>  \n        </div>\n        <div class=\"carousel\">\n          <div class=\"carousel-container\">\n            <ul class=\"carousel-track\">\n                <li class=\"slide\" data-active><slot name=\"background\">Background</slot></li>\n                <li class=\"slide\"><slot name=\"experience\">Experience</slot></li>\n                <li class=\"slide\"><slot name=\"resume\">Resume</slot></li>\n                <li class=\"slide\"><slot name=\"frameworks\">Frameworks</slot></li>\n            </ul>\n          </div>\n          <button class=\"carousel__button prev\">&#8678;</button>\n          <button class=\"carousel__button next\">&#8680;</button>\n          <div class=\"carousel_nav\">\n                <button class=\"carousel_indicator\" data-active-button></button>\n                <button class=\"carousel_indicator\"></button>\n                <button class=\"carousel_indicator\"></button>\n                <button class=\"carousel_indicator\"></button>\n          </div>\n        </div>\n    </div>\n`;\n\ninterface State {\n  currentIndex: number;\n}\n\ninterface Components {\n  about: HTMLDivElement | null;\n  tabName: HTMLHeadElement | null;\n  carousel: HTMLDivElement | null;\n  next: HTMLButtonElement | null;\n  prev: HTMLButtonElement | null;\n  track: HTMLUListElement | null;\n  navButtons: HTMLButtonElement[];\n}\n\ninterface CarouselItems {\n  background: BackgroundPage;\n  experience: ExperiencePage;\n  resume: ResumePage;\n  frameworks: FrameworkPage;\n}\n\nexport type AboutData =\n  | {\n      isError: false;\n      records: Record<string, { type: string; data: any }>;\n    }\n  | {\n      isError: true;\n      message: string;\n    };\n\nconst TabNames = [\n  \"👨‍🎓 Background\",\n  \"👨‍💻 Experience\",\n  \"📄 Resume\",\n  \"🖥️ Frameworks\",\n];\n\nexport class AboutPage extends HTMLElement {\n  state: State = {\n    currentIndex: 0,\n  };\n  root: ShadowRoot;\n  displayBus: EventBus<NavigationEvents> | null = null;\n  components: Components;\n  carouselItem: CarouselItems | null = null;\n\n  prevClick = (e: Event) => this.swapSlides(-1);\n  nextClick = (e: Event) => this.swapSlides(1);\n  navButtonClicks: Array<(e: Event) => void> = [];\n\n  constructor() {\n    super();\n    this.root = this.attachShadow({ mode: \"open\" });\n\n    const clone = template.content.cloneNode(true);\n\n    this.root.appendChild(clone);\n\n    const buttons = Array.from(\n      this.root.querySelector(\".carousel_nav\")?.children ?? []\n    );\n\n    this.components = {\n      about: this.root.querySelector(\".about\"),\n      tabName: this.root.querySelector(\".tab--name\"),\n      carousel: this.root.querySelector(\".carousel\"),\n      next: this.root.querySelector(\".next\"),\n      prev: this.root.querySelector(\".prev\"),\n      track: this.root.querySelector(\".carousel-track\"),\n      navButtons: buttons as any as HTMLButtonElement[],\n    };\n\n    this.components.navButtons.forEach((_, index) => {\n      this.navButtonClicks.push((e: Event) =>\n        this.swapSlides(index - this.state.currentIndex)\n      );\n    });\n    this.defineElements();\n    this.querySlottedElements();\n\n    this.components.about?.classList.toggle(\"hidden\");\n  }\n\n  private defineElements = () => {\n    if (!customElements.get(\"background-page\")) {\n      customElements.define(\"background-page\", BackgroundPage);\n    }\n\n    if (!customElements.get(\"experience-page\")) {\n      customElements.define(\"experience-page\", ExperiencePage);\n    }\n\n    if (!customElements.get(\"resume-page\")) {\n      customElements.define(\"resume-page\", ResumePage);\n    }\n\n    if (!customElements.get(\"frameworks-page\")) {\n      customElements.define(\"frameworks-page\", FrameworkPage);\n    }\n  };\n\n  private findElement(name: string, type: any) {\n    const id = `slot[name=\"${name}\"]`;\n    const slot = this.root.querySelector(id) as HTMLSlotElement;\n    const nodes = slot.assignedElements?.() || [];\n\n    const element = nodes.find((el) => el instanceof type);\n\n    return element as typeof type;\n  }\n\n  private querySlottedElements = () => {\n    const background: BackgroundPage = this.findElement(\n      \"background\",\n      BackgroundPage\n    );\n\n    const experience: ExperiencePage = this.findElement(\n      \"experience\",\n      ExperiencePage\n    );\n    const resume: ResumePage = this.findElement(\"resume\", ResumePage);\n    const frameworks: FrameworkPage = this.findElement(\n      \"frameworks\",\n      FrameworkPage\n    );\n\n    this.carouselItem = {\n      background: background,\n      experience: experience,\n      resume: resume,\n      frameworks: frameworks,\n    };\n  };\n\n  set eventBusManager(eventBusManager: EventBusManager) {\n    this.displayBus = eventBusManager.displayBus;\n\n    this.displayBus.on(\"about:show\", this.onShow);\n    this.displayBus.on(\"about:hide\", this.onHide);\n  }\n\n  set updateData(data: AboutData) {\n    if (!data.isError) {\n      this.inflateCarousel(data.records);\n    } else {\n      this.root.innerHTML = `\n        <p>${data.message}</p>\n      `;\n    }\n  }\n\n  connectedCallback() {\n    this.bindEvents();\n  }\n\n  disconnectedCallback() {\n    this.unbindEvents();\n\n    this.displayBus?.off(\"about:show\", this.onShow);\n    this.displayBus?.off(\"about:hide\", this.onHide);\n  }\n\n  private onShow = () => {\n    this.components.about?.classList.toggle(\"hidden\", false);\n  };\n\n  private onHide = () => {\n    this.components.about?.classList.toggle(\"hidden\", true);\n  };\n\n  swapSlides(offset: number) {\n    if (!this.components.track) return;\n\n    const prevIndex = this.state.currentIndex;\n    const length = this.components.track.children.length;\n\n    this.state.currentIndex += offset;\n    if (this.state.currentIndex < 0) this.state.currentIndex = length - 1;\n    if (this.state.currentIndex >= length) this.state.currentIndex = 0;\n\n    const activeSlide = this.components.track.children[\n      prevIndex\n    ] as HTMLElement;\n\n    if (this.components.tabName) {\n      this.components.tabName!.textContent = TabNames[\n        this.state.currentIndex\n      ] as string;\n    }\n\n    (\n      this.components.track.children[this.state.currentIndex] as HTMLElement\n    ).dataset.active = \"true\";\n    delete activeSlide.dataset.active;\n\n    this.components.navButtons[this.state.currentIndex].dataset.activeButton =\n      \"true\";\n    delete this.components.navButtons[prevIndex].dataset.activeButton;\n  }\n\n  private bindEvents = () => {\n    this.components.prev?.addEventListener(\"click\", this.prevClick);\n    this.components.next?.addEventListener(\"click\", this.nextClick);\n    this.components.navButtons.forEach((button, index) => {\n      button.addEventListener(\"click\", this.navButtonClicks[index]);\n    });\n  };\n\n  private unbindEvents = () => {\n    this.components.prev?.removeEventListener(\"click\", this.prevClick);\n    this.components.next?.removeEventListener(\"click\", this.nextClick);\n    this.components.navButtons.forEach((button, index) => {\n      button.removeEventListener(\"click\", this.navButtonClicks[index]);\n    });\n  };\n\n  private setBackground(data: any) {\n    if (!this.carouselItem?.background) return;\n\n    this.carouselItem.background.Summary = {\n      title: data[\"summary\"][\"title\"] ?? \"Title-Placeholder\",\n      description: data[\"summary\"][\"description\"] ?? \"Description\",\n    };\n\n    const education = data[\"education\"];\n\n    this.carouselItem.background.Education = {\n      course: education[\"course\"],\n      institute: education[\"institute\"],\n      description: education[\"description\"],\n    };\n\n    const skills: Array<any> = data[\"skills\"] as Array<any>;\n    this.carouselItem.background.Skills = skills.map((skillItem) => {\n      return {\n        title: skillItem[\"title\"],\n        tags: skillItem[\"tags\"] as Array<string>,\n      };\n    });\n  }\n\n  private setExperience(experienceData: any) {\n    if (!this.carouselItem?.experience) return;\n\n    this.carouselItem.experience.Experience = experienceData.map(\n      (data: any) => {\n        return {\n          title: data.title,\n          duration: data.duration,\n          responsibilities: data[\"responsibilities\"] as Array<string>,\n        } as JobExperience;\n      }\n    );\n  }\n\n  private setResume(resumeData: any) {\n    if (!this.carouselItem?.resume) return;\n  }\n\n  private setFrameworks(frameworkData: any) {\n    if (!this.carouselItem?.frameworks) return;\n\n    this.carouselItem.frameworks.FrameworkData = frameworkData;\n  }\n\n  private inflateCarousel(data: Record<string, { type: string; data: any }>) {\n    this.setBackground(data[\"personal\"].data);\n    this.setExperience(data[\"experience\"].data);\n    this.setResume(data[\"resume\"].data);\n    this.setFrameworks(data[\"frameworks\"].data);\n  }\n}\n","const template = document.createElement(\"template\");\ntemplate.innerHTML = `\n  <link rel=\"stylesheet\" href=\"/style/card.css\" />\n  <div class=\"card\">\n    <div class=\"card-content\">\n     <div class=\"card-header\">\n        <div class=\"card-image\">\n          <img src=\"\" alt=\"\" loading=\"lazy\"/>\n        </div>\n        <div class=\"title-group\">\n          <h3></h3>\n          <small class=\"sub-heading\"></small>\n        </div>\n      </div>  \n     \n      <p class=\"description\"></p>\n      <div class=\"tags\"></div>\n      <a class=\"github-link\" href=\"\" >\n        <img src=\"/assets/images/github-brands-solid.svg\" alt=\"Github\" loading=\"lazy\"/>\n        Github\n      </a>\n    </div>\n  </div>\n`;\n\nconst PROJECT_CARD_CONSTANTS = [\n  \"title\",\n  \"image\",\n  \"description\",\n  \"tags\",\n  \"linkUrl\",\n];\n\nexport interface CardMarshall {\n  title: string;\n  description: string;\n  imageUrl: string;\n  tags?: string;\n  linkUrl: string;\n}\n\ninterface Components {\n  logo: HTMLImageElement | null;\n  title: HTMLHeadingElement | null;\n  description: HTMLParagraphElement | null;\n  tagRoot: HTMLDivElement | null;\n  link: HTMLAnchorElement | null;\n}\n\nexport class ProjectCard extends HTMLElement {\n  root: ShadowRoot;\n  components: Components;\n\n  constructor() {\n    super();\n    this.root = this.attachShadow({ mode: \"open\" });\n\n    const clone = template.content.cloneNode(true);\n\n    this.root.appendChild(clone);\n\n    this.components = {\n      logo: this.root.querySelector(\"img\"),\n      title: this.root.querySelector(\"h3\"),\n      description: this.root.querySelector(\"p\"),\n      tagRoot: this.root.querySelector(\".tags\"),\n      link: this.root.querySelector(\".github-link\"),\n    };\n  }\n\n  static get observedAttributes() {\n    return PROJECT_CARD_CONSTANTS;\n  }\n\n  attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n    if (oldValue !== newValue) {\n      this.render(name);\n    }\n  }\n\n  setData(props: CardMarshall) {\n    this.setAttribute(\"title\", props.title);\n    this.setAttribute(\"image\", props.imageUrl);\n    this.setAttribute(\"description\", props.description);\n    this.setAttribute(\"tags\", props.tags ?? \"\");\n    this.setAttribute(\"linkUrl\", props.linkUrl);\n  }\n\n  render(name: string) {\n    switch (name) {\n      case \"title\":\n        const title: string = this.getAttribute(\"title\") || \"\";\n        if (this.components.title) this.components.title.textContent = title;\n        break;\n      case \"description\":\n        const description: string = this.getAttribute(\"description\") || \"\";\n        if (this.components.description)\n          this.components.description!.textContent = description;\n        break;\n      case \"image\":\n        const image: string = this.getAttribute(\"image\") || \"\";\n        const _title: string = this.getAttribute(\"title\") || \"\";\n        if (this.components.logo) {\n          this.components.logo.setAttribute(\"src\", image);\n          this.components.logo.setAttribute(\"alt\", _title);\n        }\n        break;\n      case \"tags\":\n        const tags = (this.getAttribute(\"tags\") || \"\").split(\",\");\n        if (this.components.tagRoot) {\n          const children = tags.map((tag) => {\n            const span = document.createElement(\"span\");\n            span.textContent = tag;\n            return span;\n          });\n\n          this.components.tagRoot.replaceChildren(...children);\n        }\n        break;\n      case \"linkUrl\":\n        const github_link = this.getAttribute(\"linkUrl\") || \"\";\n        if (this.components.link) {\n          this.components.link.setAttribute(`href`, github_link);\n        }\n        break;\n    }\n  }\n\n  connectedCallback() {}\n\n  disconnectedCallback() {}\n}\n","import { EventBus } from \"@events/eventBus\";\nimport { EventBusManager } from \"@events/EventBusManager\";\nimport { ViewEvents } from \"types/eventType\";\nimport { CardMarshall, ProjectCard } from \"./card\";\n\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = `\n    <link rel=\"stylesheet\" href=\"/style/gallery.css\">\n    <style>\n      .hidden {\n        transform: translateX(-50%) scale(0.95);\n        opacity: 0;\n        pointer-events: none;\n      }\n    </style>\n    <div class=\"gallery hidden\" id=\"gallery\">\n    </div>\n`;\n\nexport type ProjectData =\n  | {\n      list: Array<CardMarshall>;\n      isError: false;\n    }\n  | {\n      isError: true;\n      message: string;\n    };\n\nexport class ProjectGallery extends HTMLElement {\n  root: ShadowRoot;\n  gallery: HTMLElement | null;\n\n  viewEventBus: EventBus<ViewEvents> | undefined;\n\n  constructor() {\n    super();\n    this.root = this.attachShadow({ mode: \"open\" });\n    const clone = template.content.cloneNode(true);\n    this.root.appendChild(clone);\n\n    this.gallery = this.root.getElementById(\"gallery\");\n  }\n\n  set eventBusManager(eventBusManager: EventBusManager) {\n    this.viewEventBus = eventBusManager.viewBus;\n    console.log(\"event bus attached to project gallery\");\n  }\n\n  showComponent(_: any) {\n    console.log(\"gallery shown \");\n    this.gallery?.classList.remove(\"hidden\");\n  }\n\n  hideComponent(_: any) {\n    console.log(\"gallery hidden\");\n    this.gallery?.classList.add(\"hidden\");\n  }\n\n  private onShow = (data: any) => this.showComponent(data);\n  private onHide = (data: any) => this.hideComponent(data);\n\n  private inflateData(projects: Array<CardMarshall>) {\n    if (!this.gallery) return;\n    const fragment = document.createDocumentFragment();\n    projects.forEach((cardProps) => {\n      const card: ProjectCard = document.createElement(\n        \"project-card\"\n      ) as ProjectCard;\n      card.setData(cardProps);\n      fragment.appendChild(card);\n    });\n\n    this.gallery.appendChild(fragment);\n\n    if (!this.viewEventBus) return;\n\n    this.viewEventBus.on(\"project-screen:show\", this.onShow);\n    this.viewEventBus.on(\"project-screen:hide\", this.onHide);\n  }\n\n  set updateData(data: ProjectData) {\n    if (!data.isError) {\n      this.inflateData(data.list);\n    } else {\n      this.root.innerHTML = `\n          <p>${data.message}</p>\n        `;\n    }\n  }\n\n  connectedCallback() {}\n\n  disconnectedCallback() {\n    if (!this.viewEventBus) return;\n\n    this.viewEventBus.off(\"project-screen:show\", this.onShow);\n    this.viewEventBus.off(\"project-screen:hide\", this.onHide);\n  }\n}\n","import {\n  ServiceKey,\n  ServiceMap,\n  ServiceRegistry,\n  ServiceType,\n} from \"types/service.types\";\n\nconst createServiceRegistry = (): ServiceRegistry => {\n  const services: Map<ServiceKey, ServiceType> = new Map<\n    ServiceKey,\n    ServiceType\n  >();\n\n  const register = <K extends ServiceKey>(\n    name: K,\n    service: ServiceMap[K]\n  ): void => {\n    if (services.has(name)) {\n      throw new Error(`Error : Redefining the service [${name}]`);\n    }\n    services.set(name, service);\n  };\n\n  const get = <K extends ServiceKey>(name: K): ServiceMap[K] => {\n    const service = services.get(name);\n    if (!service) {\n      throw new Error(\n        `Error : Trying to obtain value of an unregistered service ${name}`\n      );\n    }\n    return service as ServiceMap[K];\n  };\n\n  const has = (name: ServiceKey): boolean => {\n    return services.has(name);\n  };\n\n  return {\n    register: register,\n    get: get,\n    has: has,\n  };\n};\n\nlet serviceRegistry: ServiceRegistry | undefined = undefined;\n\nconst getServiceRegistry = () => {\n  if (!serviceRegistry) {\n    serviceRegistry = createServiceRegistry();\n  }\n\n  return serviceRegistry;\n};\n\nexport { getServiceRegistry };\n","import { EventBus } from \"@events/eventBus\";\nimport { EventBusManager } from \"@events/EventBusManager\";\nimport { Logger } from \"@utils/Logger\";\nimport { getServiceRegistry } from \"engine/core/ServiceRegistry\";\nimport { LoadingEvents } from \"types/eventType\";\n\nconst template = document.createElement(\"template\");\n///TODO: Re-add hidden in overlay\ntemplate.innerHTML = `\n    <link rel=\"stylesheet\" href=\"/style/loading_modal.css\"/>\n   \n    <div class=\"overlay hidden\" id=\"overlay\">\n      <div class=\"loading-logo\"></div>\n      <div id=\"loading-text\">Loading...</div>\n    </div>\n`;\n\ninterface Tags {\n  overlay: HTMLElement | null;\n}\n\nexport class LoadingModal extends HTMLElement {\n  loadingEventBus?: EventBus<LoadingEvents>;\n  root: ShadowRoot;\n  tags: Tags;\n  progress: number;\n  logger: Logger;\n\n  constructor() {\n    super();\n    this.root = this.attachShadow({ mode: \"open\" });\n\n    const clone = template.content.cloneNode(true);\n    this.root.appendChild(clone);\n    this.progress = 0;\n\n    this.tags = {\n      overlay: this.root.getElementById(\"overlay\"),\n    };\n    this.logger = getServiceRegistry().get(\"Logger\");\n    this.logger.onLoad({ origin: \"Loading Modal\" });\n  }\n\n  handleLoading = () => {\n    // this.loadingEventBus?.on(\"load:start\", (data) => {\n    //   this.tags.overlay?.classList.remove(\"hidden\");\n    // });\n    // this.loadingEventBus?.on(\"load:progress\", (data) => {\n    //   this.progress = data.loaded / data.total;\n    // });\n    // this.loadingEventBus?.on(\"load:complete\", (data) => {\n    //   this.tags.overlay?.classList.add(\"hidden\");\n    // });\n    // this.loadingEventBus?.on(\"load:error\", (data) => {});\n  };\n\n  set eventBusManager(eventBusManager: EventBusManager) {\n    this.loadingEventBus = eventBusManager.loadingBus;\n    this.handleLoading();\n  }\n\n  connectedCallback() {}\n\n  disconnectedCallback() {}\n}\n","import { EventBus } from \"@events/eventBus\";\nimport { EventBusManager } from \"@events/EventBusManager\";\nimport { Logger } from \"@utils/Logger\";\nimport { getServiceRegistry } from \"engine/core/ServiceRegistry\";\nimport { NavigationEvents } from \"types/eventType\";\n\nconst template = document.createElement(\"template\");\n\ntemplate.innerHTML = `\n  <link\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\"\n    />\n  <link rel=\"stylesheet\" href=\"/style/navbar.css\">\n  <nav class=\"navbar\" id=\"main-nav\">\n      <div class=\"logo\"><img src=\"/assets/images/logo.png\"/></div>\n      <button class=\"toggle-btn\" aria-expanded=\"false\" aria-controls=\"main-nav\">&#9776</button>\n      <ul class=\"nav-links\" aria-expanded=\"false\">\n          <li>\n            <a href=\"\" id=\"home\" aria-label=\"Home\" class=\"active\"> \n              <i class=\"fas fa-home\"></i>\n              <span class=\"desktop\">Home</span>\n            </a>\n          </li>\n          <li>\n            <a href=\"\" id=\"about\" aria-label=\"About\">\n              <i class=\"fas fa-user\"></i> \n              <span>About</span>\n            </a>\n          </li>\n          <li>\n            <a href=\"\" id=\"projects\" aria-label=\"Projects\">\n              <i class=\"fas fa-folder-open\"></i>\n              <span>Projects</span>\n            </a>\n          </li>\n          <li>\n            <a href=\"\" id=\"contact\" aria-label=\"Contact\">\n              <i class=\"fas fa-envelope\"></i>\n              <span>Contact</span>\n            </a>\n          </li>\n      </ul>\n  </nav>\n`;\n\ntype TabKeys = \"home\" | \"about\" | \"projects\" | \"contact\";\ntype BusHandler = Record<\n  `${TabKeys}:show` | `${TabKeys}:hide`,\n  (e: NavigationEvents) => void\n>;\n\ninterface State {\n  activeTab: TabKeys;\n}\n\ninterface Components {\n  toggleBtn: Nullable<HTMLElement>;\n  navLinks: Nullable<HTMLElement>;\n  projects: Nullable<HTMLAnchorElement>;\n  about: Nullable<HTMLAnchorElement>;\n  home: Nullable<HTMLAnchorElement>;\n  contact: Nullable<HTMLAnchorElement>;\n}\n\nexport class Navbar extends HTMLElement {\n  //State\n  private state: State;\n  private displayEventBus: EventBus<NavigationEvents> | null = null;\n  private components: Components;\n  private root: ShadowRoot;\n  private busHandlers: Nullable<BusHandler> = null;\n  private sections = [\"projects\", \"about\", \"contact\", \"home\"] as const;\n  private links;\n  private logger: Logger;\n\n  constructor() {\n    super();\n    this.root = this.attachShadow({ mode: \"open\" });\n    const clone = template.content.cloneNode(true);\n    this.root.appendChild(clone);\n\n    this.state = {\n      activeTab: \"home\",\n    };\n\n    this.components = {\n      about: null,\n      navLinks: null,\n      projects: null,\n      contact: null,\n      home: null,\n      toggleBtn: null,\n    };\n\n    this.queryElements();\n    this.links = [\n      this.components.home,\n      this.components.about,\n      this.components.projects,\n      this.components.contact,\n    ];\n\n    this.logger = getServiceRegistry().get(\"Logger\");\n    this.logger.onLoad({ origin: \"Navbar\" });\n  }\n\n  static get observedAttributes() {\n    return [];\n  }\n\n  /**\n   * @description called when the component is mounted\n   */\n  connectedCallback() {\n    this.bindEvents();\n    this.setupBusListeners();\n  }\n\n  /**\n   * @description called when component is un mounted\n   */\n  disconnectedCallback() {\n    this.unBindEvents();\n    this.disposeBusListeners();\n  }\n\n  queryElements() {\n    this.components.toggleBtn = this.root.querySelector(\".toggle-btn\");\n    this.components.navLinks = this.root.querySelector(\".nav-links\");\n\n    if (this.components.navLinks) {\n      this.components.projects =\n        this.components.navLinks.querySelector(\"#projects\");\n\n      this.components.about = this.components.navLinks.querySelector(\"#about\");\n\n      this.components.contact =\n        this.components.navLinks.querySelector(\"#contact\");\n\n      this.components.home = this.components.navLinks.querySelector(\"#home\");\n    }\n  }\n\n  bindEvents() {\n    this.components.toggleBtn?.addEventListener(\"click\", this.onToggleClick);\n    this.components.projects?.addEventListener(\"click\", this.onProjectClick);\n    this.components.about?.addEventListener(\"click\", this.onAboutClick);\n    this.components.home?.addEventListener(\"click\", this.onHomeClick);\n    this.components.contact?.addEventListener(\"click\", this.onContactClick);\n  }\n\n  unBindEvents() {\n    this.components.toggleBtn?.removeEventListener(\"click\", this.onToggleClick);\n    this.components.projects?.removeEventListener(\"click\", this.onProjectClick);\n    this.components.about?.removeEventListener(\"click\", this.onAboutClick);\n    this.components.home?.removeEventListener(\"click\", this.onHomeClick);\n    this.components.contact?.removeEventListener(\"click\", this.onContactClick);\n  }\n\n  /***\n   * @description on Click handler for hamburger menu closing or opening\n   */\n  toggleHamburgerMenu = (): void => {\n    console.log(this.components.navLinks);\n    if (!this.components.navLinks) return;\n\n    const isOpen =\n      this.components.navLinks.getAttribute(\"aria-expanded\") === \"true\";\n    const nextState = !isOpen;\n\n    this.components.navLinks.setAttribute(\"aria-expanded\", String(nextState));\n    this.components?.toggleBtn?.setAttribute(\n      \"aria-expanded\",\n      String(nextState)\n    );\n  };\n\n  setActiveTab = (tabId: TabKeys) => {\n    this.links.forEach((link) => {\n      link?.classList.remove(\"active\");\n    });\n\n    this.components[tabId]?.classList.add(\"active\");\n    this.state.activeTab = tabId;\n  };\n\n  toggleSections = <K extends NavigationEvents[\"elementId\"]>(\n    e: Event,\n    key: K\n  ) => {\n    if (this.state.activeTab == key) return;\n    e.preventDefault();\n\n    const hideEvent = {\n      elementId: key,\n      type: `${this.state.activeTab}:hide`,\n    } as NavigationEvents;\n    this.displayEventBus?.emit(hideEvent);\n\n    this.setActiveTab(key);\n\n    const showEvent = {\n      elementId: key,\n      type: `${key}:show`,\n    } as NavigationEvents;\n\n    console.log(`nvbar emits  ${showEvent.type}`);\n    this.displayEventBus?.emit(showEvent);\n  };\n\n  private onToggleClick = (e: Event) => this.toggleHamburgerMenu();\n  private onProjectClick = (e: Event) => this.toggleSections(e, \"projects\");\n  private onAboutClick = (e: Event) => this.toggleSections(e, \"about\");\n  private onHomeClick = (e: Event) => this.toggleSections(e, \"home\");\n  private onContactClick = (e: Event) => this.toggleSections(e, \"contact\");\n\n  setupBusListeners = () => {\n    if (!this.displayEventBus) return;\n\n    this.sections.forEach((id) => {\n      const showHandler = (e: NavigationEvents) => {\n        this.logger.onMount({ origin: `[${id}]-component` });\n      };\n      const hideHandler = (e: NavigationEvents) => {\n        this.logger.onUnmount({ origin: `[${id}]-component` });\n      };\n\n      this.displayEventBus?.on(`${id}:show`, showHandler);\n      this.displayEventBus?.on(`${id}:hide`, hideHandler);\n\n      if (!this.busHandlers) return;\n\n      this.busHandlers[`${id}:show`] = showHandler;\n      this.busHandlers[`${id}:hide`] = hideHandler;\n    });\n  };\n\n  disposeBusListeners = () => {\n    if (!this.displayEventBus) return;\n\n    this.sections.forEach((id) => {\n      if (!this.busHandlers) return;\n\n      this.displayEventBus?.off(`${id}:show`, this.busHandlers[`${id}:show`]);\n      this.displayEventBus?.off(`${id}:hide`, this.busHandlers[`${id}:hide`]);\n    });\n  };\n\n  set eventBusManager(eventBusManager: EventBusManager) {\n    this.displayEventBus = eventBusManager.displayBus;\n  }\n}\n","import { EventBus } from \"@events/eventBus\";\nimport { EventBusManager } from \"@events/EventBusManager\";\nimport { Material, Object3D, Scene } from \"three\";\nimport { DebugEvents } from \"types/eventType\";\n\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = `\n    <link rel=\"stylesheet\" href=\"/style/scene_inspector.css\">\n    <div class=\"inspector-wrapper\">\n\n      <div class=\"resizer\"></div>\n    \n      <div class=\"scene-inspector hidden\">\n        <div class=\"inspector-header\">\n          <span class=\"title\">Scene Inspector</span>\n          <button class=\"close-btn\"> ✕ </button>\n        </div>\n\n        <div class=\"inspector-content\">\n          <ul class=\"tree-view\">\n\n          </ul>\n        </div>\n      </div>\n\n      \n    </div>\n`;\n\n//\n\ninterface State {\n  isMenuHidden: boolean;\n  isResizing: boolean;\n}\n\ninterface TreeNode {\n  id: string;\n  label: string;\n  //  type: \"mesh\" | \"camera\" | \"light\" | \"animation\" | \"sprite\" | \"group\";\n  type: string;\n  nodes: TreeNode[];\n}\n\ninterface TreeView {\n  Objects: TreeNode[];\n  Materials: TreeNode[];\n}\n\nexport class SceneInspector extends HTMLElement {\n  root: ShadowRoot;\n  eventBus: EventBus<DebugEvents> | undefined;\n  state: State;\n  element: Element;\n  treeView: TreeView;\n\n  constructor() {\n    super();\n    this.root = this.attachShadow({ mode: \"open\" });\n    const clone = template.content.cloneNode(true);\n\n    this.root.appendChild(clone);\n    this.state = {\n      isMenuHidden: true,\n      isResizing: false,\n    };\n\n    this.element = this.root.querySelector(\".scene-inspector\")!;\n\n    this.treeView = {\n      Objects: [],\n      Materials: [],\n    };\n\n    this.handleResize();\n  }\n\n  set eventBusManager(eventBusManager: EventBusManager) {\n    this.eventBus = eventBusManager.debugBus;\n    this.eventBus?.on(\"debug:inspector\", (data) => {\n      this.handleShowHideEvent(data);\n    });\n  }\n\n  handleShowHideEvent(data: DebugEvents) {\n    this.state.isMenuHidden = !this.state.isMenuHidden;\n\n    if (this.state.isMenuHidden) {\n      this.element.classList.add(\"hidden\");\n    } else {\n      this.element.classList.remove(\"hidden\");\n      if (data.scene != null && data.scene !== undefined) {\n        this.renderTree(data.scene);\n      }\n    }\n  }\n\n  handleResize() {\n    const resizer: HTMLElement = this.root.querySelector(\".resizer\")!;\n    const panel: HTMLElement = this.root.querySelector(\".scene-inspector\")!;\n\n    resizer.addEventListener(\"mousedown\", (e) => {\n      this.state.isResizing = true;\n      document.body.style.cursor = \"ew-resize\";\n      e.preventDefault();\n    });\n\n    window.addEventListener(\"mousemove\", (e) => {\n      if (!this.state.isResizing) return;\n\n      const newWidth = window.innerWidth - (e as MouseEvent).clientX;\n\n      panel.style.width = `${Math.min(Math.max(newWidth, 200), 600)}px`;\n    });\n\n    window.addEventListener(\"mouseup\", (e) => {\n      if (this.state.isResizing) {\n        this.state.isResizing = false;\n        document.body.style.cursor = \"\";\n      }\n    });\n  }\n\n  toggleCloseButton() {\n    this.state.isMenuHidden = true;\n\n    this.element.classList.add(\"hidden\");\n  }\n\n  private collectSceneData(scene: Scene): TreeView {\n    const objects: TreeNode[] = [];\n    const materialsMap: Map<string, TreeNode> = new Map();\n\n    const traverse = (object: Object3D): TreeNode => {\n      const node: TreeNode = {\n        id: object.uuid,\n        label: object.name == \"\" ? object.type : object.name,\n        type: object.type,\n        nodes: [],\n      };\n\n      object.children.forEach((child) => {\n        node.nodes.push(traverse(child));\n      });\n\n      if (\"material\" in object && object.material) {\n        const mats: Material[] = Array.isArray(object.material)\n          ? object.material\n          : [object.material];\n        mats.forEach((mat) => {\n          /**\n           * Ensure that a material is registered only once to avoid duplicate entry\n           */\n          if (!materialsMap.has(mat.uuid)) {\n            materialsMap.set(mat.uuid, {\n              id: mat.uuid,\n              label: mat.name == \"\" ? mat.type : mat.name,\n              type: \"material\",\n              nodes: [],\n            });\n          }\n        });\n      }\n\n      return node;\n    };\n\n    scene.children.forEach((child) => {\n      objects.push(traverse(child));\n    });\n\n    return {\n      Objects: objects,\n      Materials: Array.from(materialsMap.values()),\n    };\n  }\n\n  protected renderTree(scene: Scene) {\n    this.treeView = this.collectSceneData(scene);\n\n    const treeNode = this.root.querySelector(\".tree-view\")!;\n    treeNode.innerHTML = ``;\n\n    this.addCategory(\"Objects\", treeNode, this.treeView.Objects);\n    this.addCategory(\"Materials\", treeNode, this.treeView.Materials);\n  }\n\n  private addCategory(label: string, treeRoot: Element, nodes: TreeNode[]) {\n    const li = document.createElement(\"li\");\n    li.classList.add(\"category\", \"collapsed\");\n\n    const header = document.createElement(\"div\");\n    header.classList.add(\"category-toggle\");\n    header.textContent = `⮞ ${label}`;\n\n    header.addEventListener(\"click\", (e) => {\n      li.classList.toggle(\"collapsed\");\n      const isCollapsed = li.classList.contains(\"collapsed\");\n      header.textContent = isCollapsed ? `⮞ ${label}` : `▼ ${label}`;\n    });\n\n    const nodeList = document.createElement(\"ul\");\n    nodeList.classList.add(\"category-content\");\n    nodes.forEach((node) => {\n      nodeList.appendChild(this.renderTreeNode(node));\n    });\n\n    li.appendChild(header);\n    li.appendChild(nodeList);\n    treeRoot.appendChild(li);\n  }\n\n  private renderTreeNode(node: TreeNode): HTMLElement {\n    const nodeRoot = document.createElement(\"li\");\n    nodeRoot.classList.add(\"tree-node\");\n\n    const label = document.createElement(\"div\");\n    label.classList.add(\"node-label\");\n    label.textContent = `${node.label} (${node.type})`;\n\n    nodeRoot.appendChild(label);\n\n    if (node.nodes.length > 0) {\n      nodeRoot.classList.add(\"collapsed\");\n\n      const ul = document.createElement(\"ul\");\n\n      node.nodes.forEach((node) => {\n        ul.appendChild(this.renderTreeNode(node));\n      });\n\n      label.addEventListener(\"click\", () => {\n        nodeRoot.classList.toggle(\"collapsed\");\n      });\n\n      nodeRoot.appendChild(ul);\n    }\n\n    return nodeRoot;\n  }\n\n  connectedCallback() {\n    const closeButton = this.root.querySelector(\".close-btn\")!;\n\n    closeButton.addEventListener(\"click\", () => {\n      this.toggleCloseButton();\n    });\n  }\n\n  disconnectedCallback() {}\n}\n","import { AboutPage } from \"@components/about/about\";\nimport { CardMarshall, ProjectCard } from \"@components/gallery/card\";\nimport { ProjectGallery } from \"@components/gallery/gallery\";\nimport { LoadingModal } from \"@components/loading/loading\";\nimport { Navbar } from \"@components/navbar/navbar\";\nimport { SceneInspector } from \"@components/threejs/scene_inspector\";\nimport { queueStep } from \"@utils/dsl\";\nimport { getServiceRegistry } from \"engine/core/ServiceRegistry\";\nimport { Lifecycle } from \"types/lifecycle.types\";\n\ninterface DOMManager extends Lifecycle {\n  onInit: () => void;\n}\n\nconst _loadJSON = async (url: string): Promise<any> => {\n  const res = await fetch(url);\n  const data = await res.json();\n\n  return data;\n};\n\nconst loadAboutData = async () => {\n  const about: AboutPage = document.querySelector(\"about-page\")!;\n  try {\n    const data = await _loadJSON(\"/public/data/about.json\");\n\n    about.updateData = {\n      isError: false,\n      records: data,\n    };\n  } catch (err) {\n    about.updateData = {\n      isError: true,\n      message: `Error getting data ${err}`,\n    };\n    console.error(`Error getting data ${err}`);\n  }\n};\n\nconst loadProjectData = async () => {\n  const projectGallery: ProjectGallery =\n    document.querySelector(\"project-gallery\")!;\n  try {\n    const data = await fetch(\"/public/data/projects.json\");\n    const projects = await data.json();\n\n    projectGallery.updateData = {\n      isError: false,\n      list: projects[\"projects\"] as Array<CardMarshall>,\n    };\n  } catch (err) {\n    projectGallery.updateData = {\n      isError: true,\n      message: `Error getting data ${err}`,\n    };\n    console.error(`Error getting data ${err}`);\n  }\n};\n\nconst createDomManager = (): DOMManager => {\n  let flags = {\n    navbarDefined: false,\n    loadingModalDefined: false,\n    sceneInspectorDefined: false,\n    projectGalleryDefined: false,\n    projectCardDefined: false,\n    aboutPageDefined: false,\n  };\n\n  const serviceRegsitry = getServiceRegistry();\n  const [lifecycleScheduler, logger, eventBusManager] = [\n    serviceRegsitry.get(\"LifecycleScheduler\"),\n    serviceRegsitry.get(\"Logger\"),\n    serviceRegsitry.get(\"EventBusManager\"),\n  ];\n\n  /**\n   * @description definition part\n   */\n  const onInit = () => {\n    // Navbar\n    if (!flags.navbarDefined) {\n      customElements.define(\"nav-bar\", Navbar);\n      flags.navbarDefined = true;\n    }\n    // Loading Modal\n    if (!flags.loadingModalDefined) {\n      customElements.define(\"loading-modal\", LoadingModal);\n      flags.loadingModalDefined = true;\n    }\n    // Scene Inspector\n    if (!flags.sceneInspectorDefined) {\n      customElements.define(\"scene-inspector\", SceneInspector);\n      flags.sceneInspectorDefined = true;\n    }\n\n    // Projects\n    eventBusManager.displayBus.once(\"projects:show\", () => {\n      if (flags.projectGalleryDefined) return;\n      logger.onMount({ origin: \"Projects-Page\" });\n      //Loading\n      eventBusManager.loadingBus.emit({\n        type: \"load:start\",\n        loaded: 0,\n        total: 0,\n        url: \"\",\n      });\n      customElements.define(\"project-gallery\", ProjectGallery);\n      customElements.define(\"project-card\", ProjectCard);\n\n      lifecycleScheduler.schedule(\n        queueStep(() => {\n          try {\n            const projectGallery: ProjectGallery =\n              document.querySelector(\"project-gallery\")!;\n\n            projectGallery.eventBusManager = eventBusManager;\n          } catch (err) {\n            console.error(err);\n          }\n        })\n      );\n\n      lifecycleScheduler.schedule(\n        queueStep(async () => {\n          try {\n            console.log(\"loading data\");\n            await loadProjectData();\n            eventBusManager.loadingBus.emit({ type: \"load:complete\" });\n          } catch (err) {\n            console.log(`Error while loading projects data ${err}`);\n          }\n        })\n      );\n\n      flags.projectGalleryDefined = true;\n    });\n\n    // About Page\n    eventBusManager.displayBus.once(\"about:show\", () => {\n      if (flags.aboutPageDefined) return;\n      logger.onMount({ origin: \"About-Page\" });\n      //Loading\n      eventBusManager.loadingBus.emit({\n        type: \"load:start\",\n        loaded: 0,\n        total: 0,\n        url: \"\",\n      });\n\n      customElements.define(\"about-page\", AboutPage);\n      lifecycleScheduler.schedule(\n        queueStep(async () => {\n          await loadAboutData();\n          eventBusManager.loadingBus.emit({ type: \"load:complete\" });\n        })\n      );\n\n      lifecycleScheduler.schedule(\n        queueStep(() => {\n          try {\n            const about: AboutPage = document.querySelector(\"about-page\")!;\n            about.eventBusManager = eventBusManager;\n          } catch (err) {\n            console.error(err);\n          }\n        })\n      );\n\n      flags.aboutPageDefined = true;\n    });\n  };\n\n  /**\n   * @description data-fetch part\n   */\n  const onLoad = () => {\n    logger.onLoad({ origin: \"DOMManager\" });\n    try {\n      const loadingModal: LoadingModal =\n        document.querySelector(\"loading-modal\")!;\n      loadingModal.eventBusManager = eventBusManager;\n    } catch (err) {\n      console.error(`Missing loading modal element :${err}`);\n    }\n\n    try {\n      const navbar: Navbar = document.querySelector(\"nav-bar\")!;\n      navbar.eventBusManager = eventBusManager;\n    } catch (err) {\n      console.error(`Missing navbar element : ${err}`);\n    }\n\n    try {\n      const sceneInspector: SceneInspector =\n        document.querySelector(\"scene-inspector\")!;\n      sceneInspector.eventBusManager = eventBusManager;\n    } catch (err) {\n      console.error(err);\n    }\n\n    // try {\n    //   const gallery: ProjectGallery =\n    //     document.querySelector(\"project-gallery\")!;\n    //   gallery.eventBusManager = context.eventBusManager;\n    // } catch (err) {\n    //   console.error(`Missing project gallery component : ${err}`);\n    // }\n  };\n\n  /**\n   * @description attach components with data /events\n   */\n  const onMount = () => {\n    logger.onMount({ origin: \"DOMManager\" });\n  };\n\n  const onUpdate = () => {\n    logger.onUpdate(0, { origin: \"DOMManager\" });\n  };\n\n  const onUnmount = () => {\n    const selectors = [\n      \"loading-modal\",\n      \"nav-bar\",\n      \"scene-inspector\",\n      // \"project-gallery\",\n      // \"project-card\",\n\n      // \"about-page\",\n      // \"background-page\",\n    ];\n\n    selectors.forEach((selector) => {\n      const element = document.querySelector(selector);\n      if (element?.parentElement) {\n        //call disconnected  callback for the removal of event listeners\n        element.parentElement.removeChild(element);\n      } else {\n        console.warn(\n          `Could not unmount ${selector} either already removed or not found`\n        );\n      }\n    });\n    logger.onUnmount({ origin: \"DOMManger\" });\n  };\n\n  /**\n   * @deprecated\n   */\n  const onDispose = () => {\n    logger.onDestroy({ origin: \"DOMManager\" });\n  };\n\n  return {\n    onInit: onInit,\n    onLoad: onLoad,\n    onMount: onMount,\n    onUpdate: onUpdate,\n    onUnmount: onUnmount,\n    onDestroy: onDispose,\n  };\n};\n\nexport { createDomManager };\n\nexport type { DOMManager };\n","import { ModelAssetDescriptor } from \"types/loader.types\";\nimport { RoomAsset } from \"types/rooms.types\";\n\nconst FILE_CONSTANTS = {\n  PATH_TO_MODELS: \"/assets/Models/\",\n  PATH_TO_HDR: \"/assets/HDR/\",\n  PATH_TO_ANIMATIONS: \"../../assets/Animations/\",\n};\n\nexport const PLAYER_ASSET: ModelAssetDescriptor = {\n  id: \"player\",\n  path: FILE_CONSTANTS.PATH_TO_MODELS + \"player.glb\",\n  type: \"glb\",\n};\n\nexport const NAVIGATION_ROOM_ASSETS: RoomAsset = {\n  meshes: [\n    {\n      id: \"navigation\",\n      path: FILE_CONSTANTS.PATH_TO_MODELS + \"room.glb\",\n      type: \"glb\",\n    },\n  ],\n  hdr: {\n    id: \"environment_hdr\",\n    path: FILE_CONSTANTS.PATH_TO_HDR + \"environment.hdr\",\n    type: \"hdr\",\n  },\n};\n\nexport const ABOUT_ROOM_ASSETS: RoomAsset = {\n  meshes: [\n    {\n      id: \"about\",\n      path: FILE_CONSTANTS.PATH_TO_MODELS + \"about.glb\",\n      type: \"glb\",\n    },\n  ],\n};\n\nexport const PROJECTS_ROOM_ASSETS: RoomAsset = {\n  meshes: [\n    {\n      id: \"projects\",\n      path: FILE_CONSTANTS.PATH_TO_MODELS + \"projects.glb\",\n      type: \"glb\",\n    },\n  ],\n};\n","import { AboutRoomProps } from \"gameplay/rooms/about/room\";\nimport { NavigationRoomProps } from \"gameplay/rooms/navigation/room\";\nimport { ProjectRoomProps } from \"gameplay/rooms/projects/room\";\n\nexport const NAVIGATION_ROOM_OPTIONS: NavigationRoomProps = {\n  player: {\n    id: \"RootNode\",\n    storageId: \"player\",\n  },\n  ground: {\n    id: \"ground\",\n    storageId: \"navigation\",\n  },\n};\n\nexport const ABOUT_ROOM_OPTIONS: AboutRoomProps = {\n  player: {\n    id: \"RootNode\",\n    storageId: \"player\",\n  },\n  ground: {\n    id: \"ground\",\n    storageId: \"about\",\n  },\n};\n\nexport const PROJECTS_ROOM_OPTIONS: ProjectRoomProps = {\n  player: {\n    id: \"RootNode\",\n    storageId: \"player\",\n  },\n  ground: {\n    id: \"ground\",\n    storageId: \"projects\",\n  },\n};\n","import { EventBus } from \"@events/eventBus\";\nimport { GlobalStorageManager } from \"engine/managers/storage/storageTypes\";\nimport { LoadingManager, Scene, WebGLRenderer } from \"three\";\nimport { LoadingEvents } from \"types/eventType\";\nimport { LoadOptions, ModelAssetDescriptor } from \"types/loader.types\";\nimport { createFBXLoader } from \"../../plugins/loader/fbx_loader\";\nimport { createGLBLoader } from \"../../plugins/loader/glb_loader\";\nimport { createHDRLoader } from \"../../plugins/loader/hdr_loader\";\nimport { GlobalStateManager, LoadingContext } from \"./state/stateType\";\n\nexport interface LoaderProps {\n  scene: Scene;\n  renderer: WebGLRenderer;\n  loaderEventBus: EventBus<LoadingEvents>;\n  stateManager: GlobalStateManager;\n  storageManager: GlobalStorageManager;\n}\n\nexport interface Loader {\n  configure: () => void;\n  load: (assets: ModelAssetDescriptor[]) => Promise<{\n    success: string[];\n    error: string[];\n  }>;\n  dispose: () => void;\n}\n/**\n * @description creates a loader with the given settings\n * @param options options to change loader settings\n * @param context global context with references\n * @returns Loader\n */\nexport const createLoader = ({\n  scene,\n  renderer,\n  loaderEventBus,\n  stateManager,\n  storageManager,\n}: LoaderProps): Loader => {\n  const manager: LoadingManager = new LoadingManager();\n  let isConfigured: boolean = false;\n  const [glbLoader, fbxLoader, hdrLoader] = [\n    createGLBLoader({\n      scene,\n      loadingManager: manager,\n      storageManager,\n    }),\n    createFBXLoader({\n      scene,\n      loadingManager: manager,\n      storageManager,\n    }),\n    createHDRLoader({\n      scene,\n      loadingManager: manager,\n      renderer,\n      storageManager,\n    }),\n  ];\n  const assetQueue: {\n    glb: ModelAssetDescriptor[];\n    fbx: ModelAssetDescriptor[];\n    hdr: ModelAssetDescriptor[];\n  } = {\n    glb: [],\n    fbx: [],\n    hdr: [],\n  };\n\n  /**\n   * @description attaches the event bus for listening to loading changes\n   */\n  const _configureLoadingManager = () => {\n    manager.onStart = (url, itemsLoaded, itemsTotal) => {\n      loaderEventBus.emit({\n        type: \"load:start\",\n        url: url,\n        loaded: itemsLoaded,\n        total: itemsTotal,\n      });\n      stateManager.loading.setState({\n        loading: { active: true, progress: 0 } as LoadingContext,\n      });\n    };\n\n    manager.onProgress = (url, itemsLoaded, itemsTotal) => {\n      loaderEventBus.emit({\n        type: \"load:progress\",\n        url: url,\n        loaded: itemsLoaded,\n        total: itemsTotal,\n      });\n      stateManager.loading.setState({\n        loading: {\n          active: true,\n          progress: itemsLoaded / itemsTotal,\n        } as LoadingContext,\n      });\n    };\n\n    manager.onLoad = () => {\n      loaderEventBus.emit({\n        type: \"load:complete\",\n      });\n    };\n\n    manager.onError = (url) => {\n      loaderEventBus.emit({\n        type: \"load:error\",\n        url: url,\n      });\n    };\n\n    isConfigured = true;\n  };\n\n  const pushToRespectiveLoaderQueue = (model: ModelAssetDescriptor) => {\n    switch (model.type) {\n      case \"glb\":\n        assetQueue.glb.push(model);\n        break;\n      case \"fbx\":\n        assetQueue.fbx.push(model);\n        break;\n      case \"hdr\":\n        assetQueue.hdr.push(model);\n        break;\n      default:\n        break;\n    }\n  };\n\n  /**\n   * @description create necessary loaders\n   */\n  const _configurePlugins = (assets: ModelAssetDescriptor[]) => {\n    assets.forEach((asset) => {\n      pushToRespectiveLoaderQueue(asset);\n    });\n  };\n\n  /**\n   * @description configuration\n   */\n  const _configure = () => {\n    _configureLoadingManager();\n  };\n\n  /**\n   * @description load all types of assets\n   */\n  const load = async (\n    assets: LoadOptions\n  ): Promise<{ success: []; error: [] }> => {\n    if (!isConfigured)\n      throw new Error(\n        `Error: Trying to load from loader before configuring it`\n      );\n\n    const promises: Promise<void>[] = [];\n    _configurePlugins(assets);\n\n    promises.push(glbLoader.load(assetQueue.glb));\n    promises.push(fbxLoader.load(assetQueue.fbx));\n    promises.push(hdrLoader.load(assetQueue.hdr));\n\n    await Promise.allSettled(promises);\n    assetQueue.fbx = [];\n    assetQueue.glb = [];\n    assetQueue.hdr = [];\n\n    return {\n      success: [],\n      error: [],\n    };\n  };\n\n  const dispose = () => {};\n\n  return {\n    configure: _configure,\n    load: load,\n    dispose: dispose,\n  };\n};\n","import { GlobalStorageManager } from \"engine/managers/storage/storageTypes\";\nimport { Scene } from \"three\";\nimport { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader.js\";\nimport type { LoadingManager } from \"three/src/loaders/LoadingManager.js\";\nimport { ModelAssetDescriptor } from \"types/loader.types\";\nimport { LoaderPlugin } from \"types/plugin.types\";\n\nexport interface FBXLoaderProps {\n  scene: Scene;\n  loadingManager: LoadingManager;\n  storageManager: GlobalStorageManager;\n}\n\nexport const createFBXLoader = ({\n  loadingManager,\n  scene,\n  storageManager,\n}: FBXLoaderProps): LoaderPlugin => {\n  const fbxLoader: FBXLoader = new FBXLoader(loadingManager);\n\n  /**\n   * @description load the mesh\n   * @param metaData meta-data for loading the mesh\n   */\n  const _loadMesh = async (metaData: ModelAssetDescriptor) => {\n    try {\n      const model = await fbxLoader.loadAsync(metaData.path);\n      storageManager.getStorage(\"model\").store(metaData.id, {\n        animations: model.animations,\n        groups: model,\n      });\n      scene.add(model);\n    } catch (err) {\n      throw new Error(`Error while loading fbx file : ${err}`);\n    }\n  };\n\n  const load = async (assets: ModelAssetDescriptor[]) => {\n    const promises: Promise<void>[] = [];\n    assets.forEach((asset) => {\n      promises.push(_loadMesh(asset));\n    });\n\n    await Promise.allSettled(promises);\n  };\n\n  return {\n    load: load,\n  };\n};\n","import { GlobalStorageManager } from \"engine/managers/storage/storageTypes\";\nimport { LoadingManager, Scene } from \"three\";\nimport { DRACOLoader } from \"three/examples/jsm/loaders/DRACOLoader.js\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\nimport { ModelAssetDescriptor } from \"types/loader.types\";\nimport { LoaderPlugin } from \"types/plugin.types\";\n\nexport interface GLBLoaderProps {\n  scene: Scene;\n  loadingManager: LoadingManager;\n  storageManager: GlobalStorageManager;\n}\n\nexport const createGLBLoader = ({\n  scene,\n  loadingManager,\n  storageManager,\n}: GLBLoaderProps): LoaderPlugin => {\n  const gltfLoader: GLTFLoader = new GLTFLoader(loadingManager);\n  const dracoLoader = new DRACOLoader();\n  dracoLoader.setDecoderPath(\"/public/draco/\");\n  gltfLoader.setDRACOLoader(dracoLoader);\n\n  /**\n   * @description load the mesh\n   * @param metaData meta-data for loading the mesh\n   */\n  const _loadMesh = async (metaData: ModelAssetDescriptor) => {\n    try {\n      const model = await gltfLoader.loadAsync(metaData.path);\n      storageManager.getStorage(\"model\").store(metaData.id, {\n        animations: model.animations,\n        groups: model.scene,\n      });\n      scene.add(model.scene);\n    } catch (err) {\n      throw new Error(`Errr occuerd while loading a glb file : ${err}`);\n    }\n  };\n\n  const load = async (assets: ModelAssetDescriptor[]) => {\n    const promises: Promise<void>[] = [];\n    assets.forEach((asset) => {\n      promises.push(_loadMesh(asset));\n    });\n\n    await Promise.allSettled(promises);\n  };\n\n  return {\n    load: load,\n  };\n};\n","import { GlobalStorageManager } from \"engine/managers/storage/storageTypes\";\nimport {\n  DataTexture,\n  LoadingManager,\n  PMREMGenerator,\n  Scene,\n  WebGLRenderer,\n} from \"three\";\nimport { RGBELoader } from \"three/examples/jsm/loaders/RGBELoader.js\";\nimport { ModelAssetDescriptor } from \"types/loader.types\";\nimport { LoaderPlugin } from \"types/plugin.types\";\n\nexport interface HDRTextureLoaderProps {\n  scene: Scene;\n  renderer: WebGLRenderer;\n  loadingManager: LoadingManager;\n  storageManager: GlobalStorageManager;\n}\n\n/**\n * @description loads .hdr files and illuminates scene\n * @param props hdr loading properties\n * @returns HDR loader plugin\n */\nexport const createHDRLoader = ({\n  loadingManager,\n  renderer,\n  scene,\n}: HDRTextureLoaderProps): LoaderPlugin => {\n  const pmremGenerator: PMREMGenerator = new PMREMGenerator(renderer);\n  const rgbeLoader: RGBELoader = new RGBELoader(loadingManager);\n\n  /**\n   * @description loads a hdr file\n   * @param metaData meta-data for loading hdr\n   */\n  const _loadHDRTexture = async (\n    metaData: ModelAssetDescriptor\n  ): Promise<void> => {\n    return new Promise((reject, resolve) => {\n      console.log(\"path\", metaData.path);\n      rgbeLoader.load(\n        metaData.path,\n        (data: DataTexture, texData: object) => {\n          const envMap = pmremGenerator.fromEquirectangular(data).texture;\n          data.dispose();\n          scene.environment = envMap;\n          resolve();\n        },\n        undefined,\n        (err) => {\n          reject();\n        }\n      );\n    });\n  };\n\n  const load = async (assets: ModelAssetDescriptor[]) => {\n    const promises: Promise<void>[] = [];\n\n    assets.forEach(async (asset) => {\n      promises.push(_loadHDRTexture(asset));\n    });\n\n    await Promise.allSettled(promises);\n  };\n\n  const dispose = () => {\n    pmremGenerator.dispose();\n  };\n\n  return {\n    load: load,\n  };\n};\n","import { PerspectiveCamera, Scene, Vector3 } from \"three\";\n\nexport interface CameraProps {\n  camera: PerspectiveCamera;\n  scene: Scene;\n}\n\nexport interface CameraManager {\n  mount: () => void;\n  activate: () => void;\n  deactivate: () => void;\n  unmount: () => void;\n}\n\nexport const createCameraManager = (props: CameraProps): CameraManager => {\n  const { camera, scene } = props;\n  const target = new Vector3(0, 1, 2);\n  const mount = () => {};\n\n  const activate = () => {\n    camera.position.set(target.x, 1, target.z);\n    camera.rotation.set(0, 0, 0, \"XYZ\");\n  };\n\n  const deactivate = () => {};\n\n  const unmount = () => {};\n\n  return {\n    mount: mount,\n    activate: activate,\n    deactivate: deactivate,\n    unmount: unmount,\n  };\n};\n","import { Logger } from \"@utils/Logger\";\nimport { GlobalStorageManager } from \"engine/managers/storage/storageTypes\";\nimport { Material, Mesh, MeshStandardMaterial } from \"three\";\nimport { ModelIdentifier } from \"types/rooms.types\";\n\nexport interface GroundProps {\n  reference: ModelIdentifier;\n  storage: GlobalStorageManager;\n  logger: Logger;\n}\n\nexport interface Ground {\n  mount: () => void;\n  actiavte: () => void;\n  deactivate: () => void;\n  unmount: () => void;\n}\n\nexport const createGround = ({\n  logger,\n  reference,\n  storage,\n}: GroundProps): Ground => {\n  let ground: Nullable<Mesh> = null;\n\n  const mount = () => {\n    ground = storage\n      .getStorage(\"model\")\n      .retrieve(reference.storageId)\n      ?.groups.getObjectByName(reference.id) as Mesh;\n\n    if (!ground) {\n      console.error(`Cant get ground mesh from the id : ${reference.id}`);\n      return;\n    }\n    ground.material = (ground.material as Material).clone();\n    ground.receiveShadow = true;\n\n    (ground.material as Material).needsUpdate = true;\n    (ground.material as MeshStandardMaterial).opacity = 0.15;\n    (ground.material as MeshStandardMaterial).transparent = true;\n\n    logger.onMount({ origin: \"about-ground\" });\n  };\n\n  const activate = () => {};\n\n  const deactivate = () => {};\n\n  const unmount = () => {};\n\n  return {\n    mount: mount,\n    actiavte: activate,\n    deactivate: deactivate,\n    unmount: unmount,\n  };\n};\n","import {\n  AmbientLight,\n  DirectionalLight,\n  PCFShadowMap,\n  Scene,\n  WebGLRenderer,\n} from \"three\";\n\nexport interface LightingProps {\n  scene: Scene;\n  renderer: WebGLRenderer;\n}\n\nexport interface Lighting {\n  mount: () => void;\n  activate: () => void;\n  deactivate: () => void;\n  unmount: () => void;\n}\n\nexport const createLighting = ({\n  renderer,\n  scene,\n}: LightingProps): Lighting => {\n  let dirLight: Nullable<DirectionalLight>;\n  let ambientLight: Nullable<AmbientLight>;\n\n  const mount = () => {\n    dirLight = new DirectionalLight(0xffffff, 5);\n    dirLight.castShadow = true;\n    dirLight.position.set(0, 2, 0);\n    dirLight.target.position.set(0, 1, 0);\n\n    dirLight.shadow.mapSize.width = 1024;\n    dirLight.shadow.mapSize.height = 1024;\n    dirLight.shadow.camera.near = 0.1;\n    dirLight.shadow.camera.far = 50;\n    dirLight.shadow.camera.left = -10;\n    dirLight.shadow.camera.right = 10;\n    dirLight.shadow.camera.top = 10;\n    dirLight.shadow.camera.bottom = -10;\n\n    ambientLight = new AmbientLight(0xffffff);\n\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = PCFShadowMap;\n  };\n\n  const activate = () => {\n    if (dirLight) scene.add(dirLight);\n    if (ambientLight) scene.add(ambientLight);\n  };\n\n  const deactivate = () => {\n    if (dirLight) scene.remove(dirLight);\n    if (ambientLight) scene.remove(ambientLight);\n  };\n\n  const unmount = () => {};\n\n  return {\n    mount: mount,\n    activate: activate,\n    deactivate: deactivate,\n    unmount: unmount,\n  };\n};\n","import { Logger } from \"@utils/Logger\";\nimport { GlobalStorageManager } from \"engine/managers/storage/storageTypes\";\nimport {\n  AnimationMixer,\n  Object3D,\n  Object3DEventMap,\n  Scene,\n  Vector3,\n} from \"three\";\nimport { ModelIdentifier } from \"types/rooms.types\";\n\nexport interface PlayerProps {\n  reference: ModelIdentifier;\n  logger: Logger;\n  storage: GlobalStorageManager;\n  scene: Scene;\n}\n\nexport interface PlayerContext {\n  scene: Scene;\n}\n\nexport interface Player {\n  mount: () => void;\n  activate: () => void;\n  deactiavte: () => void;\n  unmount: () => void;\n}\n\ninterface PlayerState {}\n\ninterface ObjectReferences {\n  playerRoot: Object3D;\n}\n\ninterface Animation {\n  mixer: AnimationMixer | null;\n}\n\nconst PLAYER_CONSTANTS = {\n  MOVEMENT_ACCELERATION: 0.05,\n  MAX_VELOCITY: 0.05,\n};\n\ninterface TempData {\n  inputDirection: Vector3;\n}\n\nexport const createPlayer = ({\n  logger,\n  reference,\n  scene,\n  storage,\n}: PlayerProps): Player => {\n  let objects: ObjectReferences;\n  let animations: Animation;\n\n  const castShadow = (player: Object3D<Object3DEventMap>) => {\n    player.traverse((child) => {\n      child.castShadow = true;\n    });\n  };\n\n  const mount = () => {\n    try {\n      logger.onMount({ origin: \"about-room-player\" });\n      let playerRoot = scene.getObjectByName(reference.id);\n\n      if (!playerRoot) {\n        throw new Error(`player doesn't exist for the id ${reference.id}`);\n      }\n\n      //Local References\n      objects = {\n        playerRoot: playerRoot,\n      };\n\n      animations = {\n        mixer: new AnimationMixer(playerRoot),\n      };\n    } catch (err) {\n      console.error(`Player mesh cant be obtained :${err}`);\n    }\n  };\n\n  const activate = () => {\n    if (objects.playerRoot) {\n      objects.playerRoot.rotation.set(0, -Math.PI / 4, 0, \"XYZ\");\n      objects.playerRoot.castShadow = true;\n      castShadow(objects.playerRoot);\n\n      objects.playerRoot.position.set(1.5, 0, 0);\n    }\n  };\n\n  const deactivate = () => {};\n\n  const unmount = () => {\n    if (objects.playerRoot) {\n      objects.playerRoot.position.set(1.5, 0, 0);\n    }\n  };\n\n  return {\n    mount: mount,\n    activate: activate,\n    deactiavte: deactivate,\n    unmount: unmount,\n  };\n};\n","import { Group, Object3DEventMap } from \"three\";\n\nimport { getServiceRegistry } from \"engine/core/ServiceRegistry\";\nimport { ModelIdentifier, Room } from \"types/rooms.types\";\nimport { CameraManager, createCameraManager } from \"./camera\";\nimport { createGround, Ground } from \"./ground\";\nimport { createLighting, Lighting } from \"./lights\";\nimport { createPlayer, Player } from \"./player\";\n\nexport interface AboutRoomProps {\n  player: ModelIdentifier;\n  ground: ModelIdentifier;\n}\n\ninterface Components {\n  camera: CameraManager;\n  player: Player;\n  ground: Ground;\n  lighting: Lighting;\n}\n\nexport const createAboutRoom = ({ ground, player }: AboutRoomProps): Room => {\n  //====References====\n  const serviceRegistry = getServiceRegistry();\n  const [storage, logger, context] = [\n    serviceRegistry.get(\"GlobalStorageManager\"),\n    serviceRegistry.get(\"Logger\"),\n    serviceRegistry.get(\"ThreeJSContextManager\"),\n  ];\n\n  const { scene, camera, orbit, renderer } = {\n    scene: context.get(\"scene\")!,\n    camera: context.get(\"camera\")!,\n    orbit: context.get(\"orbit\")!,\n    renderer: context.get(\"renderer\")!,\n  };\n\n  //===Local===\n  const components: Components = {\n    camera: createCameraManager({ camera: camera, scene: scene }),\n    player: createPlayer({ logger, reference: player, scene, storage }),\n    ground: createGround({ logger, reference: ground, storage }),\n    lighting: createLighting({ renderer, scene }),\n  };\n\n  let group: Nullable<Group<Object3DEventMap>> = null;\n\n  const mount = () => {\n    logger.onMount({ origin: \"about-room\" });\n    components.ground.mount();\n    components.player.mount();\n    components.camera.mount();\n    components.lighting.mount();\n    group =\n      storage.getStorage(\"model\").retrieve(ground.storageId)?.groups ?? null;\n  };\n\n  const activate = () => {\n    if (group) group.visible = true;\n\n    orbit.enabled = false;\n    components.camera.activate();\n    components.ground.actiavte();\n    components.lighting.activate();\n    components.player.activate();\n  };\n\n  const update = (deltaTime: number) => {\n    // components.camera.update(deltaTime);\n  };\n\n  const deactivate = () => {\n    if (group) group.visible = false;\n\n    components.camera.deactivate();\n    components.ground.deactivate();\n    components.lighting.deactivate();\n    components.player.deactiavte();\n  };\n\n  const unmount = () => {\n    components.camera.unmount();\n    components.ground.unmount();\n    components.lighting.unmount();\n    components.player.unmount();\n  };\n\n  return {\n    mount: mount,\n    setActive: activate,\n    update: update,\n    setDeactive: deactivate,\n    unmount: unmount,\n    isLoaded: false,\n  };\n};\n","import { Euler, MathUtils, PerspectiveCamera, Spherical, Vector3 } from \"three\";\nimport { GenericLifeCycle } from \"types/rooms.types\";\n\nexport type CameraMode = \"firstPerson\" | \"thirdPerson\";\n\nexport interface CameraProps {\n  /**Main Camera */\n  camera: PerspectiveCamera;\n}\n\n/** Contains the Updated info about player */\nexport type UpdatedInfo = {\n  playerPosition: Vector3;\n  rotationDelta: { yaw: number; pitch: number };\n};\n\n/** Controls to manage camera */\nexport interface CameraManager extends GenericLifeCycle {\n  /** Updates the camera to look the player */\n  update: (info: UpdatedInfo) => { rotation: Euler };\n\n  /**sets the mode of camera */\n  setMode: (mode: CameraMode) => void;\n}\n\n//Third Person Config\nconst TPV_CONFIG = {\n  DISTANCE: 3,\n  HEIGHT_OFFSET: 2,\n  PITCH_MIN: 0,\n  PITH_MAX: Math.PI / 2,\n  SMOOTHING: 0.1,\n} as const;\n\n//Temporary Variables\n\nlet tempPosition = new Vector3(0, 0, 0);\nlet tempOffset = new Vector3(0, 0, 0);\nlet tempLookTarget = new Vector3(0, 0, 0);\n\n/**\n *\n * @param yaw the yaw angle\n * @param pitch the pitch angle\n * @returns restricted angles\n */\nfunction clampRotation(\n  yaw: number,\n  pitch: number\n): { yaw: number; pitch: number } {\n  return {\n    yaw: MathUtils.euclideanModulo(yaw, Math.PI * 2),\n    pitch: MathUtils.clamp(pitch, TPV_CONFIG.PITCH_MIN, TPV_CONFIG.PITH_MAX),\n  };\n}\n\n/**\n *\n * @param spherical the spherical coordinates\n * @returns the Vector based on spherical coordinates\n */\nfunction computeThirdPersonOffset(spherical: Spherical): Vector3 {\n  tempOffset.set(0, 0, 0);\n  tempOffset.setFromSpherical(spherical);\n  tempOffset.y += TPV_CONFIG.HEIGHT_OFFSET;\n\n  return tempOffset;\n}\n\n/**\n * Smoothly interpolate value between from and to vectors based on alpha\n */\nfunction lerpVector(from: Vector3, to: Vector3, alpha: number) {\n  return from.lerp(to, alpha);\n}\n\ninterface InternalState {\n  mode: CameraMode;\n  rotation: { yaw: number; pitch: number };\n  spherical: Spherical;\n}\n\nexport const createCameraManager = ({ camera }: CameraProps): CameraManager => {\n  let isThirdPerson: boolean = true;\n  let state: InternalState = {\n    mode: \"thirdPerson\",\n    rotation: { pitch: Math.PI / 2, yaw: 0 },\n    spherical: new Spherical(TPV_CONFIG.DISTANCE, Math.PI / 2, 0),\n  };\n\n  const setCamera = (mode: CameraMode) => {\n    state.mode = mode;\n  };\n\n  const mount = () => {};\n\n  const activate = () => {\n    camera.position.set(1, 2, 3);\n  };\n\n  /**\n   *\n   * @param yaw\n   * @param pitch\n   */\n  const updateRotation = (delta: { yaw: number; pitch: number }) => {\n    state.rotation.yaw += delta.yaw;\n    state.rotation.pitch += delta.pitch;\n\n    const clamped = clampRotation(state.rotation.yaw, state.rotation.pitch);\n    state.rotation.yaw = clamped.yaw;\n    state.rotation.pitch = clamped.pitch;\n  };\n\n  const updateThirdPerson = (info: UpdatedInfo) => {\n    state.spherical.theta = state.rotation.yaw;\n    state.spherical.phi = state.rotation.pitch;\n\n    //Calculate offset\n    tempOffset.copy(computeThirdPersonOffset(state.spherical));\n\n    //Calculate target position and camera lerp smoothly\n    tempPosition.copy(info.playerPosition).add(tempOffset);\n    camera.position.copy(\n      lerpVector(camera.position, tempPosition, TPV_CONFIG.SMOOTHING)\n    );\n\n    tempLookTarget.copy(info.playerPosition);\n    tempLookTarget.y += TPV_CONFIG.HEIGHT_OFFSET;\n    camera.lookAt(tempLookTarget);\n  };\n\n  const updateFirstPerson = (playerPos: Vector3) => {\n    camera.position.copy(playerPos);\n    camera.rotation.set(state.rotation.pitch, state.rotation.yaw, 0);\n  };\n\n  const update = (info: UpdatedInfo): { rotation: Euler } => {\n    updateRotation(info.rotationDelta);\n\n    if (state.mode === \"thirdPerson\") {\n      updateThirdPerson(info);\n    } else {\n      updateFirstPerson(info.playerPosition);\n    }\n\n    return {\n      rotation: camera.rotation,\n    };\n  };\n\n  const deactivate = () => {};\n\n  const unmount = () => {};\n\n  return {\n    setMode: setCamera,\n    update: update,\n    mount: mount,\n    activate: activate,\n    deactivate: deactivate,\n    unmount: unmount,\n  };\n};\n","import { PerspectiveCamera, ShaderMaterial, Vector3 } from \"three\";\nimport { GridFragment } from \"./grid-fragment\";\nimport { GridVertex } from \"./grid-vertex\";\n\nexport interface GridMaterialProps {\n  camera: PerspectiveCamera;\n  fadeNear: number;\n  fadeFar: number;\n}\n\nexport interface GridMaterial {\n  mat: ShaderMaterial;\n  update: (cameraPos: Vector3) => void;\n}\n\nexport const createGridMaterial = (props: GridMaterialProps) => {\n  const mat: ShaderMaterial = new ShaderMaterial({\n    uniforms: {\n      time: { value: 1 },\n      cameraPos: { value: props.camera.position },\n      fadeNear: { value: props.fadeNear },\n      fadeFar: { value: props.fadeFar },\n    },\n    vertexShader: GridVertex,\n    fragmentShader: GridFragment,\n  });\n\n  const update = (cameraPos: Vector3) => {\n    mat.uniforms.cameraPos.value = cameraPos;\n  };\n\n  return {\n    mat: mat,\n    update: update,\n  };\n};\n","export const GridFragment = `\n    precision highp float;\n\n    varying vec2 vUV;\n\n    float line(vec2 uv,float lineWidth){\n\n       \n        float lineAA=fwidth(uv.x);\n \n        float lineUV=1.0-abs(fract(uv.x)*2.0-1.0);\n\n        return smoothstep(lineWidth+lineAA,lineWidth-lineAA,lineUV);\n    }  \n\n    float grid(vec2 uv,float lineWidth){\n\n        vec2 uvDeriv=fwidth(uv);\n        vec2 drawWidth=max(vec2(lineWidth),uvDeriv);\n        vec2 lineAA=uvDeriv*1.5;\n \n        vec2 gridUV=1.0-abs(fract(uv)*2.0-1.0);\n\n        vec2 gridLines=smoothstep(drawWidth+lineAA,drawWidth-lineAA,gridUV);\n        gridLines*=clamp(lineWidth/drawWidth,0.0,1.0);\n\n        return mix(gridLines.x,1.0,gridLines.y);\n    } \n\n    void main(){\n        vec2 st=vUV*1500.0;\n       \n        gl_FragColor = vec4(vec3(grid(st,0.01)),1.0);\n    }\n\n`;\n","export const GridVertex = `\n    precision highp float;\n\n    \n\n    varying vec2 vUV;\n    varying vec4 vWorldPos; \n\n    void main(){\n        vUV=uv;\n        vWorldPos=modelViewMatrix*vec4(position,1.0);\n\n        gl_Position = projectionMatrix*modelViewMatrix*vec4(position,1.0);\n    }\n\n`;\n","import { Logger } from \"@utils/Logger\";\nimport { GlobalStorageManager } from \"engine/managers/storage/storageTypes\";\nimport { createGridMaterial, GridMaterial } from \"materials/grid/grid-material\";\nimport { Mesh, PerspectiveCamera } from \"three\";\nimport { ModelIdentifier } from \"types/rooms.types\";\n\nexport interface GroundProps {\n  references: ModelIdentifier;\n  storage: GlobalStorageManager;\n  logger: Logger;\n  camera: PerspectiveCamera;\n}\n\nexport interface Ground {\n  mount: () => void;\n  update: () => void;\n  activate: () => void;\n  deactivate: () => void;\n  unmount: () => void;\n}\n\nexport const createGround = ({\n  logger,\n  references,\n  storage,\n  camera,\n}: GroundProps): Ground => {\n  let ground: Nullable<Mesh> = null;\n  let gridMat: Nullable<GridMaterial> = null;\n\n  const mount = () => {\n    ground =\n      (storage\n        .getStorage(\"model\")\n        .retrieve(references.storageId)\n        ?.groups.getObjectByName(references.id) as Mesh) ?? null;\n\n    if (!ground) {\n      console.error(\n        `Cant get ground mesh from the id : ${references.id} ${references.storageId}`\n      );\n      return;\n    }\n\n    gridMat = createGridMaterial({\n      camera: camera,\n      fadeNear: 0.1,\n      fadeFar: 1,\n    });\n\n    ground.material = gridMat.mat;\n    logger.onMount({ origin: \"Navigation-Ground\" });\n  };\n\n  const update = () => {\n    gridMat?.update(camera.position);\n  };\n\n  const activate = () => {};\n  const deactivate = () => {};\n\n  const unmount = () => {};\n\n  return {\n    mount: mount,\n    update: update,\n    activate: activate,\n    deactivate: deactivate,\n    unmount: unmount,\n  };\n};\n","import { AnimationAction, AnimationMixer } from \"three\";\n\nexport interface AnimationControllerProps {\n  mixer: AnimationMixer;\n  actions: Record<string, AnimationAction>;\n  crossFadeDuration: 0.3;\n}\n\nexport interface AnimationController {\n  play: (animationName: string, blendDuration?: number) => void;\n  stop: () => void;\n  getCurrentAnimation: () => string | null;\n  update: (deltaTime: number) => void;\n}\n\nexport const createAnimationController = ({\n  mixer,\n  actions,\n  crossFadeDuration = 0.3,\n}: AnimationControllerProps): AnimationController => {\n  let currentAnimation: Nullable<string> = null;\n  let blendTime: number = 0;\n  let currentAction: Nullable<AnimationAction> = null;\n\n  const play = (animationName: string, blendDuration = 0) => {\n    if (currentAnimation === animationName) return;\n\n    const nextAction = actions[animationName];\n    if (!nextAction) return;\n    nextAction.reset();\n    nextAction.play();\n\n    if (currentAction != null) {\n      (currentAction as AnimationAction).crossFadeTo(\n        nextAction,\n        crossFadeDuration,\n        false\n      );\n    }\n\n    currentAction = nextAction;\n    currentAnimation = animationName;\n  };\n\n  const stop = () => {};\n\n  const getCurrentAnimation = () => {\n    return currentAnimation;\n  };\n\n  const update = (deltaTime: number) => {\n    if (deltaTime !== undefined) mixer.update(deltaTime);\n  };\n\n  return {\n    play: play,\n    getCurrentAnimation: getCurrentAnimation,\n    stop: stop,\n    update: update,\n  };\n};\n","import { InputManager } from \"engine/managers/InputManager\";\nimport { AnimationController } from \"../animation\";\n\ntype States = \"Idle\" | \"Walk\" | \"Run\";\n\ninterface PlayerFSM {\n  changeState: (state: States) => void;\n  isMoving: () => boolean;\n  isShiftPressed: () => boolean;\n}\n\ninterface StateProps {\n  animationId: string;\n  animationController: AnimationController;\n}\n\ninterface State {\n  enter: (player: PlayerFSM) => void;\n  execute: (player: PlayerFSM) => void;\n  exit: (player: PlayerFSM) => void;\n}\n\nconst Idle = (props: StateProps): State => {\n  const enter = (player: PlayerFSM) => {\n    console.log(\"enter idle\");\n    props.animationController.play(props.animationId);\n  };\n\n  const execute = (player: PlayerFSM) => {\n    if (player.isMoving()) {\n      if (player.isShiftPressed()) {\n        player.changeState(\"Run\");\n      } else {\n        player.changeState(\"Walk\");\n      }\n    }\n  };\n\n  const exit = (player: PlayerFSM) => {\n    console.log(\"exit idle\");\n  };\n\n  return {\n    enter: enter,\n    execute: execute,\n    exit: exit,\n  };\n};\n\nconst Walk = (props: StateProps): State => {\n  const enter = (player: PlayerFSM) => {\n    console.log(\"enter walk\");\n    props.animationController.play(props.animationId);\n  };\n\n  const execute = (player: PlayerFSM) => {\n    if (!player.isMoving()) {\n      player.changeState(\"Idle\");\n    } else if (player.isShiftPressed()) {\n      player.changeState(\"Run\");\n    }\n  };\n\n  const exit = (player: PlayerFSM) => {\n    console.log(\"exit walk\");\n  };\n\n  return {\n    enter: enter,\n    execute: execute,\n    exit: exit,\n  };\n};\n\nconst Run = (props: StateProps): State => {\n  const enter = (player: PlayerFSM) => {\n    console.log(\"enter run\");\n    props.animationController.play(props.animationId);\n  };\n\n  const execute = (player: PlayerFSM) => {\n    if (!player.isMoving()) {\n      player.changeState(\"Idle\");\n    } else if (!player.isShiftPressed()) {\n      player.changeState(\"Walk\");\n    }\n  };\n\n  const exit = (player: PlayerFSM) => {\n    console.log(\"exit run\");\n  };\n\n  return {\n    enter: enter,\n    execute: execute,\n    exit: exit,\n  };\n};\n\nexport interface FSMOptions {\n  inputs: InputManager;\n  animationController: AnimationController;\n}\n\nexport interface FSMController {\n  mount: () => void;\n  update: (deltaTime: number) => void;\n  unmount: () => void;\n}\n\nexport const createFSMController = ({\n  inputs,\n  animationController,\n}: FSMOptions): FSMController => {\n  const { mouse, keyboard } = {\n    mouse: inputs.getController(\"mouse\"),\n    keyboard: inputs.getController(\"keyboard\"),\n  };\n\n  let shiftPressed: boolean;\n  const { idle, walk, run } = {\n    idle: Idle({\n      animationController: animationController,\n      animationId: \"Idle\",\n    }),\n    walk: Walk({\n      animationController: animationController,\n      animationId: \"Walk\",\n    }),\n    run: Run({\n      animationController: animationController,\n      animationId: \"Run\",\n    }),\n  };\n  let state: State = idle;\n  let currentState: States = \"Idle\";\n\n  const update = (deltaTime: number) => {\n    state.execute(playerFSM);\n    animationController.update(deltaTime);\n  };\n\n  const isMoving = () => {\n    if (\n      keyboard?.isKeyPressed(\"w\") ||\n      keyboard?.isKeyPressed(\"a\") ||\n      keyboard?.isKeyPressed(\"s\") ||\n      keyboard?.isKeyPressed(\"d\")\n    ) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const isShiftPressed = () => {\n    return keyboard?.isKeyPressed(\"shift\") ?? false;\n  };\n\n  const _getState = (newState: States) => {\n    switch (newState) {\n      case \"Idle\":\n        return idle;\n      case \"Walk\":\n        return walk;\n      case \"Run\":\n        return run;\n      default:\n        return idle;\n    }\n  };\n\n  const changeState = (newState: States) => {\n    if (currentState !== newState) {\n      currentState = newState;\n      state.exit(playerFSM);\n      state = _getState(newState);\n      state.enter(playerFSM);\n    }\n  };\n\n  const mount = () => {\n    state.enter(playerFSM);\n  };\n\n  const playerFSM: PlayerFSM = {\n    changeState: changeState,\n    isMoving: isMoving,\n    isShiftPressed: isShiftPressed,\n  };\n\n  const unmount = () => {};\n\n  return {\n    mount: mount,\n    update: update,\n    unmount: unmount,\n  };\n};\n","import { InputManager } from \"engine/managers/InputManager\";\nimport { GlobalStorageManager } from \"engine/managers/storage/storageTypes\";\nimport {\n  AnimationController,\n  createAnimationController,\n} from \"gameplay/modules/animation\";\nimport {\n  createFSMController,\n  FSMController,\n} from \"gameplay/modules/fsm/player\";\nimport { KeyboardInput } from \"plugins/input/keyboard\";\nimport { MouseInput } from \"plugins/input/mouse\";\nimport { AnimationMixer, Euler, Object3D, Vector3 } from \"three\";\nimport { GenericLifeCycle, ModelIdentifier } from \"types/rooms.types\";\n\nexport interface PlayerProps {\n  reference: ModelIdentifier;\n  storage: GlobalStorageManager;\n  InputManager: InputManager;\n}\n\nexport interface Player extends GenericLifeCycle {\n  /** Update based on controller input */\n  update: (deltaTime: number) => {\n    position: Vector3;\n    rotation: Euler;\n    rotationDelta: { yaw: number; pitch: number };\n  };\n}\n\ninterface PlayerState {\n  direction: Vector3;\n  velocity: Vector3;\n  rotationApplied: {\n    yaw: number;\n    pitch: number;\n  };\n}\n\ninterface Controllers {\n  input: {\n    mouse: Nullable<MouseInput>;\n    keyboard: Nullable<KeyboardInput>;\n  };\n  animation: AnimationController;\n  fsm: FSMController;\n}\n\ninterface ObjectReferences {\n  player: Nullable<Object3D>;\n}\n\nconst PLAYER_CONSTANTS = {\n  MOVEMENT_ACCELERATION: 0.05,\n  MAX_VELOCITY: 0.05,\n};\n\ninterface TempData {\n  inputDirection: Vector3;\n}\n\nexport const createPlayer = ({\n  reference,\n  storage,\n  InputManager,\n}: PlayerProps): Player => {\n  let controllers: Controllers;\n\n  let state: PlayerState = {\n    direction: new Vector3(0, 0, -1),\n    velocity: new Vector3(0, 0, 0),\n    rotationApplied: {\n      pitch: 0,\n      yaw: 0,\n    },\n  };\n  let tempData: TempData = {\n    inputDirection: new Vector3(0, 0, 0),\n  };\n\n  let objects: ObjectReferences = { player: null };\n\n  const mount = () => {\n    try {\n      const playerRoot = storage\n        .getStorage(\"model\")\n        .retrieve(reference.storageId);\n\n      if (!playerRoot) {\n        throw new Error(\n          `player doesn't exist for the id ${reference.storageId}`\n        );\n      }\n      const player = playerRoot?.groups;\n      const animations = playerRoot?.animations;\n\n      /**Animation */\n      const mixer = new AnimationMixer(player);\n      const animationController = createAnimationController({\n        mixer: mixer,\n        actions: {\n          Idle: mixer.clipAction(animations[0]),\n          Walk: mixer.clipAction(animations[3]),\n          Run: mixer.clipAction(animations[1]),\n        },\n        crossFadeDuration: 0.3,\n      });\n\n      const fsmController = createFSMController({\n        animationController: animationController,\n        inputs: InputManager,\n      });\n      fsmController.mount();\n\n      objects = {\n        player: player,\n      };\n\n      controllers = {\n        input: {\n          mouse: InputManager.getController(\"mouse\"),\n          keyboard: InputManager.getController(\"keyboard\"),\n        },\n        animation: animationController,\n        fsm: fsmController,\n      };\n    } catch (err) {\n      console.error(`Player mesh cant be obtained :${err}`);\n    }\n  };\n\n  const updateMouse = (mouse: Nullable<MouseInput>) => {\n    if (!mouse || !objects.player!) return;\n\n    state.rotationApplied = mouse.getRotation();\n    objects.player.rotation.y += state.rotationApplied.yaw;\n  };\n\n  const updateKeyboard = (\n    keyboard: Nullable<KeyboardInput>,\n    deltaTime: number\n  ) => {\n    if (!keyboard || !objects.player) return;\n    const FRICTION = 5.0;\n    const VELOCITY_DEADZONE = 0.001;\n\n    const { inputDirection } = tempData;\n    inputDirection.set(0, 0, 0);\n\n    if (keyboard.isKeyPressed(\"w\")) inputDirection.z -= 1;\n    if (keyboard.isKeyPressed(\"s\")) inputDirection.z += 1;\n    if (keyboard.isKeyPressed(\"a\")) inputDirection.x -= 1;\n    if (keyboard.isKeyPressed(\"d\")) inputDirection.x += 1;\n\n    if (inputDirection.length() > 0) {\n      //normalize direction\n      inputDirection.applyQuaternion(objects.player.quaternion);\n      inputDirection.normalize();\n\n      //accelerate towards the direction\n      state.velocity.add(\n        inputDirection.multiplyScalar(\n          PLAYER_CONSTANTS.MOVEMENT_ACCELERATION * deltaTime\n        )\n      );\n      //ensure the velocity doesn't go over the threshold\n      state.velocity.clampLength(0, PLAYER_CONSTANTS.MAX_VELOCITY);\n    } else if (inputDirection.length() == 0 && state.velocity.length() > 0) {\n      const decay = Math.exp(-FRICTION * deltaTime);\n      state.velocity.multiplyScalar(decay);\n\n      if (state.velocity.lengthSq() < VELOCITY_DEADZONE * VELOCITY_DEADZONE) {\n        state.velocity.set(0, 0, 0);\n      }\n    }\n\n    objects.player.position.add(state.velocity);\n  };\n\n  const updateControllers = (deltaTime: number) => {\n    updateMouse(controllers.input.mouse);\n    updateKeyboard(controllers.input.keyboard, deltaTime);\n  };\n\n  const update = (deltaTime: number) => {\n    updateControllers(deltaTime);\n\n    controllers.fsm.update(deltaTime);\n\n    return {\n      position: objects.player?.position ?? new Vector3(0, 0, 0),\n      rotation: objects.player?.rotation ?? new Euler(0, 0, 0, \"XYZ\"),\n      rotationDelta: state.rotationApplied,\n    };\n  };\n\n  const activate = () => {\n    // objects.playerRoot.rotation.set(0,0,0,'XYZ')\n  };\n\n  const deactivate = () => {};\n\n  const unmount = () => {\n    try {\n      //objects.playerRoot.clear();\n    } catch (err) {\n      console.error(`Error while destroy player ${err}`);\n    }\n  };\n\n  return {\n    mount: mount,\n    activate: activate,\n    deactivate: deactivate,\n    update: update,\n    unmount: unmount,\n  };\n};\n","import { getServiceRegistry } from \"engine/core/ServiceRegistry\";\nimport { InputManager } from \"engine/managers/InputManager\";\nimport { Euler, Vector3 } from \"three\";\nimport { ObjectStorageUnit } from \"types/managers.types\";\nimport { ModelIdentifier, Room } from \"types/rooms.types\";\nimport { CameraManager, createCameraManager } from \"./camera\";\nimport { createGround, Ground } from \"./ground\";\nimport { createPlayer, Player } from \"./player\";\n\nexport interface NavigationRoomProps {\n  player: ModelIdentifier;\n  ground: ModelIdentifier;\n}\n\ninterface Entities {\n  player: Player;\n  ground: Ground;\n  camera: CameraManager;\n  inputs: InputManager;\n}\n\ninterface InternalState {\n  player: {\n    position: Vector3;\n    rotation: Euler;\n    rotationDelta: { yaw: number; pitch: number };\n  };\n}\n\ninterface TempData {}\n\nexport const createNavigationRoom = ({\n  player,\n  ground,\n}: NavigationRoomProps): Room => {\n  //External dependencies\n  const serviceRegistry = getServiceRegistry();\n\n  const [logger, storage, eventBusManager, InputManager, contextManager] = [\n    serviceRegistry.get(\"Logger\"),\n    serviceRegistry.get(\"GlobalStorageManager\"),\n    serviceRegistry.get(\"EventBusManager\"),\n    serviceRegistry.get(\"InputManager\"),\n    serviceRegistry.get(\"ThreeJSContextManager\"),\n  ];\n\n  //Internal\n  let components: Nullable<Entities> = {\n    camera: createCameraManager({ camera: contextManager.get(\"camera\")! }),\n    player: createPlayer({\n      reference: player,\n      InputManager: InputManager,\n      storage: storage,\n    }),\n    ground: createGround({\n      camera: contextManager.get(\"camera\")!,\n      logger: logger,\n      references: ground,\n      storage: storage,\n    }),\n    inputs: InputManager,\n  };\n\n  //TODO:no idea on what to add yet\n  let state: Nullable<InternalState> = null;\n  //TODO: no idea what temporary data to add yet\n  let tempData: Nullable<TempData> = null;\n\n  let room: Nullable<ObjectStorageUnit> = null;\n  let isMounted: boolean = false;\n\n  const activate = () => {\n    if (!room || !components) return;\n    room.groups.visible = true;\n    contextManager.get(\"orbit\")!.enabled = false;\n\n    components.camera.activate();\n    components.ground.activate();\n    components.player.activate();\n  };\n\n  const deactivate = () => {\n    if (!room || !components) return;\n    room.groups.visible = false;\n\n    components.camera.deactivate();\n    components.ground.deactivate();\n    components.player.deactivate();\n  };\n\n  const mount = () => {\n    if (isMounted || !components) return;\n\n    logger.onMount({ origin: \"Navigation Room\" });\n    state = {\n      player: {\n        position: new Vector3(0, 0, 0),\n        rotation: new Euler(0, 0, 0),\n        rotationDelta: { yaw: 0, pitch: 0 },\n      },\n    };\n\n    //get base root i.e group so that it can be used to toggle visibility\n    room = storage.getStorage(\"model\").retrieve(ground.storageId) ?? null;\n\n    components.player.mount();\n    components.ground.mount();\n    components.camera.mount();\n\n    isMounted = true;\n  };\n\n  const update = (deltaTime: number) => {\n    if (!isMounted || !components || !state) return;\n    contextManager.get(\"orbit\")!.update();\n    state.player = components.player.update(deltaTime);\n    components.camera.update({\n      playerPosition: state.player.position,\n      rotationDelta: state.player.rotationDelta,\n    });\n\n    //entities.ground.update();\n  };\n\n  const unmount = () => {\n    if (!isMounted || !components) return;\n\n    logger.onUnmount({ origin: \"Navigation Room\" });\n\n    components.player.unmount();\n    components.ground.unmount();\n\n    components = null;\n    room = null;\n  };\n\n  return {\n    mount: mount,\n    update: update,\n    unmount: unmount,\n    setActive: activate,\n    setDeactive: deactivate,\n    isLoaded: false,\n  };\n};\n","import { EventBusManager } from \"@events/EventBusManager\";\nimport { CatmullRomCurve3, PerspectiveCamera, Scene, Vector3 } from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n\nexport interface CameraProps {\n  camera: PerspectiveCamera;\n  scene: Scene;\n  orbit: OrbitControls;\n  eventBusManager: EventBusManager;\n}\n\nexport interface CameraManager {\n  mount: () => void;\n  activate: () => void;\n  update: (deltaTime: number) => void;\n  deactivate: () => void;\n  unmount: () => void;\n}\n\nexport const createCameraManager = ({\n  camera,\n  eventBusManager,\n  orbit,\n  scene,\n}: CameraProps): CameraManager => {\n  const points: Vector3[] = [\n    new Vector3(0, 2, 10),\n    new Vector3(0, 2, 5),\n    new Vector3(0, 2, 3),\n    new Vector3(0, 2, 2),\n    new Vector3(0, 2, 1),\n    new Vector3(0, 2, 0),\n    new Vector3(0, 2, -1),\n    new Vector3(0, 1, -1),\n    new Vector3(0, 1, -1.5),\n    new Vector3(0, 1, -2),\n  ];\n\n  const camPath = new CatmullRomCurve3(points);\n  let t = 0;\n  let isComplete: boolean = false;\n\n  const mount = () => {\n    t = 0;\n  };\n\n  const activate = () => {\n    orbit.enabled = false;\n    camera.position.set(0, 2.5, 10);\n    camera.near = 0.001;\n    camera.far = 1000;\n  };\n\n  const update = (deltaTime: number) => {\n    if (!isComplete && t > 1) {\n      isComplete = true;\n      orbit.enabled = true;\n      eventBusManager.viewBus.emit({\n        type: \"project-screen:show\",\n        elementId: \"project-screen\",\n      });\n      console.log(\"event emitted view event\");\n    }\n\n    if (!isComplete) {\n      t += deltaTime * 0.1;\n\n      if (t <= 0.9) {\n        const position = camPath.getPointAt(t);\n        const lookAt = camPath.getPointAt(t + 0.1);\n        lookAt.z -= 0.1;\n        camera.position.copy(position);\n        camera.lookAt(lookAt);\n      }\n    }\n  };\n\n  const deactivate = () => {};\n\n  const unmount = () => {};\n\n  return {\n    mount: mount,\n    activate: activate,\n    update: update,\n    deactivate: deactivate,\n    unmount: unmount,\n  };\n};\n","import { Logger } from \"@utils/Logger\";\nimport { GlobalStorageManager } from \"engine/managers/storage/storageTypes\";\nimport { Material, Mesh, MeshStandardMaterial } from \"three\";\nimport { ModelIdentifier } from \"types/rooms.types\";\n\nexport interface GroundProps {\n  reference: ModelIdentifier;\n  logger: Logger;\n  storage: GlobalStorageManager;\n}\n\nexport interface Ground {\n  mount: () => void;\n  actiavte: () => void;\n  deactivate: () => void;\n  unmount: () => void;\n}\n\nexport const createGround = ({\n  reference,\n  logger,\n  storage,\n}: GroundProps): Ground => {\n  let ground: Nullable<Mesh> = null;\n\n  const mount = () => {\n    const groups = storage\n      .getStorage(\"model\")\n      .retrieve(reference.storageId)?.groups;\n    ground = groups?.getObjectByName(reference.id) as Mesh;\n\n    if (!ground) {\n      console.error(`Cant get ground mesh from the id : ${reference.id}`);\n      return;\n    }\n    ground.material = (ground.material as Material).clone();\n    ground.receiveShadow = true;\n\n    (ground.material as Material).needsUpdate = true;\n    (ground.material as MeshStandardMaterial).opacity = 1;\n    (ground.material as MeshStandardMaterial).transparent = true;\n    const excludeShadow = [\"sky\", \"ground\"];\n\n    groups?.traverse((child) => {\n      if (!excludeShadow.includes(child.name)) {\n        child.castShadow = true;\n      }\n    });\n\n    logger.onMount({ origin: \"about-ground\" });\n  };\n\n  const activate = () => {};\n\n  const deactivate = () => {};\n\n  const unmount = () => {};\n\n  return {\n    mount: mount,\n    actiavte: activate,\n    deactivate: deactivate,\n    unmount: unmount,\n  };\n};\n","import {\n  AmbientLight,\n  DirectionalLight,\n  PCFShadowMap,\n  Scene,\n  WebGLRenderer,\n} from \"three\";\n\nexport interface LightingProps {\n  scene: Scene;\n  renderer: WebGLRenderer;\n}\n\nexport interface Lighting {\n  mount: () => void;\n  activate: () => void;\n  deactivate: () => void;\n  unmount: () => void;\n}\n\nexport const createLighting = ({\n  renderer,\n  scene,\n}: LightingProps): Lighting => {\n  let dirLight: Nullable<DirectionalLight>;\n  let ambientLight: Nullable<AmbientLight>;\n\n  const mount = () => {\n    dirLight = new DirectionalLight(0xffffff, 5);\n    dirLight.castShadow = true;\n    dirLight.position.set(0, 1, 0.5);\n    dirLight.target.position.set(0, 0, 0);\n\n    dirLight.shadow.mapSize.width = 1024;\n    dirLight.shadow.mapSize.height = 1024;\n    dirLight.shadow.camera.near = 0.1;\n    dirLight.shadow.camera.far = 50;\n    dirLight.shadow.camera.left = -10;\n    dirLight.shadow.camera.right = 10;\n    dirLight.shadow.camera.top = 10;\n    dirLight.shadow.camera.bottom = -10;\n\n    ambientLight = new AmbientLight(0xffffff);\n\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = PCFShadowMap;\n  };\n\n  const activate = () => {\n    if (dirLight) scene.add(dirLight);\n    if (ambientLight) scene.add(ambientLight);\n  };\n\n  const deactivate = () => {\n    if (dirLight) scene.remove(dirLight);\n    if (ambientLight) scene.remove(ambientLight);\n  };\n\n  const unmount = () => {};\n\n  return {\n    mount: mount,\n    activate: activate,\n    deactivate: deactivate,\n    unmount: unmount,\n  };\n};\n","import { Logger } from \"@utils/Logger\";\nimport { GlobalStorageManager } from \"engine/managers/storage/storageTypes\";\nimport { AnimationMixer, Object3D, Object3DEventMap, Scene } from \"three\";\nimport { ModelIdentifier } from \"types/rooms.types\";\n\nexport interface PlayerProps {\n  reference: ModelIdentifier;\n  storage: GlobalStorageManager;\n  logger: Logger;\n}\n\nexport interface PlayerContext {\n  scene: Scene;\n}\n\nexport interface Player {\n  mount: () => void;\n  activate: () => void;\n  update: (deltaTime: number) => void;\n  deactiavte: () => void;\n  unmount: () => void;\n}\n\ninterface ObjectReferences {\n  playerRoot: Object3D;\n}\n\nexport const createPlayer = ({\n  logger,\n  reference,\n  storage,\n}: PlayerProps): Player => {\n  let objects: ObjectReferences;\n  let mixers: AnimationMixer[] = [];\n\n  const castShadow = (player: Object3D<Object3DEventMap>) => {\n    player.traverse((child) => {\n      child.castShadow = true;\n    });\n  };\n\n  const mount = () => {\n    try {\n      let playerRoot = storage\n        .getStorage(\"model\")\n        .retrieve(reference.storageId)?.groups;\n      let animations =\n        storage.getStorage(\"model\").retrieve(reference.storageId)?.animations ??\n        [];\n\n      if (!playerRoot) {\n        throw new Error(\n          `player doesn't exist for the id ${reference.storageId}`\n        );\n      }\n\n      //Local References\n      objects = {\n        playerRoot: playerRoot,\n      };\n\n      // console.log('armature',armature)\n      const mixer = new AnimationMixer(playerRoot);\n      mixer.clipAction(animations[2]).play();\n\n      mixers.push(mixer);\n      logger.onMount({ origin: \"Project-Room-Player\" });\n    } catch (err) {\n      console.error(`Player mesh cant be obtained :${err}`);\n    }\n  };\n\n  const activate = () => {\n    if (objects.playerRoot) {\n      objects.playerRoot.rotation.set(0, 0, 0, \"XYZ\");\n      objects.playerRoot.castShadow = true;\n      castShadow(objects.playerRoot);\n    }\n  };\n\n  const update = (deltaTime: number) => {\n    mixers.forEach((mixer) => {\n      mixer.update(deltaTime);\n    });\n  };\n\n  const deactivate = () => {};\n\n  const unmount = () => {};\n\n  return {\n    mount: mount,\n    activate: activate,\n    update: update,\n    deactiavte: deactivate,\n    unmount: unmount,\n  };\n};\n","import { getServiceRegistry } from \"engine/core/ServiceRegistry\";\nimport { Group, Object3DEventMap } from \"three\";\nimport { ModelIdentifier, Room, RoomProps } from \"types/rooms.types\";\nimport { CameraManager, createCameraManager } from \"./camera\";\nimport { createGround, Ground } from \"./ground\";\nimport { createLighting, Lighting } from \"./lights\";\nimport { createPlayer, Player } from \"./player\";\n\nexport interface ProjectRoomProps extends RoomProps {\n  player: ModelIdentifier;\n  ground: ModelIdentifier;\n}\n\ninterface Components {\n  camera: CameraManager;\n  player: Player;\n  ground: Ground;\n  lighting: Lighting;\n}\n\nexport const createProjectRoom = ({\n  player,\n  ground,\n}: ProjectRoomProps): Room => {\n  //====References===\n  const serviceRegistry = getServiceRegistry();\n  const [storage, context, eventBusManager, logger] = [\n    serviceRegistry.get(\"GlobalStorageManager\"),\n    serviceRegistry.get(\"ThreeJSContextManager\"),\n    serviceRegistry.get(\"EventBusManager\"),\n    serviceRegistry.get(\"Logger\"),\n  ];\n\n  const { scene, camera, orbit, renderer } = {\n    scene: context.get(\"scene\")!,\n    camera: context.get(\"camera\")!,\n    orbit: context.get(\"orbit\")!,\n    renderer: context.get(\"renderer\")!,\n  };\n\n  //===Local===\n  const components: Components = {\n    camera: createCameraManager({\n      camera,\n      eventBusManager,\n      orbit,\n      scene,\n    }),\n    player: createPlayer({ logger, reference: player, storage }),\n    ground: createGround({ logger, reference: ground, storage }),\n    lighting: createLighting({ renderer, scene }),\n  };\n  let group: Nullable<Group<Object3DEventMap>> = null;\n\n  const mount = () => {\n    components.ground.mount();\n    components.player.mount();\n    components.camera.mount();\n    components.lighting.mount();\n\n    group =\n      storage.getStorage(\"model\").retrieve(ground.storageId)?.groups ?? null;\n\n    logger.onMount({ origin: \"Projects\" });\n  };\n\n  const activate = () => {\n    if (group) group.visible = true;\n\n    components.camera.activate();\n    components.ground.actiavte();\n    components.lighting.activate();\n    components.player.activate();\n  };\n\n  const update = (deltaTime: number) => {\n    components.player.update(deltaTime);\n    components.camera.update(deltaTime);\n  };\n\n  const deactivate = () => {\n    if (group) group.visible = false;\n\n    components.camera.deactivate();\n    components.ground.deactivate();\n    components.lighting.deactivate();\n    components.player.deactiavte();\n  };\n\n  const unmount = () => {\n    components.camera.unmount();\n    components.ground.unmount();\n    components.lighting.unmount();\n    components.player.unmount();\n  };\n\n  return {\n    mount: mount,\n    setActive: activate,\n    update: update,\n    setDeactive: deactivate,\n    unmount: unmount,\n    isLoaded: false,\n  };\n};\n","import {\n  ABOUT_ROOM_ASSETS,\n  NAVIGATION_ROOM_ASSETS,\n  PLAYER_ASSET,\n  PROJECTS_ROOM_ASSETS,\n} from \"config/asset_manifest\";\nimport {\n  ABOUT_ROOM_OPTIONS,\n  NAVIGATION_ROOM_OPTIONS,\n  PROJECTS_ROOM_OPTIONS,\n} from \"config/rooms\";\nimport { createLoader, Loader } from \"engine/core/LoadingManager\";\nimport { getServiceRegistry } from \"engine/core/ServiceRegistry\";\nimport { createAboutRoom } from \"gameplay/rooms/about/room\";\nimport { createNavigationRoom } from \"gameplay/rooms/navigation/room\";\nimport { createProjectRoom } from \"gameplay/rooms/projects/room\";\nimport { Room, RoomAsset } from \"types/rooms.types\";\n\nexport interface RoomController {\n  mount: () => Promise<void>;\n  switchRoom: Record<RoomKey | \"default\", () => void>;\n  update: (deltaTime: number) => void;\n  unmount: () => void;\n}\n\ntype RoomKey = \"navigation\" | \"about\" | \"projects\";\n\ntype RoomMap = {\n  [key in RoomKey]: Nullable<Room>;\n};\n\ntype RoomAssetsMap = {\n  [key in RoomKey]: RoomAsset;\n};\n\nexport const createRoomController = (): RoomController => {\n  const serviceRegistry = getServiceRegistry();\n  const [storage, logger, eventBusManager, contextManager, stateManager] = [\n    serviceRegistry.get(\"GlobalStorageManager\"),\n    serviceRegistry.get(\"Logger\"),\n    serviceRegistry.get(\"EventBusManager\"),\n    serviceRegistry.get(\"ThreeJSContextManager\"),\n    serviceRegistry.get(\"GlobalStateManager\"),\n  ];\n\n  let loader: Nullable<Loader> = null;\n  let rooms: RoomMap = { navigation: null, about: null, projects: null };\n  let roomAssets: RoomAssetsMap = {\n    navigation: NAVIGATION_ROOM_ASSETS,\n    about: ABOUT_ROOM_ASSETS,\n    projects: PROJECTS_ROOM_ASSETS,\n  };\n  let activeRoom: Nullable<Room> = null;\n  let activeRoomKey: Nullable<RoomKey> = null;\n\n  const initializeLoader = (): void => {\n    try {\n      loader = createLoader({\n        storageManager: storage,\n        stateManager: stateManager,\n        loaderEventBus: eventBusManager.loadingBus,\n        renderer: contextManager.get(\"renderer\")!,\n        scene: contextManager.get(\"scene\")!,\n      });\n      loader?.configure();\n    } catch (err) {\n      throw new Error(\n        `[Gameplay] Couldnt create and initailize the loader due to ${err}`\n      );\n    }\n  };\n\n  const instantiateRoom = (key: RoomKey): Room => {\n    switch (key) {\n      case \"navigation\":\n        rooms[key] = createNavigationRoom(NAVIGATION_ROOM_OPTIONS);\n        return rooms[key]!;\n      case \"about\":\n        rooms[key] = createAboutRoom(ABOUT_ROOM_OPTIONS);\n        return rooms[key]!;\n      case \"projects\":\n        rooms[key] = createProjectRoom(PROJECTS_ROOM_OPTIONS);\n        return rooms[key]!;\n      default:\n        throw new Error(`Unknown Room key ${key}`);\n    }\n  };\n\n  const loadRoom = async (key: RoomKey) => {\n    if (!loader) return;\n\n    const assets = roomAssets[key];\n    if (!assets)\n      throw new Error(\n        \"[Room Controller] sufficient asset meta data is not given.\"\n      );\n\n    if (!rooms[key]) {\n      const room: Room = instantiateRoom(key);\n\n      console.log(\"load room\", roomAssets[key]);\n\n      const loadItems = [...roomAssets[key].meshes];\n      if (roomAssets[key].hdr) loadItems.push(roomAssets[key].hdr);\n\n      //Load only once\n      await loader.load(loadItems);\n\n      if (room) {\n        room.mount();\n        room.isLoaded = true;\n        activeRoom = room;\n      }\n    }\n  };\n\n  const switchRoom = async (key: RoomKey): Promise<void> => {\n    if (activeRoomKey === key) return;\n\n    if (activeRoomKey != null) {\n      if (rooms[activeRoomKey] != null) rooms[activeRoomKey]!.setDeactive();\n    }\n\n    await loadRoom(key);\n\n    if (rooms[key]) rooms[key].setActive();\n    activeRoomKey = key;\n  };\n\n  const mount = async (): Promise<void> => {\n    logger.onMount({ origin: \"Room Controller\" });\n    initializeLoader();\n    await loader?.load([PLAYER_ASSET]);\n    await loadRoom(\"navigation\");\n    await switchRoom(\"navigation\");\n  };\n\n  const update = (deltaTime: number) => {\n    activeRoom?.update(deltaTime);\n  };\n\n  const unmount = (): void => {\n    loader?.dispose();\n\n    Object.values(rooms).forEach((room) => {\n      room?.unmount();\n    });\n\n    logger.onUnmount({ origin: \"room-controller\" });\n  };\n\n  const transitionRooms = (key: RoomKey) => {\n    eventBusManager.loadingBus.emit({\n      type: \"load:start\",\n      loaded: 0,\n      total: 0,\n      url: \"\",\n    });\n\n    Promise.allSettled([switchRoom(key)]).then(() => {\n      eventBusManager.loadingBus.emit({ type: \"load:complete\" });\n    });\n  };\n\n  const deactivateRoom = () => {\n    if (!activeRoomKey) return;\n\n    activeRoom?.setDeactive();\n  };\n\n  return {\n    mount: mount,\n    switchRoom: {\n      navigation: () => transitionRooms(\"navigation\"),\n      about: () => transitionRooms(\"about\"),\n      projects: () => transitionRooms(\"projects\"),\n      default: () => deactivateRoom(),\n    },\n    update: update,\n    unmount: unmount,\n  };\n};\n","import { getServiceRegistry } from \"engine/core/ServiceRegistry\";\nimport { Clock } from \"three\";\nimport { createRoomController, RoomController } from \"./RoomManager\";\n\nexport interface GameplayManager {\n  onMount: () => Promise<void>;\n  update: () => void;\n  onUnmount: () => void;\n}\n\ninterface State {\n  deltaTime: number;\n}\n\ninterface TempData {\n  deltaTime: number;\n}\n\nexport const createGameplayManager = (): GameplayManager => {\n  const serviceRegistry = getServiceRegistry();\n\n  //Global properties\n  const [eventBusManager, logger, input] = [\n    serviceRegistry.get(\"EventBusManager\"),\n    serviceRegistry.get(\"Logger\"),\n    serviceRegistry.get(\"InputManager\"),\n  ];\n  const clock: Clock = new Clock();\n\n  //Re usable state (no re-allocation)\n  let state: State = { deltaTime: 0 };\n  let tempData: TempData = { deltaTime: 0 };\n  let isMounted: boolean = false;\n\n  //Controllers\n  let roomController: RoomController = createRoomController();\n\n  const bind = () => {\n    eventBusManager.displayBus.on(\n      \"about:show\",\n      roomController.switchRoom[\"about\"]\n    );\n    eventBusManager.displayBus.on(\n      \"about:hide\",\n      roomController.switchRoom[\"default\"]\n    );\n\n    eventBusManager.displayBus.on(\n      \"projects:show\",\n      roomController.switchRoom[\"projects\"]\n    );\n    eventBusManager.displayBus.on(\n      \"projects:hide\",\n      roomController.switchRoom[\"default\"]\n    );\n\n    eventBusManager.displayBus.on(\n      \"home:show\",\n      roomController.switchRoom[\"navigation\"]\n    );\n    eventBusManager.displayBus.on(\n      \"home:hide\",\n      roomController.switchRoom[\"default\"]\n    );\n  };\n\n  const mount = async (): Promise<void> => {\n    if (isMounted) return;\n\n    await roomController.mount();\n    bind();\n    isMounted = true;\n\n    window.addEventListener(\"keyup\", (e) => {\n      console.log(e);\n    });\n  };\n\n  const updateDeltaTime = (): void => {\n    tempData.deltaTime = clock.getDelta();\n\n    if (!isNaN(tempData.deltaTime) && tempData.deltaTime !== undefined) {\n      state.deltaTime = tempData.deltaTime;\n    }\n  };\n\n  const update = () => {\n    updateDeltaTime();\n\n    roomController.update(state.deltaTime ?? 0);\n  };\n\n  const unbind = () => {\n    // eventBusManager.displayBus.off(\"about:show\", rooms.navigation.setActive);\n    // eventBusManager.displayBus.off(\"about:hide\", rooms.navigation.setDeactive);\n  };\n\n  const unmount = () => {\n    unbind();\n  };\n\n  return {\n    onMount: mount,\n    update: update,\n    onUnmount: unmount,\n  };\n};\n","import { queueStep } from \"@utils/dsl\";\nimport { DEFAULT_CAMERA_OPTIONS } from \"config/constants\";\nimport { getServiceRegistry } from \"engine/core/ServiceRegistry\";\nimport { PerspectiveCamera, Scene, WebGLRenderer } from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\nimport { Lifecycle } from \"types/lifecycle.types\";\n\nexport interface ThreeJSRenderOptions {\n  /** Dom element id where the render will be mounted */\n  domMountId: string;\n}\n\nexport interface ThreeJsRenderer\n  extends Lifecycle<[], [loop: () => void], [], [], []> {}\n\nexport const createThreeJsInstance = (\n  props: ThreeJSRenderOptions\n): ThreeJsRenderer => {\n  //Local references\n  const { fov, aspectRatio, near, far } = DEFAULT_CAMERA_OPTIONS;\n\n  //=====Core Elements======\n  let scene: Scene = new Scene();\n  let camera: PerspectiveCamera = new PerspectiveCamera(\n    fov,\n    aspectRatio,\n    near,\n    far\n  );\n  let renderer: WebGLRenderer = new WebGLRenderer({ antialias: true });\n  let orbit: OrbitControls;\n\n  // State\n  let animationCallback: Nullable<() => void> = null;\n  let animationFrameId: Nullable<number> = null;\n\n  //External Context Hook\n  const contextManager = getServiceRegistry().get(\"ThreeJSContextManager\");\n  const logger = getServiceRegistry().get(\"Logger\");\n\n  //Internal Methods\n  const mountRendererToDom = (elementId: string): void => {\n    const container = document.getElementById(elementId);\n\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n\n    if (container) {\n      container.appendChild(renderer.domElement);\n      orbit = new OrbitControls(camera, renderer.domElement);\n    } else {\n      console.warn(`Could not find element with selector tag : ${elementId}`);\n    }\n  };\n\n  /**\n   * Mount the context_manager to allow reference to scene and other props externally\n   */\n  const exposeToContext = (): void => {\n    contextManager.set(\"scene\", scene);\n    contextManager.set(\"camera\", camera);\n    contextManager.set(\"orbit\", orbit);\n    contextManager.set(\"renderer\", renderer);\n  };\n\n  const onLoad = () => {\n    return [\n      queueStep(mountRendererToDom, props.domMountId),\n      queueStep(exposeToContext),\n      queueStep(logger.onLoad, { origin: \"ThreeJs-Manager\" }),\n    ];\n  };\n\n  const onMount = (callback: () => void) => {\n    return [\n      () => {\n        animationCallback = callback;\n      },\n      queueStep(logger.onMount, { origin: \"ThreeJs-Manager\" }),\n    ];\n  };\n\n  const render = () => {\n    if (animationFrameId !== null) return; //prevent multiple render loops\n\n    const loop = () => {\n      //Recursive callback function\n      animationFrameId = requestAnimationFrame(loop);\n      animationCallback?.();\n      renderer.render(scene, camera);\n    };\n\n    loop();\n  };\n\n  const onUnmount = () => {\n    const container = document.getElementById(props.domMountId);\n    if (animationFrameId !== null) {\n      cancelAnimationFrame(animationFrameId);\n      animationFrameId = 0;\n    }\n    if (container && renderer.domElement.parentElement === container) {\n      container.removeChild(renderer.domElement);\n    }\n\n    renderer.dispose();\n    logger.onUnmount({ origin: \"ThreeJs-Manager\" });\n  };\n\n  return {\n    onLoad: onLoad,\n    onMount: onMount,\n    onUpdate: render,\n    onUnmount: onUnmount,\n    onDestroy: () => {},\n  };\n};\n","import { EventBus } from \"@events/eventBus\";\nimport { flattenTask, queueStep } from \"@utils/dsl\";\nimport { CANVAS_ID } from \"config/constants\";\nimport { getServiceRegistry } from \"engine/core/ServiceRegistry\";\nimport { PerspectiveCamera, Scene, WebGLRenderer } from \"three\";\nimport { DebugEvents } from \"types/eventType\";\nimport { Lifecycle, Task } from \"types/lifecycle.types\";\n\nimport {\n  createGameplayManager,\n  GameplayManager,\n} from \"gameplay/GameplayManager\";\nimport { ThreeJsContextManager } from \"./ContextManager\";\nimport { createThreeJsInstance } from \"./ThreeJsManager\";\n\nexport interface RenderManager extends Lifecycle {\n  onInit: () => void;\n}\n\n/** Resises Camera and Renderer on window resise */\nconst handleResize = (camera: PerspectiveCamera, renderer: WebGLRenderer) => {\n  const { height, width } = {\n    height: window.innerHeight,\n    width: window.innerWidth,\n  };\n\n  camera.aspect = width / height;\n  camera.updateProjectionMatrix();\n  renderer.setSize(width, height);\n};\n\n/**Toggles the Object Tree when you press shift and u*/\nconst handleDebug = (\n  e: KeyboardEvent,\n  debugEventBus: EventBus<DebugEvents>,\n  scene: Scene\n) => {\n  if (!(e.key.toLowerCase() === \"u\" && e.shiftKey)) return;\n\n  e.preventDefault();\n  debugEventBus.emit({\n    type: \"debug:inspector\",\n    scene: scene,\n  });\n};\n\nexport const createRenderManager = (): RenderManager => {\n  const serviceRegistry = getServiceRegistry();\n  const logger = serviceRegistry.get(\"Logger\");\n  const threeJsManager = createThreeJsInstance({ domMountId: CANVAS_ID });\n  let threeJsContext: ThreeJsContextManager;\n  const gameplay: GameplayManager = createGameplayManager();\n\n  let _handleResize: (e: UIEvent) => void;\n  let _handleDebug: (e: KeyboardEvent) => void;\n\n  /** Adds required event listeners */\n  const addEventListeners = () => {\n    /**\n     * Primary initialization to ensure correct aspect ratios\n     */\n    handleResize(\n      threeJsContext.get(\"camera\")!,\n      threeJsContext.get(\"renderer\")!\n    );\n\n    window.addEventListener(\"resize\", _handleResize);\n    window.addEventListener(\"keydown\", _handleDebug);\n  };\n\n  /** Release all event listeners to prevent memory leaks */\n  const removeEventListeners = () => {\n    window.removeEventListener(\"resize\", _handleResize);\n    window.removeEventListener(\"keydown\", _handleDebug);\n  };\n\n  const onInit = () => {};\n\n  const onLoad = (): Task[] => {\n    const tasks: Task[] = [\n      ...flattenTask(threeJsManager.onLoad() as Task[]),\n      queueStep(logger.onLoad, { origin: \"Render-Manager\" }),\n    ];\n    return tasks;\n  };\n\n  const onMount = (): Task[] => {\n    const tasks: Task[] = [\n      () => {\n        threeJsContext = serviceRegistry.get(\"ThreeJSContextManager\");\n        //Handle Resize\n        _handleResize = (e: UIEvent) =>\n          handleResize(\n            threeJsContext.get(\"camera\")!,\n            threeJsContext.get(\"renderer\")!\n          );\n        //Handle Debug\n        _handleDebug = (e: KeyboardEvent) =>\n          handleDebug(\n            e,\n            serviceRegistry.get(\"EventBusManager\").debugBus,\n            threeJsContext.get(\"scene\")!\n          );\n      },\n      queueStep(addEventListeners),\n      queueStep(logger.onMount, { origin: \"Render-Manager\" }),\n    ];\n\n    return tasks;\n  };\n\n  const onUpdate = (): Task[] => {\n    return [\n      queueStep(async () => {\n        try {\n          await gameplay.onMount(); // gameplay logic added after obtaining all assets\n        } catch (error) {\n          throw new Error(\"[Game Manager] Loading failed :${error}\");\n        }\n      }),\n      ...flattenTask(threeJsManager.onMount(() => {}) as Task[]), // pass the gameplay loop as callback to the game engine\n      queueStep(threeJsManager.onMount, gameplay.update),\n      queueStep(threeJsManager.onUpdate),\n      queueStep(logger.onUpdate, 0, { origin: \"Render-Manager\" }),\n    ];\n  };\n\n  const onUnmount = () => {\n    const tasks: Task[] = [\n      queueStep(removeEventListeners),\n      queueStep(gameplay.onUnmount),\n      queueStep(threeJsManager.onUnmount),\n      queueStep(logger.onUnmount, { origin: \"Render-Manager\" }),\n    ];\n\n    return tasks;\n  };\n\n  const onDispose = () => {\n    logger.onDestroy({ origin: \"RenderManager\" });\n  };\n\n  return {\n    onInit,\n    onLoad,\n    onMount,\n    onUpdate,\n    onUnmount,\n    onDestroy: onDispose,\n  };\n};\n","import { queueStep } from \"@utils/dsl\";\nimport { createDomManager, DOMManager } from \"engine/managers/DOMManger\";\nimport {\n  createRenderManager,\n  RenderManager,\n} from \"engine/managers/RenderManager\";\nimport { ServiceRegistry } from \"types/service.types\";\nimport { getServiceRegistry } from \"./ServiceRegistry\";\n\ninterface Engine {\n  run: () => void;\n}\n/**\n * @description Orchestration Layer that acts as a link to native\n * browser events for performing updates\n * @returns {Engine}\n */\nconst createEngine = (): Engine => {\n  const serviceRegistry: ServiceRegistry = getServiceRegistry();\n  const [logger, lifecycleScheduler, storage, input] = [\n    serviceRegistry.get(\"Logger\"),\n    serviceRegistry.get(\"LifecycleScheduler\"),\n    serviceRegistry.get(\"GlobalStorageManager\"),\n    serviceRegistry.get(\"InputManager\"),\n  ];\n\n  let domManager: DOMManager;\n  let renderManager: RenderManager;\n\n  const onInit = () => {\n    console.log(\"Engine initialized\");\n    domManager = createDomManager();\n    renderManager = createRenderManager();\n\n    lifecycleScheduler.schedule(storage.inflate);\n    lifecycleScheduler.schedule(input.onInit);\n    lifecycleScheduler.schedule(domManager.onInit);\n    lifecycleScheduler.schedule(renderManager.onInit);\n  };\n\n  const onLoad = () => {\n    lifecycleScheduler.schedule(domManager.onLoad);\n    lifecycleScheduler.schedule(renderManager.onLoad);\n    lifecycleScheduler.schedule(queueStep(logger.onLoad, { origin: \"Engine\" }));\n  };\n\n  const onMount = () => {\n    logger.onMount({ origin: \"Engine\" });\n\n    lifecycleScheduler.schedule(domManager.onMount);\n    lifecycleScheduler.schedule(renderManager.onMount);\n  };\n\n  const onUpdate = () => {\n    domManager.onUpdate();\n    lifecycleScheduler.schedule(renderManager.onUpdate);\n  };\n\n  const onUnmount = () => {\n    logger.onUnmount({ origin: \"Engine\" });\n    lifecycleScheduler.schedule(domManager.onUnmount);\n    lifecycleScheduler.schedule(renderManager.onUnmount);\n    lifecycleScheduler.schedule(input.onUnmount);\n  };\n\n  const onDispose = () => {\n    logger.onDestroy({ origin: \"Engine\" });\n    lifecycleScheduler.schedule(domManager.onDestroy);\n    lifecycleScheduler.schedule(renderManager.onDestroy);\n  };\n\n  const run = () => {\n    //onLoad essentials before mounting\n    onInit();\n\n    //after dom loaded mount\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      onLoad();\n    });\n\n    //after resources are achieved\n    window.addEventListener(\"load\", () => {\n      onMount();\n      onUpdate();\n    });\n\n    //unmount and dispose\n    window.addEventListener(\"beforeunload\", () => {\n      onUnmount();\n    });\n\n    //Deprecated\n    // window.addEventListener(\"unload\", () => {\n    //   onDispose();\n    // });\n\n    lifecycleScheduler.run();\n  };\n\n  return {\n    run: run,\n  };\n};\n\nexport { createEngine };\nexport type { Engine };\n","import { MAX_FRAME_BUCKET_TIME } from \"config/constants\";\nimport { Task } from \"types/lifecycle.types\";\n\ninterface LifecycleScheduler {\n  schedule: (...tasks: Task[]) => void;\n  run: () => void;\n}\n\n//TODO: [FEATURE] DAG scheduler for dependency management\n//TODO: [FEATURE] frame bucket\n//TODO: [FEATURE] async tasks\n//TODO: [FEATURE] idle time scheduling\n//TODO: [FEATURE] batch update\n//TODO: [FEATURE] micro task and macro task separation before and after\n//TODO: [ISSUE]   maybe issue of incorrect ordering due to async tasks\n\nconst createLifecycleScheduler = (): LifecycleScheduler => {\n  const queue: Task[] = [];\n\n  const schedule = (...tasks: Task[]) => {\n    tasks.forEach((task) => {\n      queue.push(task);\n    });\n  };\n\n  const run = () => {\n    const loop = async () => {\n      const start = performance.now();\n\n      while (\n        queue.length > 0 &&\n        performance.now() - start < MAX_FRAME_BUCKET_TIME\n      ) {\n        const task = queue.shift();\n        if (!task) continue;\n\n        const result = task();\n\n        if (result instanceof Promise) {\n          const resolved = await result;\n          if (Array.isArray(resolved)) {\n            queue.unshift(...resolved);\n          }\n        } else if (Array.isArray(result)) {\n          queue.unshift(...result);\n        }\n      }\n\n      requestAnimationFrame(() => {\n        loop();\n      });\n    };\n    loop();\n  };\n\n  return {\n    schedule: schedule,\n    run: run,\n  };\n};\n\nexport { createLifecycleScheduler };\nexport type { LifecycleScheduler };\n","//A callback that handles specific event object of type T.\nexport type Listener<T> = (event: T) => void;\n\nexport interface EventBus<T extends { type: string }> {\n  /**\n   * @description subscribe to event\n   * @param type the event type\n   * @param callback the listener callback when event is triggered\n   */\n  on: <K extends T[\"type\"]>(\n    type: K,\n    callback: Listener<Extract<T, { type: K }>>\n  ) => void;\n\n  /**\n   * @description un-subscribe to event\n   * @param type event type to be un subscribe\n   * @param callback call back that has to be removed\n   */\n  off: <K extends T[\"type\"]>(\n    type: K,\n    callback: Listener<Extract<T, { type: K }>>\n  ) => void;\n\n  /**\n   * @description emits the event\n   * @param event event that must be emitted\n   */\n  emit: (event: T) => void;\n\n  /**\n   * @description clears all the listeners\n   */\n  clear: () => void;\n\n  once: <K extends T[\"type\"]>(\n    type: K,\n    callback: Listener<Extract<T, { type: K }>>\n  ) => void;\n}\n\n/**\n * @description creates an event Bus for a custom event type\n *\n * Note: event must be an object with a parameter {type:string,.....}\n * @returns\n */\nexport const createEventBus = <T extends { type: string }>(): EventBus<T> => {\n  /**\n   *  \"start\" -- its callbacks\n   */\n  const listeners = new Map<T[\"type\"], Set<Listener<T>>>();\n\n  /**\n   * @description register a listener for a specfic event type\n   * @param type event type\n   * @param callback extracts only the ones with the event type\n   */\n  const _on = <K extends T[\"type\"]>(\n    type: K,\n    callback: Listener<Extract<T, { type: K }>>\n  ) => {\n    if (!listeners.has(type)) {\n      listeners.set(type, new Set());\n    }\n\n    listeners.get(type)!.add(callback as Listener<T>);\n  };\n\n  /**\n   * @description un subscribe from the event\n   * @param type the event type\n   * @param callback the callback that has to be removed\n   */\n  const _off = <K extends T[\"type\"]>(\n    type: K,\n    callback: Listener<Extract<T, { type: K }>>\n  ) => {\n    listeners.get(type)?.delete(callback as Listener<T>);\n  };\n\n  /**\n   * @description similar in function to notify all\n   * @param event event that has to be triggered\n   */\n  const _emit = (event: T) => {\n    listeners.get(event.type)?.forEach((callback) => {\n      callback(event);\n    });\n  };\n\n  /**\n   * @description clean up function\n   */\n  const _clear = () => {\n    listeners.clear();\n  };\n\n  /**\n   * @description calls the function once\n   * @param type event type\n   * @param callback callback to be executed\n   */\n  const _once = <K extends T[\"type\"]>(\n    type: K,\n    callback: Listener<Extract<T, { type: K }>>\n  ) => {\n    const wrapper = (event: Extract<T, { type: K }>) => {\n      callback(event);\n      _off(type, wrapper);\n    };\n\n    _on(type, wrapper);\n  };\n\n  return Object.freeze({\n    on: _on,\n    off: _off,\n    emit: _emit,\n    clear: _clear,\n    once: _once,\n  });\n};\n","import {\n  DebugEvents,\n  LoadingEvents,\n  NavigationEvents,\n  SwitchTabEvents,\n  ViewEvents,\n} from \"../../../types/eventType\";\nimport { createEventBus, EventBus } from \"./eventBus\";\n\ninterface EventBusManager {\n  /**\n   * @description Event Bus for loading related events\n   */\n  loadingBus: EventBus<LoadingEvents>;\n  /**\n   * @description Event bus for display related events\n   */\n  displayBus: EventBus<NavigationEvents>;\n  /**\n   * @description Event bus for debugging\n   */\n  debugBus: EventBus<DebugEvents>;\n  /**\n   * @description Event Bus for pre-fetching data and tab switch\n   */\n  switchTabBus: EventBus<SwitchTabEvents>;\n  /**\n   *@description show delayed events\n   */\n  viewBus: EventBus<ViewEvents>;\n}\n\n/**\n * @description creates anf manages event buses designed for various tasks\n * @returns\n */\nconst createEventBusManager = (): EventBusManager => {\n  const loadingBus = createEventBus<LoadingEvents>();\n  const displayBus = createEventBus<NavigationEvents>();\n  const debugBus = createEventBus<DebugEvents>();\n  const switchTabBus = createEventBus<SwitchTabEvents>();\n  const viewBus = createEventBus<ViewEvents>();\n\n  return {\n    loadingBus: loadingBus,\n    displayBus: displayBus,\n    debugBus: debugBus,\n    switchTabBus: switchTabBus,\n    viewBus: viewBus,\n  };\n};\n\nexport { createEventBusManager };\nexport type { EventBusManager };\n","/**\n * Properties of observable\n */\nexport interface ObservableProps<T> {\n  initial: T;\n}\n\n/**\n * Observable methods\n */\nexport interface Observable<T> {\n  /**\n   *\n   * @description gets current state\n   * @returns currents state\n   */\n  getValue: () => T;\n  /**\n   * @description changes the current state to new state and notifies all listeners\n   * @param value the new state\n   */\n  setValue: (value: T) => void;\n  /**\n   * @description allows to look for changes\n   * @param fn callback function to be run when state changes\n   * @returns un subscribe function reference to unsubscribe when no longer needed\n   */\n  subscribeToChanges: (fn: (val: T) => void) => () => void;\n  /**\n   * @description allows clean up of unsubscribed functions\n   */\n  dispose: () => void;\n}\n\n/**\n * @description creates an observable for the given type with a initial state\n * @param props initial state of observable\n * @returns observable\n */\nexport const createObservable = <T>(\n  props: ObservableProps<T>\n): Observable<T> => {\n  let value = props.initial;\n  const listeners: Set<(val: T) => void> = new Set();\n  let scheduled: boolean = false;\n\n  /**\n   * @description changes the state to new state and notifies all listeners\n   * @param _value the new state\n   */\n  const setValue = (_value: T) => {\n    if (value === _value) {\n      return;\n    }\n    value = _value;\n    if (!scheduled) {\n      setTimeout(() => {\n        listeners.forEach((fn) => fn(_value));\n      }, 0);\n    }\n  };\n\n  /**\n   * @description gets the data of current state\n   * @returns the current state\n   */\n  const _getValue = () => {\n    return value;\n  };\n\n  /**\n   * @description subscribe to state changes\n   * @param fn the callback function when the state changes\n   * @returns un subscribe function to clean up\n   */\n  const subscribeToChanges = (fn: (val: T) => void) => {\n    listeners.add(fn);\n    return () => {\n      listeners.delete(fn);\n    };\n  };\n\n  /**\n   * @description clears the set so that there are no memory leaks\n   */\n  const dispose = () => {\n    listeners.clear();\n  };\n\n  return Object.freeze({\n    getValue: _getValue,\n    setValue: setValue,\n    subscribeToChanges: subscribeToChanges,\n    dispose: dispose,\n  });\n};\n","import { createObservable, Observable } from \"./observable\";\n\ntype ObservableMap = Record<string, Observable<any>>;\n\n/**\n * Here we map key to state\n *\n * [key in T i.e string] : U (type extracted from observable)\n *\n * key : U or never\n */\ntype ExtractState<T extends ObservableMap> = {\n  [K in keyof T]: T[K] extends Observable<infer U> ? U : never;\n};\n\nexport interface GlobalState {\n  /**\n   *@description populates the state with Initial values\n   */\n  inflate: () => void;\n  /**\n   * @description gets the current state\n   * @returns the state with fields for the given map\n   */\n  getState: <T extends ObservableMap>() => ExtractState<T>;\n  /**\n   * @description updates to the new state\n   * @param newState only the part of the state say eg loading state\n   */\n  setState: <T extends ObservableMap>(\n    newState: Partial<ExtractState<T>>\n  ) => void;\n  /**\n   * @description gets the observable\n   * @param key string\n   * @returns observable\n   */\n  getObservable: <K extends keyof ObservableMap>(\n    key: K\n  ) => Observable<ObservableMap[K]>;\n  /**\n   *\n   * @param key the state to which subscription is taken\n   * @param fn the callback function\n   * @returns un subscribe function\n   */\n  subscribe: <K extends keyof ObservableMap>(\n    key: K,\n    fn: (value: ObservableMap[K]) => void\n  ) => () => void;\n  /**\n   * @description clears up any left over observables\n   */\n  dispose: () => void;\n}\n\nexport const createGlobalState = <T extends Record<string, any>>(\n  map: Record<string, any>\n): GlobalState => {\n  const stateMap: T = {} as T;\n  /**\n   *@description inflates the state-map with values\n   */\n  const inflate = () => {\n    for (const key in map) {\n      const observable = createObservable({ initial: map[key] });\n      stateMap[key as keyof T] = observable as T[typeof key];\n    }\n  };\n\n  /**\n   * @description gets the state from observables\n   * @returns current state\n   */\n  const getState = <T extends ObservableMap>(): ExtractState<T> => {\n    const state = {} as ExtractState<T>;\n\n    for (const key in stateMap) {\n      state[key] = stateMap[key].getValue();\n    }\n\n    return state;\n  };\n\n  /**\n   * @description sets the new state\n   * @param newState the state which has to be updated\n   */\n  const setState = <T extends ObservableMap>(\n    newState: Partial<ExtractState<T>>\n  ) => {\n    for (const key in newState) {\n      if (stateMap[key]) {\n        stateMap[key].setValue(newState[key]);\n      }\n    }\n  };\n\n  /**\n   * @description gets the observable\n   * @param key string\n   * @returns observable for the key\n   */\n  const getObservable = <K extends keyof ObservableMap>(\n    key: K\n  ): Observable<ObservableMap[K]> => {\n    return stateMap[key];\n  };\n\n  /***\n   * @description subscribe to underlying observable\n   */\n  const subscribe = <K extends keyof ObservableMap>(\n    key: K,\n    fn: (value: T[K]) => void\n  ) => {\n    return stateMap[key].subscribeToChanges(fn);\n  };\n\n  /**\n   * dispose off any unwanted observables if any is left behind\n   */\n  const dispose = () => {\n    for (const key in stateMap) {\n      stateMap[key].dispose();\n    }\n  };\n\n  return Object.freeze({\n    inflate: inflate,\n    getState: getState,\n    setState: setState,\n    getObservable: getObservable,\n    subscribe: subscribe,\n    dispose: dispose,\n  });\n};\n","import { createGlobalState } from \"./globalState\";\nimport { GlobalStateManager, LoadingContext } from \"./stateType\";\n\nconst createGlobalStateManager = (): GlobalStateManager => {\n  const loading = createGlobalState<LoadingContext>({});\n\n  return {\n    loading: loading,\n  };\n};\n\nexport { createGlobalStateManager };\n","import { createLogger } from \"@utils/Logger\";\nimport { createThreeJsContextManager } from \"engine/managers/ContextManager\";\nimport { createInputManager } from \"engine/managers/InputManager\";\nimport { createGlobalStorageManager } from \"engine/managers/storage/StorageManager\";\nimport { createEngine, Engine } from \"./Engine\";\nimport { createLifecycleScheduler } from \"./LifecycleScheduler\";\nimport { getServiceRegistry } from \"./ServiceRegistry\";\nimport { createEventBusManager } from \"./events/EventBusManager\";\nimport { createGlobalStateManager } from \"./state/StateManager\";\n\nexport const bootstrap = () => {\n  const registry = getServiceRegistry();\n  registry.register(\"LifecycleScheduler\", createLifecycleScheduler());\n\n  registry.register(\"Logger\", createLogger());\n  registry.register(\"EventBusManager\", createEventBusManager());\n  registry.register(\"GlobalStateManager\", createGlobalStateManager());\n  registry.register(\"GlobalStorageManager\", createGlobalStorageManager());\n  registry.register(\"ThreeJSContextManager\", createThreeJsContextManager());\n  registry.register(\"InputManager\", createInputManager());\n\n  const engine: Engine = createEngine();\n  engine.run();\n};\n"]}