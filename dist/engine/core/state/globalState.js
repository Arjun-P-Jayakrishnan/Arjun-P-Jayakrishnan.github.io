var o=r=>{let t=r.initial,a=new Set;return Object.freeze({getValue:()=>t,setValue:e=>{t!==e&&(t=e,setTimeout(()=>{a.forEach(s=>s(e));},0));},subscribeToChanges:e=>(a.add(e),()=>{a.delete(e);}),dispose:()=>{a.clear();}})};var p=r=>{let t={};return Object.freeze({inflate:()=>{for(let e in r){let s=o({initial:r[e]});t[e]=s;}},getState:()=>{let e={};for(let s in t)e[s]=t[s].getValue();return e},setState:e=>{for(let s in e)t[s]&&t[s].setValue(e[s]);},getObservable:e=>t[e],subscribe:(e,s)=>t[e].subscribeToChanges(s),dispose:()=>{for(let e in t)t[e].dispose();}})};export{p as createGlobalState};//# sourceMappingURL=globalState.js.map
//# sourceMappingURL=globalState.js.map