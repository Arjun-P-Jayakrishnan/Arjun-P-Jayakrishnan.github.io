var b=s=>{let t=s.initial,r=new Set;return Object.freeze({getValue:()=>t,setValue:e=>{t!==e&&(t=e,setTimeout(()=>{r.forEach(a=>a(e));},0));},subscribeToChanges:e=>(r.add(e),()=>{r.delete(e);}),dispose:()=>{r.clear();}})};var n=s=>{let t={};return Object.freeze({inflate:()=>{for(let e in s){let a=b({initial:s[e]});t[e]=a;}},getState:()=>{let e={};for(let a in t)e[a]=t[a].getValue();return e},setState:e=>{for(let a in e)t[a]&&t[a].setValue(e[a]);},getObservable:e=>t[e],subscribe:(e,a)=>t[e].subscribeToChanges(a),dispose:()=>{for(let e in t)t[e].dispose();}})};var O=()=>({loading:n({})});export{O as createGlobalStateManager};//# sourceMappingURL=StateManager.js.map
//# sourceMappingURL=StateManager.js.map