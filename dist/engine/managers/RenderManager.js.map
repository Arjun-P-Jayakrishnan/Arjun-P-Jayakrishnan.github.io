{"version":3,"sources":["../../../src/utils/dsl.ts","../../../src/config/constants.ts","../../../src/engine/core/ServiceRegistry.ts","../../../src/config/asset_manifest.ts","../../../src/config/rooms.ts","../../../src/plugins/loader/fbx_loader.ts","../../../src/plugins/loader/glb_loader.ts","../../../src/plugins/loader/hdr_loader.ts","../../../src/engine/core/LoadingManager.ts","../../../src/gameplay/rooms/about/camera.ts","../../../src/gameplay/rooms/about/ground.ts","../../../src/gameplay/rooms/about/lights.ts","../../../src/gameplay/rooms/about/player.ts","../../../src/gameplay/rooms/about/room.ts","../../../src/gameplay/rooms/navigation/room.ts","../../../src/gameplay/rooms/navigation/camera.ts","../../../src/materials/grid/grid-material.ts","../../../src/materials/grid/grid-fragment.ts","../../../src/materials/grid/grid-vertex.ts","../../../src/gameplay/rooms/navigation/ground.ts","../../../src/gameplay/modules/animation.ts","../../../src/gameplay/modules/fsm/player.ts","../../../src/gameplay/rooms/navigation/player.ts","../../../src/gameplay/rooms/projects/camera.ts","../../../src/gameplay/rooms/projects/ground.ts","../../../src/gameplay/rooms/projects/lights.ts","../../../src/gameplay/rooms/projects/player.ts","../../../src/gameplay/rooms/projects/room.ts","../../../src/gameplay/RoomManager.ts","../../../src/gameplay/GameplayManager.ts","../../../src/engine/managers/ThreeJsManager.ts","../../../src/engine/managers/RenderManager.ts"],"names":["queueStep","fn","args","flattenTask","tasks","result","task","DEFAULT_CAMERA_OPTIONS","CANVAS_ID","createServiceRegistry","services","name","service","serviceRegistry","getServiceRegistry","FILE_CONSTANTS","PLAYER_ASSET","NAVIGATION_ROOM_ASSETS","ABOUT_ROOM_ASSETS","PROJECTS_ROOM_ASSETS","NAVIGATION_ROOM_OPTIONS","ABOUT_ROOM_OPTIONS","PROJECTS_ROOM_OPTIONS","createFBXLoader","loadingManager","scene","storageManager","fbxLoader","FBXLoader","_loadMesh","metaData","model","err","assets","promises","asset","createGLBLoader","gltfLoader","GLTFLoader","dracoLoader","DRACOLoader","createHDRLoader","renderer","pmremGenerator","PMREMGenerator","rgbeLoader","RGBELoader","_loadHDRTexture","reject","resolve","data","texData","envMap","load","dispose","createLoader","loaderEventBus","stateManager","manager","LoadingManager","isConfigured","glbLoader","hdrLoader","assetQueue","_configureLoadingManager","url","itemsLoaded","itemsTotal","pushToRespectiveLoaderQueue","_configurePlugins","createCameraManager","props","camera","target","Vector3","createGround","logger","reference","storage","ground","createLighting","dirLight","ambientLight","DirectionalLight","AmbientLight","PCFShadowMap","createPlayer","objects","animations","castShadow","player","child","playerRoot","AnimationMixer","createAboutRoom","context","orbit","components","group","deltaTime","TPV_CONFIG","tempPosition","tempOffset","tempLookTarget","clampRotation","yaw","pitch","MathUtils","computeThirdPersonOffset","spherical","lerpVector","from","to","alpha","state","Spherical","setCamera","mode","mount","activate","updateRotation","delta","clamped","updateThirdPerson","info","updateFirstPerson","playerPos","GridFragment","GridVertex","createGridMaterial","mat","ShaderMaterial","cameraPos","references","gridMat","createAnimationController","mixer","actions","crossFadeDuration","currentAnimation","blendTime","currentAction","animationName","blendDuration","nextAction","Idle","Walk","Run","createFSMController","inputs","animationController","keyboard","shiftPressed","idle","walk","run","currentState","update","playerFSM","isMoving","isShiftPressed","_getState","newState","changeState","PLAYER_CONSTANTS","InputManager","controllers","tempData","fsmController","updateMouse","mouse","updateKeyboard","FRICTION","VELOCITY_DEADZONE","inputDirection","decay","updateControllers","Euler","createNavigationRoom","eventBusManager","contextManager","room","isMounted","points","camPath","CatmullRomCurve3","t","isComplete","position","lookAt","groups","excludeShadow","mixers","createProjectRoom","createRoomController","loader","rooms","roomAssets","activeRoom","activeRoomKey","initializeLoader","instantiateRoom","key","loadRoom","loadItems","switchRoom","unmount","transitionRooms","deactivateRoom","createGameplayManager","input","clock","Clock","roomController","bind","e","updateDeltaTime","createThreeJsInstance","fov","aspectRatio","near","far","Scene","PerspectiveCamera","WebGLRenderer","animationCallback","animationFrameId","mountRendererToDom","elementId","container","OrbitControls","exposeToContext","callback","loop","handleResize","height","width","handleDebug","debugEventBus","createRenderManager","threeJsManager","threeJsContext","gameplay","_handleResize","_handleDebug","addEventListeners","removeEventListeners"],"mappings":"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","file":"RenderManager.js","sourcesContent":["//Domain Specific Language\n\nimport { Task } from \"types/lifecycle.types\";\n\ntype Step<F extends (...args: any[]) => any> = [F, ...Parameters<F>];\n\nfunction queueStep<F extends (...args: any[]) => any>(\n  fn: F,\n  ...args: Parameters<F>\n): Task {\n  return () => fn(...args);\n}\n\nfunction flattenTask(tasks: (Task | Task[])[]): Task[] {\n  const result: Task[] = [];\n\n  for (const task of tasks) {\n    if (Array.isArray(task)) {\n      result.push(...flattenTask(task));\n    } else {\n      result.push(task);\n    }\n  }\n\n  return result;\n}\n\nexport { flattenTask, queueStep };\n","const MAX_TASKS_PER_FRAME = 5;\nconst MAX_FRAME_BUCKET_TIME = 20; //ms\n\nconst DEFAULT_CAMERA_OPTIONS = {\n  fov: 75,\n  aspectRatio: window.innerWidth / window.innerHeight,\n  near: 0.1,\n  far: 1000,\n} as const;\n\nconst CANVAS_ID = \"game-engine\";\n\nconst MOUSE_CONFIG = {\n  SENSITIVITY: { sensitivityYaw: 0.003, sensitivityPitch: 0.001 },\n};\n\nexport {\n  CANVAS_ID,\n  DEFAULT_CAMERA_OPTIONS,\n  MAX_FRAME_BUCKET_TIME,\n  MAX_TASKS_PER_FRAME,\n  MOUSE_CONFIG,\n};\n","import {\n  ServiceKey,\n  ServiceMap,\n  ServiceRegistry,\n  ServiceType,\n} from \"types/service.types\";\n\nconst createServiceRegistry = (): ServiceRegistry => {\n  const services: Map<ServiceKey, ServiceType> = new Map<\n    ServiceKey,\n    ServiceType\n  >();\n\n  const register = <K extends ServiceKey>(\n    name: K,\n    service: ServiceMap[K]\n  ): void => {\n    if (services.has(name)) {\n      throw new Error(`Error : Redefining the service [${name}]`);\n    }\n    services.set(name, service);\n  };\n\n  const get = <K extends ServiceKey>(name: K): ServiceMap[K] => {\n    const service = services.get(name);\n    if (!service) {\n      throw new Error(\n        `Error : Trying to obtain value of an unregistered service ${name}`\n      );\n    }\n    return service as ServiceMap[K];\n  };\n\n  const has = (name: ServiceKey): boolean => {\n    return services.has(name);\n  };\n\n  return {\n    register: register,\n    get: get,\n    has: has,\n  };\n};\n\nlet serviceRegistry: ServiceRegistry | undefined = undefined;\n\nconst getServiceRegistry = () => {\n  if (!serviceRegistry) {\n    serviceRegistry = createServiceRegistry();\n  }\n\n  return serviceRegistry;\n};\n\nexport { getServiceRegistry };\n","import { ModelAssetDescriptor } from \"types/loader.types\";\nimport { RoomAsset } from \"types/rooms.types\";\n\nconst FILE_CONSTANTS = {\n  PATH_TO_MODELS: \"/assets/Models/\",\n  PATH_TO_HDR: \"/assets/HDR/\",\n  PATH_TO_ANIMATIONS: \"../../assets/Animations/\",\n};\n\nexport const PLAYER_ASSET: ModelAssetDescriptor = {\n  id: \"player\",\n  path: FILE_CONSTANTS.PATH_TO_MODELS + \"player.glb\",\n  type: \"glb\",\n};\n\nexport const NAVIGATION_ROOM_ASSETS: RoomAsset = {\n  meshes: [\n    {\n      id: \"navigation\",\n      path: FILE_CONSTANTS.PATH_TO_MODELS + \"room.glb\",\n      type: \"glb\",\n    },\n  ],\n  hdr: {\n    id: \"environment_hdr\",\n    path: FILE_CONSTANTS.PATH_TO_HDR + \"environment.hdr\",\n    type: \"hdr\",\n  },\n};\n\nexport const ABOUT_ROOM_ASSETS: RoomAsset = {\n  meshes: [\n    {\n      id: \"about\",\n      path: FILE_CONSTANTS.PATH_TO_MODELS + \"about.glb\",\n      type: \"glb\",\n    },\n  ],\n};\n\nexport const PROJECTS_ROOM_ASSETS: RoomAsset = {\n  meshes: [\n    {\n      id: \"projects\",\n      path: FILE_CONSTANTS.PATH_TO_MODELS + \"projects.glb\",\n      type: \"glb\",\n    },\n  ],\n};\n","import { AboutRoomProps } from \"gameplay/rooms/about/room\";\nimport { NavigationRoomProps } from \"gameplay/rooms/navigation/room\";\nimport { ProjectRoomProps } from \"gameplay/rooms/projects/room\";\n\nexport const NAVIGATION_ROOM_OPTIONS: NavigationRoomProps = {\n  player: {\n    id: \"RootNode\",\n    storageId: \"player\",\n  },\n  ground: {\n    id: \"ground\",\n    storageId: \"navigation\",\n  },\n};\n\nexport const ABOUT_ROOM_OPTIONS: AboutRoomProps = {\n  player: {\n    id: \"RootNode\",\n    storageId: \"player\",\n  },\n  ground: {\n    id: \"ground\",\n    storageId: \"about\",\n  },\n};\n\nexport const PROJECTS_ROOM_OPTIONS: ProjectRoomProps = {\n  player: {\n    id: \"RootNode\",\n    storageId: \"player\",\n  },\n  ground: {\n    id: \"ground\",\n    storageId: \"projects\",\n  },\n};\n","import { GlobalStorageManager } from \"engine/managers/storage/storageTypes\";\nimport { Scene } from \"three\";\nimport { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader.js\";\nimport type { LoadingManager } from \"three/src/loaders/LoadingManager.js\";\nimport { ModelAssetDescriptor } from \"types/loader.types\";\nimport { LoaderPlugin } from \"types/plugin.types\";\n\nexport interface FBXLoaderProps {\n  scene: Scene;\n  loadingManager: LoadingManager;\n  storageManager: GlobalStorageManager;\n}\n\nexport const createFBXLoader = ({\n  loadingManager,\n  scene,\n  storageManager,\n}: FBXLoaderProps): LoaderPlugin => {\n  const fbxLoader: FBXLoader = new FBXLoader(loadingManager);\n\n  /**\n   * @description load the mesh\n   * @param metaData meta-data for loading the mesh\n   */\n  const _loadMesh = async (metaData: ModelAssetDescriptor) => {\n    try {\n      const model = await fbxLoader.loadAsync(metaData.path);\n      storageManager.getStorage(\"model\").store(metaData.id, {\n        animations: model.animations,\n        groups: model,\n      });\n      scene.add(model);\n    } catch (err) {\n      throw new Error(`Error while loading fbx file : ${err}`);\n    }\n  };\n\n  const load = async (assets: ModelAssetDescriptor[]) => {\n    const promises: Promise<void>[] = [];\n    assets.forEach((asset) => {\n      promises.push(_loadMesh(asset));\n    });\n\n    await Promise.allSettled(promises);\n  };\n\n  return {\n    load: load,\n  };\n};\n","import { GlobalStorageManager } from \"engine/managers/storage/storageTypes\";\nimport { LoadingManager, Scene } from \"three\";\nimport { DRACOLoader } from \"three/examples/jsm/loaders/DRACOLoader.js\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\nimport { ModelAssetDescriptor } from \"types/loader.types\";\nimport { LoaderPlugin } from \"types/plugin.types\";\n\nexport interface GLBLoaderProps {\n  scene: Scene;\n  loadingManager: LoadingManager;\n  storageManager: GlobalStorageManager;\n}\n\nexport const createGLBLoader = ({\n  scene,\n  loadingManager,\n  storageManager,\n}: GLBLoaderProps): LoaderPlugin => {\n  const gltfLoader: GLTFLoader = new GLTFLoader(loadingManager);\n  const dracoLoader = new DRACOLoader();\n  dracoLoader.setDecoderPath(\"/public/draco/\");\n  gltfLoader.setDRACOLoader(dracoLoader);\n\n  /**\n   * @description load the mesh\n   * @param metaData meta-data for loading the mesh\n   */\n  const _loadMesh = async (metaData: ModelAssetDescriptor) => {\n    try {\n      const model = await gltfLoader.loadAsync(metaData.path);\n      storageManager.getStorage(\"model\").store(metaData.id, {\n        animations: model.animations,\n        groups: model.scene,\n      });\n      scene.add(model.scene);\n    } catch (err) {\n      throw new Error(`Errr occuerd while loading a glb file : ${err}`);\n    }\n  };\n\n  const load = async (assets: ModelAssetDescriptor[]) => {\n    const promises: Promise<void>[] = [];\n    assets.forEach((asset) => {\n      promises.push(_loadMesh(asset));\n    });\n\n    await Promise.allSettled(promises);\n  };\n\n  return {\n    load: load,\n  };\n};\n","import { GlobalStorageManager } from \"engine/managers/storage/storageTypes\";\nimport {\n  DataTexture,\n  LoadingManager,\n  PMREMGenerator,\n  Scene,\n  WebGLRenderer,\n} from \"three\";\nimport { RGBELoader } from \"three/examples/jsm/loaders/RGBELoader.js\";\nimport { ModelAssetDescriptor } from \"types/loader.types\";\nimport { LoaderPlugin } from \"types/plugin.types\";\n\nexport interface HDRTextureLoaderProps {\n  scene: Scene;\n  renderer: WebGLRenderer;\n  loadingManager: LoadingManager;\n  storageManager: GlobalStorageManager;\n}\n\n/**\n * @description loads .hdr files and illuminates scene\n * @param props hdr loading properties\n * @returns HDR loader plugin\n */\nexport const createHDRLoader = ({\n  loadingManager,\n  renderer,\n  scene,\n}: HDRTextureLoaderProps): LoaderPlugin => {\n  const pmremGenerator: PMREMGenerator = new PMREMGenerator(renderer);\n  const rgbeLoader: RGBELoader = new RGBELoader(loadingManager);\n\n  /**\n   * @description loads a hdr file\n   * @param metaData meta-data for loading hdr\n   */\n  const _loadHDRTexture = async (\n    metaData: ModelAssetDescriptor\n  ): Promise<void> => {\n    return new Promise((reject, resolve) => {\n      console.log(\"path\", metaData.path);\n      rgbeLoader.load(\n        metaData.path,\n        (data: DataTexture, texData: object) => {\n          const envMap = pmremGenerator.fromEquirectangular(data).texture;\n          data.dispose();\n          scene.environment = envMap;\n          resolve();\n        },\n        undefined,\n        (err) => {\n          reject();\n        }\n      );\n    });\n  };\n\n  const load = async (assets: ModelAssetDescriptor[]) => {\n    const promises: Promise<void>[] = [];\n\n    assets.forEach(async (asset) => {\n      promises.push(_loadHDRTexture(asset));\n    });\n\n    await Promise.allSettled(promises);\n  };\n\n  const dispose = () => {\n    pmremGenerator.dispose();\n  };\n\n  return {\n    load: load,\n  };\n};\n","import { EventBus } from \"@events/eventBus\";\nimport { GlobalStorageManager } from \"engine/managers/storage/storageTypes\";\nimport { LoadingManager, Scene, WebGLRenderer } from \"three\";\nimport { LoadingEvents } from \"types/eventType\";\nimport { LoadOptions, ModelAssetDescriptor } from \"types/loader.types\";\nimport { createFBXLoader } from \"../../plugins/loader/fbx_loader\";\nimport { createGLBLoader } from \"../../plugins/loader/glb_loader\";\nimport { createHDRLoader } from \"../../plugins/loader/hdr_loader\";\nimport { GlobalStateManager, LoadingContext } from \"./state/stateType\";\n\nexport interface LoaderProps {\n  scene: Scene;\n  renderer: WebGLRenderer;\n  loaderEventBus: EventBus<LoadingEvents>;\n  stateManager: GlobalStateManager;\n  storageManager: GlobalStorageManager;\n}\n\nexport interface Loader {\n  configure: () => void;\n  load: (assets: ModelAssetDescriptor[]) => Promise<{\n    success: string[];\n    error: string[];\n  }>;\n  dispose: () => void;\n}\n/**\n * @description creates a loader with the given settings\n * @param options options to change loader settings\n * @param context global context with references\n * @returns Loader\n */\nexport const createLoader = ({\n  scene,\n  renderer,\n  loaderEventBus,\n  stateManager,\n  storageManager,\n}: LoaderProps): Loader => {\n  const manager: LoadingManager = new LoadingManager();\n  let isConfigured: boolean = false;\n  const [glbLoader, fbxLoader, hdrLoader] = [\n    createGLBLoader({\n      scene,\n      loadingManager: manager,\n      storageManager,\n    }),\n    createFBXLoader({\n      scene,\n      loadingManager: manager,\n      storageManager,\n    }),\n    createHDRLoader({\n      scene,\n      loadingManager: manager,\n      renderer,\n      storageManager,\n    }),\n  ];\n  const assetQueue: {\n    glb: ModelAssetDescriptor[];\n    fbx: ModelAssetDescriptor[];\n    hdr: ModelAssetDescriptor[];\n  } = {\n    glb: [],\n    fbx: [],\n    hdr: [],\n  };\n\n  /**\n   * @description attaches the event bus for listening to loading changes\n   */\n  const _configureLoadingManager = () => {\n    manager.onStart = (url, itemsLoaded, itemsTotal) => {\n      loaderEventBus.emit({\n        type: \"load:start\",\n        url: url,\n        loaded: itemsLoaded,\n        total: itemsTotal,\n      });\n      stateManager.loading.setState({\n        loading: { active: true, progress: 0 } as LoadingContext,\n      });\n    };\n\n    manager.onProgress = (url, itemsLoaded, itemsTotal) => {\n      loaderEventBus.emit({\n        type: \"load:progress\",\n        url: url,\n        loaded: itemsLoaded,\n        total: itemsTotal,\n      });\n      stateManager.loading.setState({\n        loading: {\n          active: true,\n          progress: itemsLoaded / itemsTotal,\n        } as LoadingContext,\n      });\n    };\n\n    manager.onLoad = () => {\n      loaderEventBus.emit({\n        type: \"load:complete\",\n      });\n    };\n\n    manager.onError = (url) => {\n      loaderEventBus.emit({\n        type: \"load:error\",\n        url: url,\n      });\n    };\n\n    isConfigured = true;\n  };\n\n  const pushToRespectiveLoaderQueue = (model: ModelAssetDescriptor) => {\n    switch (model.type) {\n      case \"glb\":\n        assetQueue.glb.push(model);\n        break;\n      case \"fbx\":\n        assetQueue.fbx.push(model);\n        break;\n      case \"hdr\":\n        assetQueue.hdr.push(model);\n        break;\n      default:\n        break;\n    }\n  };\n\n  /**\n   * @description create necessary loaders\n   */\n  const _configurePlugins = (assets: ModelAssetDescriptor[]) => {\n    assets.forEach((asset) => {\n      pushToRespectiveLoaderQueue(asset);\n    });\n  };\n\n  /**\n   * @description configuration\n   */\n  const _configure = () => {\n    _configureLoadingManager();\n  };\n\n  /**\n   * @description load all types of assets\n   */\n  const load = async (\n    assets: LoadOptions\n  ): Promise<{ success: []; error: [] }> => {\n    if (!isConfigured)\n      throw new Error(\n        `Error: Trying to load from loader before configuring it`\n      );\n\n    const promises: Promise<void>[] = [];\n    _configurePlugins(assets);\n\n    promises.push(glbLoader.load(assetQueue.glb));\n    promises.push(fbxLoader.load(assetQueue.fbx));\n    promises.push(hdrLoader.load(assetQueue.hdr));\n\n    await Promise.allSettled(promises);\n    assetQueue.fbx = [];\n    assetQueue.glb = [];\n    assetQueue.hdr = [];\n\n    return {\n      success: [],\n      error: [],\n    };\n  };\n\n  const dispose = () => {};\n\n  return {\n    configure: _configure,\n    load: load,\n    dispose: dispose,\n  };\n};\n","import { PerspectiveCamera, Scene, Vector3 } from \"three\";\n\nexport interface CameraProps {\n  camera: PerspectiveCamera;\n  scene: Scene;\n}\n\nexport interface CameraManager {\n  mount: () => void;\n  activate: () => void;\n  deactivate: () => void;\n  unmount: () => void;\n}\n\nexport const createCameraManager = (props: CameraProps): CameraManager => {\n  const { camera, scene } = props;\n  const target = new Vector3(0, 1, 2);\n  const mount = () => {};\n\n  const activate = () => {\n    camera.position.set(target.x, 1, target.z);\n    camera.rotation.set(0, 0, 0, \"XYZ\");\n  };\n\n  const deactivate = () => {};\n\n  const unmount = () => {};\n\n  return {\n    mount: mount,\n    activate: activate,\n    deactivate: deactivate,\n    unmount: unmount,\n  };\n};\n","import { Logger } from \"@utils/Logger\";\nimport { GlobalStorageManager } from \"engine/managers/storage/storageTypes\";\nimport { Material, Mesh, MeshStandardMaterial } from \"three\";\nimport { ModelIdentifier } from \"types/rooms.types\";\n\nexport interface GroundProps {\n  reference: ModelIdentifier;\n  storage: GlobalStorageManager;\n  logger: Logger;\n}\n\nexport interface Ground {\n  mount: () => void;\n  actiavte: () => void;\n  deactivate: () => void;\n  unmount: () => void;\n}\n\nexport const createGround = ({\n  logger,\n  reference,\n  storage,\n}: GroundProps): Ground => {\n  let ground: Nullable<Mesh> = null;\n\n  const mount = () => {\n    ground = storage\n      .getStorage(\"model\")\n      .retrieve(reference.storageId)\n      ?.groups.getObjectByName(reference.id) as Mesh;\n\n    if (!ground) {\n      console.error(`Cant get ground mesh from the id : ${reference.id}`);\n      return;\n    }\n    ground.material = (ground.material as Material).clone();\n    ground.receiveShadow = true;\n\n    (ground.material as Material).needsUpdate = true;\n    (ground.material as MeshStandardMaterial).opacity = 0.15;\n    (ground.material as MeshStandardMaterial).transparent = true;\n\n    logger.onMount({ origin: \"about-ground\" });\n  };\n\n  const activate = () => {};\n\n  const deactivate = () => {};\n\n  const unmount = () => {};\n\n  return {\n    mount: mount,\n    actiavte: activate,\n    deactivate: deactivate,\n    unmount: unmount,\n  };\n};\n","import {\n  AmbientLight,\n  DirectionalLight,\n  PCFShadowMap,\n  Scene,\n  WebGLRenderer,\n} from \"three\";\n\nexport interface LightingProps {\n  scene: Scene;\n  renderer: WebGLRenderer;\n}\n\nexport interface Lighting {\n  mount: () => void;\n  activate: () => void;\n  deactivate: () => void;\n  unmount: () => void;\n}\n\nexport const createLighting = ({\n  renderer,\n  scene,\n}: LightingProps): Lighting => {\n  let dirLight: Nullable<DirectionalLight>;\n  let ambientLight: Nullable<AmbientLight>;\n\n  const mount = () => {\n    dirLight = new DirectionalLight(0xffffff, 5);\n    dirLight.castShadow = true;\n    dirLight.position.set(0, 2, 0);\n    dirLight.target.position.set(0, 1, 0);\n\n    dirLight.shadow.mapSize.width = 1024;\n    dirLight.shadow.mapSize.height = 1024;\n    dirLight.shadow.camera.near = 0.1;\n    dirLight.shadow.camera.far = 50;\n    dirLight.shadow.camera.left = -10;\n    dirLight.shadow.camera.right = 10;\n    dirLight.shadow.camera.top = 10;\n    dirLight.shadow.camera.bottom = -10;\n\n    ambientLight = new AmbientLight(0xffffff);\n\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = PCFShadowMap;\n  };\n\n  const activate = () => {\n    if (dirLight) scene.add(dirLight);\n    if (ambientLight) scene.add(ambientLight);\n  };\n\n  const deactivate = () => {\n    if (dirLight) scene.remove(dirLight);\n    if (ambientLight) scene.remove(ambientLight);\n  };\n\n  const unmount = () => {};\n\n  return {\n    mount: mount,\n    activate: activate,\n    deactivate: deactivate,\n    unmount: unmount,\n  };\n};\n","import { Logger } from \"@utils/Logger\";\nimport { GlobalStorageManager } from \"engine/managers/storage/storageTypes\";\nimport {\n  AnimationMixer,\n  Object3D,\n  Object3DEventMap,\n  Scene,\n  Vector3,\n} from \"three\";\nimport { ModelIdentifier } from \"types/rooms.types\";\n\nexport interface PlayerProps {\n  reference: ModelIdentifier;\n  logger: Logger;\n  storage: GlobalStorageManager;\n  scene: Scene;\n}\n\nexport interface PlayerContext {\n  scene: Scene;\n}\n\nexport interface Player {\n  mount: () => void;\n  activate: () => void;\n  deactiavte: () => void;\n  unmount: () => void;\n}\n\ninterface PlayerState {}\n\ninterface ObjectReferences {\n  playerRoot: Object3D;\n}\n\ninterface Animation {\n  mixer: AnimationMixer | null;\n}\n\nconst PLAYER_CONSTANTS = {\n  MOVEMENT_ACCELERATION: 0.05,\n  MAX_VELOCITY: 0.05,\n};\n\ninterface TempData {\n  inputDirection: Vector3;\n}\n\nexport const createPlayer = ({\n  logger,\n  reference,\n  scene,\n  storage,\n}: PlayerProps): Player => {\n  let objects: ObjectReferences;\n  let animations: Animation;\n\n  const castShadow = (player: Object3D<Object3DEventMap>) => {\n    player.traverse((child) => {\n      child.castShadow = true;\n    });\n  };\n\n  const mount = () => {\n    try {\n      logger.onMount({ origin: \"about-room-player\" });\n      let playerRoot = scene.getObjectByName(reference.id);\n\n      if (!playerRoot) {\n        throw new Error(`player doesn't exist for the id ${reference.id}`);\n      }\n\n      //Local References\n      objects = {\n        playerRoot: playerRoot,\n      };\n\n      animations = {\n        mixer: new AnimationMixer(playerRoot),\n      };\n    } catch (err) {\n      console.error(`Player mesh cant be obtained :${err}`);\n    }\n  };\n\n  const activate = () => {\n    if (objects.playerRoot) {\n      objects.playerRoot.rotation.set(0, -Math.PI / 4, 0, \"XYZ\");\n      objects.playerRoot.castShadow = true;\n      castShadow(objects.playerRoot);\n\n      objects.playerRoot.position.set(1.5, 0, 0);\n    }\n  };\n\n  const deactivate = () => {};\n\n  const unmount = () => {\n    if (objects.playerRoot) {\n      objects.playerRoot.position.set(1.5, 0, 0);\n    }\n  };\n\n  return {\n    mount: mount,\n    activate: activate,\n    deactiavte: deactivate,\n    unmount: unmount,\n  };\n};\n","import { Group, Object3DEventMap } from \"three\";\n\nimport { getServiceRegistry } from \"engine/core/ServiceRegistry\";\nimport { ModelIdentifier, Room } from \"types/rooms.types\";\nimport { CameraManager, createCameraManager } from \"./camera\";\nimport { createGround, Ground } from \"./ground\";\nimport { createLighting, Lighting } from \"./lights\";\nimport { createPlayer, Player } from \"./player\";\n\nexport interface AboutRoomProps {\n  player: ModelIdentifier;\n  ground: ModelIdentifier;\n}\n\ninterface Components {\n  camera: CameraManager;\n  player: Player;\n  ground: Ground;\n  lighting: Lighting;\n}\n\nexport const createAboutRoom = ({ ground, player }: AboutRoomProps): Room => {\n  //====References====\n  const serviceRegistry = getServiceRegistry();\n  const [storage, logger, context] = [\n    serviceRegistry.get(\"GlobalStorageManager\"),\n    serviceRegistry.get(\"Logger\"),\n    serviceRegistry.get(\"ThreeJSContextManager\"),\n  ];\n\n  const { scene, camera, orbit, renderer } = {\n    scene: context.get(\"scene\")!,\n    camera: context.get(\"camera\")!,\n    orbit: context.get(\"orbit\")!,\n    renderer: context.get(\"renderer\")!,\n  };\n\n  //===Local===\n  const components: Components = {\n    camera: createCameraManager({ camera: camera, scene: scene }),\n    player: createPlayer({ logger, reference: player, scene, storage }),\n    ground: createGround({ logger, reference: ground, storage }),\n    lighting: createLighting({ renderer, scene }),\n  };\n\n  let group: Nullable<Group<Object3DEventMap>> = null;\n\n  const mount = () => {\n    logger.onMount({ origin: \"about-room\" });\n    components.ground.mount();\n    components.player.mount();\n    components.camera.mount();\n    components.lighting.mount();\n    group =\n      storage.getStorage(\"model\").retrieve(ground.storageId)?.groups ?? null;\n  };\n\n  const activate = () => {\n    if (group) group.visible = true;\n\n    orbit.enabled = false;\n    components.camera.activate();\n    components.ground.actiavte();\n    components.lighting.activate();\n    components.player.activate();\n  };\n\n  const update = (deltaTime: number) => {\n    // components.camera.update(deltaTime);\n  };\n\n  const deactivate = () => {\n    if (group) group.visible = false;\n\n    components.camera.deactivate();\n    components.ground.deactivate();\n    components.lighting.deactivate();\n    components.player.deactiavte();\n  };\n\n  const unmount = () => {\n    components.camera.unmount();\n    components.ground.unmount();\n    components.lighting.unmount();\n    components.player.unmount();\n  };\n\n  return {\n    mount: mount,\n    setActive: activate,\n    update: update,\n    setDeactive: deactivate,\n    unmount: unmount,\n    isLoaded: false,\n  };\n};\n","import { getServiceRegistry } from \"engine/core/ServiceRegistry\";\nimport { InputManager } from \"engine/managers/InputManager\";\nimport { Euler, Vector3 } from \"three\";\nimport { ObjectStorageUnit } from \"types/managers.types\";\nimport { ModelIdentifier, Room } from \"types/rooms.types\";\nimport { CameraManager, createCameraManager } from \"./camera\";\nimport { createGround, Ground } from \"./ground\";\nimport { createPlayer, Player } from \"./player\";\n\nexport interface NavigationRoomProps {\n  player: ModelIdentifier;\n  ground: ModelIdentifier;\n}\n\ninterface Entities {\n  player: Player;\n  ground: Ground;\n  camera: CameraManager;\n  inputs: InputManager;\n}\n\ninterface InternalState {\n  player: {\n    position: Vector3;\n    rotation: Euler;\n    rotationDelta: { yaw: number; pitch: number };\n  };\n}\n\ninterface TempData {}\n\nexport const createNavigationRoom = ({\n  player,\n  ground,\n}: NavigationRoomProps): Room => {\n  //External dependencies\n  const serviceRegistry = getServiceRegistry();\n\n  const [logger, storage, eventBusManager, InputManager, contextManager] = [\n    serviceRegistry.get(\"Logger\"),\n    serviceRegistry.get(\"GlobalStorageManager\"),\n    serviceRegistry.get(\"EventBusManager\"),\n    serviceRegistry.get(\"InputManager\"),\n    serviceRegistry.get(\"ThreeJSContextManager\"),\n  ];\n\n  //Internal\n  let components: Nullable<Entities> = {\n    camera: createCameraManager({ camera: contextManager.get(\"camera\")! }),\n    player: createPlayer({\n      reference: player,\n      InputManager: InputManager,\n      storage: storage,\n    }),\n    ground: createGround({\n      camera: contextManager.get(\"camera\")!,\n      logger: logger,\n      references: ground,\n      storage: storage,\n    }),\n    inputs: InputManager,\n  };\n\n  //TODO:no idea on what to add yet\n  let state: Nullable<InternalState> = null;\n  //TODO: no idea what temporary data to add yet\n  let tempData: Nullable<TempData> = null;\n\n  let room: Nullable<ObjectStorageUnit> = null;\n  let isMounted: boolean = false;\n\n  const activate = () => {\n    if (!room || !components) return;\n    room.groups.visible = true;\n    contextManager.get(\"orbit\")!.enabled = false;\n\n    components.camera.activate();\n    components.ground.activate();\n    components.player.activate();\n  };\n\n  const deactivate = () => {\n    if (!room || !components) return;\n    room.groups.visible = false;\n\n    components.camera.deactivate();\n    components.ground.deactivate();\n    components.player.deactivate();\n  };\n\n  const mount = () => {\n    if (isMounted || !components) return;\n\n    logger.onMount({ origin: \"Navigation Room\" });\n    state = {\n      player: {\n        position: new Vector3(0, 0, 0),\n        rotation: new Euler(0, 0, 0),\n        rotationDelta: { yaw: 0, pitch: 0 },\n      },\n    };\n\n    //get base root i.e group so that it can be used to toggle visibility\n    room = storage.getStorage(\"model\").retrieve(ground.storageId) ?? null;\n\n    components.player.mount();\n    components.ground.mount();\n    components.camera.mount();\n\n    isMounted = true;\n  };\n\n  const update = (deltaTime: number) => {\n    if (!isMounted || !components || !state) return;\n    contextManager.get(\"orbit\")!.update();\n    state.player = components.player.update(deltaTime);\n    components.camera.update({\n      playerPosition: state.player.position,\n      rotationDelta: state.player.rotationDelta,\n    });\n\n    //entities.ground.update();\n  };\n\n  const unmount = () => {\n    if (!isMounted || !components) return;\n\n    logger.onUnmount({ origin: \"Navigation Room\" });\n\n    components.player.unmount();\n    components.ground.unmount();\n\n    components = null;\n    room = null;\n  };\n\n  return {\n    mount: mount,\n    update: update,\n    unmount: unmount,\n    setActive: activate,\n    setDeactive: deactivate,\n    isLoaded: false,\n  };\n};\n","import { Euler, MathUtils, PerspectiveCamera, Spherical, Vector3 } from \"three\";\nimport { GenericLifeCycle } from \"types/rooms.types\";\n\nexport type CameraMode = \"firstPerson\" | \"thirdPerson\";\n\nexport interface CameraProps {\n  /**Main Camera */\n  camera: PerspectiveCamera;\n}\n\n/** Contains the Updated info about player */\nexport type UpdatedInfo = {\n  playerPosition: Vector3;\n  rotationDelta: { yaw: number; pitch: number };\n};\n\n/** Controls to manage camera */\nexport interface CameraManager extends GenericLifeCycle {\n  /** Updates the camera to look the player */\n  update: (info: UpdatedInfo) => { rotation: Euler };\n\n  /**sets the mode of camera */\n  setMode: (mode: CameraMode) => void;\n}\n\n//Third Person Config\nconst TPV_CONFIG = {\n  DISTANCE: 3,\n  HEIGHT_OFFSET: 2,\n  PITCH_MIN: 0,\n  PITH_MAX: Math.PI / 2,\n  SMOOTHING: 0.1,\n} as const;\n\n//Temporary Variables\n\nlet tempPosition = new Vector3(0, 0, 0);\nlet tempOffset = new Vector3(0, 0, 0);\nlet tempLookTarget = new Vector3(0, 0, 0);\n\n/**\n *\n * @param yaw the yaw angle\n * @param pitch the pitch angle\n * @returns restricted angles\n */\nfunction clampRotation(\n  yaw: number,\n  pitch: number\n): { yaw: number; pitch: number } {\n  return {\n    yaw: MathUtils.euclideanModulo(yaw, Math.PI * 2),\n    pitch: MathUtils.clamp(pitch, TPV_CONFIG.PITCH_MIN, TPV_CONFIG.PITH_MAX),\n  };\n}\n\n/**\n *\n * @param spherical the spherical coordinates\n * @returns the Vector based on spherical coordinates\n */\nfunction computeThirdPersonOffset(spherical: Spherical): Vector3 {\n  tempOffset.set(0, 0, 0);\n  tempOffset.setFromSpherical(spherical);\n  tempOffset.y += TPV_CONFIG.HEIGHT_OFFSET;\n\n  return tempOffset;\n}\n\n/**\n * Smoothly interpolate value between from and to vectors based on alpha\n */\nfunction lerpVector(from: Vector3, to: Vector3, alpha: number) {\n  return from.lerp(to, alpha);\n}\n\ninterface InternalState {\n  mode: CameraMode;\n  rotation: { yaw: number; pitch: number };\n  spherical: Spherical;\n}\n\nexport const createCameraManager = ({ camera }: CameraProps): CameraManager => {\n  let isThirdPerson: boolean = true;\n  let state: InternalState = {\n    mode: \"thirdPerson\",\n    rotation: { pitch: Math.PI / 2, yaw: 0 },\n    spherical: new Spherical(TPV_CONFIG.DISTANCE, Math.PI / 2, 0),\n  };\n\n  const setCamera = (mode: CameraMode) => {\n    state.mode = mode;\n  };\n\n  const mount = () => {};\n\n  const activate = () => {\n    camera.position.set(1, 2, 3);\n  };\n\n  /**\n   *\n   * @param yaw\n   * @param pitch\n   */\n  const updateRotation = (delta: { yaw: number; pitch: number }) => {\n    state.rotation.yaw += delta.yaw;\n    state.rotation.pitch += delta.pitch;\n\n    const clamped = clampRotation(state.rotation.yaw, state.rotation.pitch);\n    state.rotation.yaw = clamped.yaw;\n    state.rotation.pitch = clamped.pitch;\n  };\n\n  const updateThirdPerson = (info: UpdatedInfo) => {\n    state.spherical.theta = state.rotation.yaw;\n    state.spherical.phi = state.rotation.pitch;\n\n    //Calculate offset\n    tempOffset.copy(computeThirdPersonOffset(state.spherical));\n\n    //Calculate target position and camera lerp smoothly\n    tempPosition.copy(info.playerPosition).add(tempOffset);\n    camera.position.copy(\n      lerpVector(camera.position, tempPosition, TPV_CONFIG.SMOOTHING)\n    );\n\n    tempLookTarget.copy(info.playerPosition);\n    tempLookTarget.y += TPV_CONFIG.HEIGHT_OFFSET;\n    camera.lookAt(tempLookTarget);\n  };\n\n  const updateFirstPerson = (playerPos: Vector3) => {\n    camera.position.copy(playerPos);\n    camera.rotation.set(state.rotation.pitch, state.rotation.yaw, 0);\n  };\n\n  const update = (info: UpdatedInfo): { rotation: Euler } => {\n    updateRotation(info.rotationDelta);\n\n    if (state.mode === \"thirdPerson\") {\n      updateThirdPerson(info);\n    } else {\n      updateFirstPerson(info.playerPosition);\n    }\n\n    return {\n      rotation: camera.rotation,\n    };\n  };\n\n  const deactivate = () => {};\n\n  const unmount = () => {};\n\n  return {\n    setMode: setCamera,\n    update: update,\n    mount: mount,\n    activate: activate,\n    deactivate: deactivate,\n    unmount: unmount,\n  };\n};\n","import { PerspectiveCamera, ShaderMaterial, Vector3 } from \"three\";\nimport { GridFragment } from \"./grid-fragment\";\nimport { GridVertex } from \"./grid-vertex\";\n\nexport interface GridMaterialProps {\n  camera: PerspectiveCamera;\n  fadeNear: number;\n  fadeFar: number;\n}\n\nexport interface GridMaterial {\n  mat: ShaderMaterial;\n  update: (cameraPos: Vector3) => void;\n}\n\nexport const createGridMaterial = (props: GridMaterialProps) => {\n  const mat: ShaderMaterial = new ShaderMaterial({\n    uniforms: {\n      time: { value: 1 },\n      cameraPos: { value: props.camera.position },\n      fadeNear: { value: props.fadeNear },\n      fadeFar: { value: props.fadeFar },\n    },\n    vertexShader: GridVertex,\n    fragmentShader: GridFragment,\n  });\n\n  const update = (cameraPos: Vector3) => {\n    mat.uniforms.cameraPos.value = cameraPos;\n  };\n\n  return {\n    mat: mat,\n    update: update,\n  };\n};\n","export const GridFragment = `\n    precision highp float;\n\n    varying vec2 vUV;\n\n    float line(vec2 uv,float lineWidth){\n\n       \n        float lineAA=fwidth(uv.x);\n \n        float lineUV=1.0-abs(fract(uv.x)*2.0-1.0);\n\n        return smoothstep(lineWidth+lineAA,lineWidth-lineAA,lineUV);\n    }  \n\n    float grid(vec2 uv,float lineWidth){\n\n        vec2 uvDeriv=fwidth(uv);\n        vec2 drawWidth=max(vec2(lineWidth),uvDeriv);\n        vec2 lineAA=uvDeriv*1.5;\n \n        vec2 gridUV=1.0-abs(fract(uv)*2.0-1.0);\n\n        vec2 gridLines=smoothstep(drawWidth+lineAA,drawWidth-lineAA,gridUV);\n        gridLines*=clamp(lineWidth/drawWidth,0.0,1.0);\n\n        return mix(gridLines.x,1.0,gridLines.y);\n    } \n\n    void main(){\n        vec2 st=vUV*1500.0;\n       \n        gl_FragColor = vec4(vec3(grid(st,0.01)),1.0);\n    }\n\n`;\n","export const GridVertex = `\n    precision highp float;\n\n    \n\n    varying vec2 vUV;\n    varying vec4 vWorldPos; \n\n    void main(){\n        vUV=uv;\n        vWorldPos=modelViewMatrix*vec4(position,1.0);\n\n        gl_Position = projectionMatrix*modelViewMatrix*vec4(position,1.0);\n    }\n\n`;\n","import { Logger } from \"@utils/Logger\";\nimport { GlobalStorageManager } from \"engine/managers/storage/storageTypes\";\nimport { createGridMaterial, GridMaterial } from \"materials/grid/grid-material\";\nimport { Mesh, PerspectiveCamera } from \"three\";\nimport { ModelIdentifier } from \"types/rooms.types\";\n\nexport interface GroundProps {\n  references: ModelIdentifier;\n  storage: GlobalStorageManager;\n  logger: Logger;\n  camera: PerspectiveCamera;\n}\n\nexport interface Ground {\n  mount: () => void;\n  update: () => void;\n  activate: () => void;\n  deactivate: () => void;\n  unmount: () => void;\n}\n\nexport const createGround = ({\n  logger,\n  references,\n  storage,\n  camera,\n}: GroundProps): Ground => {\n  let ground: Nullable<Mesh> = null;\n  let gridMat: Nullable<GridMaterial> = null;\n\n  const mount = () => {\n    ground =\n      (storage\n        .getStorage(\"model\")\n        .retrieve(references.storageId)\n        ?.groups.getObjectByName(references.id) as Mesh) ?? null;\n\n    if (!ground) {\n      console.error(\n        `Cant get ground mesh from the id : ${references.id} ${references.storageId}`\n      );\n      return;\n    }\n\n    gridMat = createGridMaterial({\n      camera: camera,\n      fadeNear: 0.1,\n      fadeFar: 1,\n    });\n\n    ground.material = gridMat.mat;\n    logger.onMount({ origin: \"Navigation-Ground\" });\n  };\n\n  const update = () => {\n    gridMat?.update(camera.position);\n  };\n\n  const activate = () => {};\n  const deactivate = () => {};\n\n  const unmount = () => {};\n\n  return {\n    mount: mount,\n    update: update,\n    activate: activate,\n    deactivate: deactivate,\n    unmount: unmount,\n  };\n};\n","import { AnimationAction, AnimationMixer } from \"three\";\n\nexport interface AnimationControllerProps {\n  mixer: AnimationMixer;\n  actions: Record<string, AnimationAction>;\n  crossFadeDuration: 0.3;\n}\n\nexport interface AnimationController {\n  play: (animationName: string, blendDuration?: number) => void;\n  stop: () => void;\n  getCurrentAnimation: () => string | null;\n  update: (deltaTime: number) => void;\n}\n\nexport const createAnimationController = ({\n  mixer,\n  actions,\n  crossFadeDuration = 0.3,\n}: AnimationControllerProps): AnimationController => {\n  let currentAnimation: Nullable<string> = null;\n  let blendTime: number = 0;\n  let currentAction: Nullable<AnimationAction> = null;\n\n  const play = (animationName: string, blendDuration = 0) => {\n    if (currentAnimation === animationName) return;\n\n    const nextAction = actions[animationName];\n    if (!nextAction) return;\n    nextAction.reset();\n    nextAction.play();\n\n    if (currentAction != null) {\n      (currentAction as AnimationAction).crossFadeTo(\n        nextAction,\n        crossFadeDuration,\n        false\n      );\n    }\n\n    currentAction = nextAction;\n    currentAnimation = animationName;\n  };\n\n  const stop = () => {};\n\n  const getCurrentAnimation = () => {\n    return currentAnimation;\n  };\n\n  const update = (deltaTime: number) => {\n    if (deltaTime !== undefined) mixer.update(deltaTime);\n  };\n\n  return {\n    play: play,\n    getCurrentAnimation: getCurrentAnimation,\n    stop: stop,\n    update: update,\n  };\n};\n","import { InputManager } from \"engine/managers/InputManager\";\nimport { AnimationController } from \"../animation\";\n\ntype States = \"Idle\" | \"Walk\" | \"Run\";\n\ninterface PlayerFSM {\n  changeState: (state: States) => void;\n  isMoving: () => boolean;\n  isShiftPressed: () => boolean;\n}\n\ninterface StateProps {\n  animationId: string;\n  animationController: AnimationController;\n}\n\ninterface State {\n  enter: (player: PlayerFSM) => void;\n  execute: (player: PlayerFSM) => void;\n  exit: (player: PlayerFSM) => void;\n}\n\nconst Idle = (props: StateProps): State => {\n  const enter = (player: PlayerFSM) => {\n    console.log(\"enter idle\");\n    props.animationController.play(props.animationId);\n  };\n\n  const execute = (player: PlayerFSM) => {\n    if (player.isMoving()) {\n      if (player.isShiftPressed()) {\n        player.changeState(\"Run\");\n      } else {\n        player.changeState(\"Walk\");\n      }\n    }\n  };\n\n  const exit = (player: PlayerFSM) => {\n    console.log(\"exit idle\");\n  };\n\n  return {\n    enter: enter,\n    execute: execute,\n    exit: exit,\n  };\n};\n\nconst Walk = (props: StateProps): State => {\n  const enter = (player: PlayerFSM) => {\n    console.log(\"enter walk\");\n    props.animationController.play(props.animationId);\n  };\n\n  const execute = (player: PlayerFSM) => {\n    if (!player.isMoving()) {\n      player.changeState(\"Idle\");\n    } else if (player.isShiftPressed()) {\n      player.changeState(\"Run\");\n    }\n  };\n\n  const exit = (player: PlayerFSM) => {\n    console.log(\"exit walk\");\n  };\n\n  return {\n    enter: enter,\n    execute: execute,\n    exit: exit,\n  };\n};\n\nconst Run = (props: StateProps): State => {\n  const enter = (player: PlayerFSM) => {\n    console.log(\"enter run\");\n    props.animationController.play(props.animationId);\n  };\n\n  const execute = (player: PlayerFSM) => {\n    if (!player.isMoving()) {\n      player.changeState(\"Idle\");\n    } else if (!player.isShiftPressed()) {\n      player.changeState(\"Walk\");\n    }\n  };\n\n  const exit = (player: PlayerFSM) => {\n    console.log(\"exit run\");\n  };\n\n  return {\n    enter: enter,\n    execute: execute,\n    exit: exit,\n  };\n};\n\nexport interface FSMOptions {\n  inputs: InputManager;\n  animationController: AnimationController;\n}\n\nexport interface FSMController {\n  mount: () => void;\n  update: (deltaTime: number) => void;\n  unmount: () => void;\n}\n\nexport const createFSMController = ({\n  inputs,\n  animationController,\n}: FSMOptions): FSMController => {\n  const { mouse, keyboard } = {\n    mouse: inputs.getController(\"mouse\"),\n    keyboard: inputs.getController(\"keyboard\"),\n  };\n\n  let shiftPressed: boolean;\n  const { idle, walk, run } = {\n    idle: Idle({\n      animationController: animationController,\n      animationId: \"Idle\",\n    }),\n    walk: Walk({\n      animationController: animationController,\n      animationId: \"Walk\",\n    }),\n    run: Run({\n      animationController: animationController,\n      animationId: \"Run\",\n    }),\n  };\n  let state: State = idle;\n  let currentState: States = \"Idle\";\n\n  const update = (deltaTime: number) => {\n    state.execute(playerFSM);\n    animationController.update(deltaTime);\n  };\n\n  const isMoving = () => {\n    if (\n      keyboard?.isKeyPressed(\"w\") ||\n      keyboard?.isKeyPressed(\"a\") ||\n      keyboard?.isKeyPressed(\"s\") ||\n      keyboard?.isKeyPressed(\"d\")\n    ) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const isShiftPressed = () => {\n    return keyboard?.isKeyPressed(\"shift\") ?? false;\n  };\n\n  const _getState = (newState: States) => {\n    switch (newState) {\n      case \"Idle\":\n        return idle;\n      case \"Walk\":\n        return walk;\n      case \"Run\":\n        return run;\n      default:\n        return idle;\n    }\n  };\n\n  const changeState = (newState: States) => {\n    if (currentState !== newState) {\n      currentState = newState;\n      state.exit(playerFSM);\n      state = _getState(newState);\n      state.enter(playerFSM);\n    }\n  };\n\n  const mount = () => {\n    state.enter(playerFSM);\n  };\n\n  const playerFSM: PlayerFSM = {\n    changeState: changeState,\n    isMoving: isMoving,\n    isShiftPressed: isShiftPressed,\n  };\n\n  const unmount = () => {};\n\n  return {\n    mount: mount,\n    update: update,\n    unmount: unmount,\n  };\n};\n","import { InputManager } from \"engine/managers/InputManager\";\nimport { GlobalStorageManager } from \"engine/managers/storage/storageTypes\";\nimport {\n  AnimationController,\n  createAnimationController,\n} from \"gameplay/modules/animation\";\nimport {\n  createFSMController,\n  FSMController,\n} from \"gameplay/modules/fsm/player\";\nimport { KeyboardInput } from \"plugins/input/keyboard\";\nimport { MouseInput } from \"plugins/input/mouse\";\nimport { AnimationMixer, Euler, Object3D, Vector3 } from \"three\";\nimport { GenericLifeCycle, ModelIdentifier } from \"types/rooms.types\";\n\nexport interface PlayerProps {\n  reference: ModelIdentifier;\n  storage: GlobalStorageManager;\n  InputManager: InputManager;\n}\n\nexport interface Player extends GenericLifeCycle {\n  /** Update based on controller input */\n  update: (deltaTime: number) => {\n    position: Vector3;\n    rotation: Euler;\n    rotationDelta: { yaw: number; pitch: number };\n  };\n}\n\ninterface PlayerState {\n  direction: Vector3;\n  velocity: Vector3;\n  rotationApplied: {\n    yaw: number;\n    pitch: number;\n  };\n}\n\ninterface Controllers {\n  input: {\n    mouse: Nullable<MouseInput>;\n    keyboard: Nullable<KeyboardInput>;\n  };\n  animation: AnimationController;\n  fsm: FSMController;\n}\n\ninterface ObjectReferences {\n  player: Nullable<Object3D>;\n}\n\nconst PLAYER_CONSTANTS = {\n  MOVEMENT_ACCELERATION: 0.05,\n  MAX_VELOCITY: 0.05,\n};\n\ninterface TempData {\n  inputDirection: Vector3;\n}\n\nexport const createPlayer = ({\n  reference,\n  storage,\n  InputManager,\n}: PlayerProps): Player => {\n  let controllers: Controllers;\n\n  let state: PlayerState = {\n    direction: new Vector3(0, 0, -1),\n    velocity: new Vector3(0, 0, 0),\n    rotationApplied: {\n      pitch: 0,\n      yaw: 0,\n    },\n  };\n  let tempData: TempData = {\n    inputDirection: new Vector3(0, 0, 0),\n  };\n\n  let objects: ObjectReferences = { player: null };\n\n  const mount = () => {\n    try {\n      const playerRoot = storage\n        .getStorage(\"model\")\n        .retrieve(reference.storageId);\n\n      if (!playerRoot) {\n        throw new Error(\n          `player doesn't exist for the id ${reference.storageId}`\n        );\n      }\n      const player = playerRoot?.groups;\n      const animations = playerRoot?.animations;\n\n      /**Animation */\n      const mixer = new AnimationMixer(player);\n      const animationController = createAnimationController({\n        mixer: mixer,\n        actions: {\n          Idle: mixer.clipAction(animations[0]),\n          Walk: mixer.clipAction(animations[3]),\n          Run: mixer.clipAction(animations[1]),\n        },\n        crossFadeDuration: 0.3,\n      });\n\n      const fsmController = createFSMController({\n        animationController: animationController,\n        inputs: InputManager,\n      });\n      fsmController.mount();\n\n      objects = {\n        player: player,\n      };\n\n      controllers = {\n        input: {\n          mouse: InputManager.getController(\"mouse\"),\n          keyboard: InputManager.getController(\"keyboard\"),\n        },\n        animation: animationController,\n        fsm: fsmController,\n      };\n    } catch (err) {\n      console.error(`Player mesh cant be obtained :${err}`);\n    }\n  };\n\n  const updateMouse = (mouse: Nullable<MouseInput>) => {\n    if (!mouse || !objects.player!) return;\n\n    state.rotationApplied = mouse.getRotation();\n    objects.player.rotation.y += state.rotationApplied.yaw;\n  };\n\n  const updateKeyboard = (\n    keyboard: Nullable<KeyboardInput>,\n    deltaTime: number\n  ) => {\n    if (!keyboard || !objects.player) return;\n    const FRICTION = 5.0;\n    const VELOCITY_DEADZONE = 0.001;\n\n    const { inputDirection } = tempData;\n    inputDirection.set(0, 0, 0);\n\n    if (keyboard.isKeyPressed(\"w\")) inputDirection.z -= 1;\n    if (keyboard.isKeyPressed(\"s\")) inputDirection.z += 1;\n    if (keyboard.isKeyPressed(\"a\")) inputDirection.x -= 1;\n    if (keyboard.isKeyPressed(\"d\")) inputDirection.x += 1;\n\n    if (inputDirection.length() > 0) {\n      //normalize direction\n      inputDirection.applyQuaternion(objects.player.quaternion);\n      inputDirection.normalize();\n\n      //accelerate towards the direction\n      state.velocity.add(\n        inputDirection.multiplyScalar(\n          PLAYER_CONSTANTS.MOVEMENT_ACCELERATION * deltaTime\n        )\n      );\n      //ensure the velocity doesn't go over the threshold\n      state.velocity.clampLength(0, PLAYER_CONSTANTS.MAX_VELOCITY);\n    } else if (inputDirection.length() == 0 && state.velocity.length() > 0) {\n      const decay = Math.exp(-FRICTION * deltaTime);\n      state.velocity.multiplyScalar(decay);\n\n      if (state.velocity.lengthSq() < VELOCITY_DEADZONE * VELOCITY_DEADZONE) {\n        state.velocity.set(0, 0, 0);\n      }\n    }\n\n    objects.player.position.add(state.velocity);\n  };\n\n  const updateControllers = (deltaTime: number) => {\n    updateMouse(controllers.input.mouse);\n    updateKeyboard(controllers.input.keyboard, deltaTime);\n  };\n\n  const update = (deltaTime: number) => {\n    updateControllers(deltaTime);\n\n    controllers.fsm.update(deltaTime);\n\n    return {\n      position: objects.player?.position ?? new Vector3(0, 0, 0),\n      rotation: objects.player?.rotation ?? new Euler(0, 0, 0, \"XYZ\"),\n      rotationDelta: state.rotationApplied,\n    };\n  };\n\n  const activate = () => {\n    // objects.playerRoot.rotation.set(0,0,0,'XYZ')\n  };\n\n  const deactivate = () => {};\n\n  const unmount = () => {\n    try {\n      //objects.playerRoot.clear();\n    } catch (err) {\n      console.error(`Error while destroy player ${err}`);\n    }\n  };\n\n  return {\n    mount: mount,\n    activate: activate,\n    deactivate: deactivate,\n    update: update,\n    unmount: unmount,\n  };\n};\n","import { EventBusManager } from \"@events/EventBusManager\";\nimport { CatmullRomCurve3, PerspectiveCamera, Scene, Vector3 } from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n\nexport interface CameraProps {\n  camera: PerspectiveCamera;\n  scene: Scene;\n  orbit: OrbitControls;\n  eventBusManager: EventBusManager;\n}\n\nexport interface CameraManager {\n  mount: () => void;\n  activate: () => void;\n  update: (deltaTime: number) => void;\n  deactivate: () => void;\n  unmount: () => void;\n}\n\nexport const createCameraManager = ({\n  camera,\n  eventBusManager,\n  orbit,\n  scene,\n}: CameraProps): CameraManager => {\n  const points: Vector3[] = [\n    new Vector3(0, 2, 10),\n    new Vector3(0, 2, 5),\n    new Vector3(0, 2, 3),\n    new Vector3(0, 2, 2),\n    new Vector3(0, 2, 1),\n    new Vector3(0, 2, 0),\n    new Vector3(0, 2, -1),\n    new Vector3(0, 1, -1),\n    new Vector3(0, 1, -1.5),\n    new Vector3(0, 1, -2),\n  ];\n\n  const camPath = new CatmullRomCurve3(points);\n  let t = 0;\n  let isComplete: boolean = false;\n\n  const mount = () => {\n    t = 0;\n  };\n\n  const activate = () => {\n    orbit.enabled = false;\n    camera.position.set(0, 2.5, 10);\n    camera.near = 0.001;\n    camera.far = 1000;\n  };\n\n  const update = (deltaTime: number) => {\n    if (!isComplete && t > 1) {\n      isComplete = true;\n      orbit.enabled = true;\n      eventBusManager.viewBus.emit({\n        type: \"project-screen:show\",\n        elementId: \"project-screen\",\n      });\n      console.log(\"event emitted view event\");\n    }\n\n    if (!isComplete) {\n      t += deltaTime * 0.1;\n\n      if (t <= 0.9) {\n        const position = camPath.getPointAt(t);\n        const lookAt = camPath.getPointAt(t + 0.1);\n        lookAt.z -= 0.1;\n        camera.position.copy(position);\n        camera.lookAt(lookAt);\n      }\n    }\n  };\n\n  const deactivate = () => {};\n\n  const unmount = () => {};\n\n  return {\n    mount: mount,\n    activate: activate,\n    update: update,\n    deactivate: deactivate,\n    unmount: unmount,\n  };\n};\n","import { Logger } from \"@utils/Logger\";\nimport { GlobalStorageManager } from \"engine/managers/storage/storageTypes\";\nimport { Material, Mesh, MeshStandardMaterial } from \"three\";\nimport { ModelIdentifier } from \"types/rooms.types\";\n\nexport interface GroundProps {\n  reference: ModelIdentifier;\n  logger: Logger;\n  storage: GlobalStorageManager;\n}\n\nexport interface Ground {\n  mount: () => void;\n  actiavte: () => void;\n  deactivate: () => void;\n  unmount: () => void;\n}\n\nexport const createGround = ({\n  reference,\n  logger,\n  storage,\n}: GroundProps): Ground => {\n  let ground: Nullable<Mesh> = null;\n\n  const mount = () => {\n    const groups = storage\n      .getStorage(\"model\")\n      .retrieve(reference.storageId)?.groups;\n    ground = groups?.getObjectByName(reference.id) as Mesh;\n\n    if (!ground) {\n      console.error(`Cant get ground mesh from the id : ${reference.id}`);\n      return;\n    }\n    ground.material = (ground.material as Material).clone();\n    ground.receiveShadow = true;\n\n    (ground.material as Material).needsUpdate = true;\n    (ground.material as MeshStandardMaterial).opacity = 1;\n    (ground.material as MeshStandardMaterial).transparent = true;\n    const excludeShadow = [\"sky\", \"ground\"];\n\n    groups?.traverse((child) => {\n      if (!excludeShadow.includes(child.name)) {\n        child.castShadow = true;\n      }\n    });\n\n    logger.onMount({ origin: \"about-ground\" });\n  };\n\n  const activate = () => {};\n\n  const deactivate = () => {};\n\n  const unmount = () => {};\n\n  return {\n    mount: mount,\n    actiavte: activate,\n    deactivate: deactivate,\n    unmount: unmount,\n  };\n};\n","import {\n  AmbientLight,\n  DirectionalLight,\n  PCFShadowMap,\n  Scene,\n  WebGLRenderer,\n} from \"three\";\n\nexport interface LightingProps {\n  scene: Scene;\n  renderer: WebGLRenderer;\n}\n\nexport interface Lighting {\n  mount: () => void;\n  activate: () => void;\n  deactivate: () => void;\n  unmount: () => void;\n}\n\nexport const createLighting = ({\n  renderer,\n  scene,\n}: LightingProps): Lighting => {\n  let dirLight: Nullable<DirectionalLight>;\n  let ambientLight: Nullable<AmbientLight>;\n\n  const mount = () => {\n    dirLight = new DirectionalLight(0xffffff, 5);\n    dirLight.castShadow = true;\n    dirLight.position.set(0, 1, 0.5);\n    dirLight.target.position.set(0, 0, 0);\n\n    dirLight.shadow.mapSize.width = 1024;\n    dirLight.shadow.mapSize.height = 1024;\n    dirLight.shadow.camera.near = 0.1;\n    dirLight.shadow.camera.far = 50;\n    dirLight.shadow.camera.left = -10;\n    dirLight.shadow.camera.right = 10;\n    dirLight.shadow.camera.top = 10;\n    dirLight.shadow.camera.bottom = -10;\n\n    ambientLight = new AmbientLight(0xffffff);\n\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = PCFShadowMap;\n  };\n\n  const activate = () => {\n    if (dirLight) scene.add(dirLight);\n    if (ambientLight) scene.add(ambientLight);\n  };\n\n  const deactivate = () => {\n    if (dirLight) scene.remove(dirLight);\n    if (ambientLight) scene.remove(ambientLight);\n  };\n\n  const unmount = () => {};\n\n  return {\n    mount: mount,\n    activate: activate,\n    deactivate: deactivate,\n    unmount: unmount,\n  };\n};\n","import { Logger } from \"@utils/Logger\";\nimport { GlobalStorageManager } from \"engine/managers/storage/storageTypes\";\nimport { AnimationMixer, Object3D, Object3DEventMap, Scene } from \"three\";\nimport { ModelIdentifier } from \"types/rooms.types\";\n\nexport interface PlayerProps {\n  reference: ModelIdentifier;\n  storage: GlobalStorageManager;\n  logger: Logger;\n}\n\nexport interface PlayerContext {\n  scene: Scene;\n}\n\nexport interface Player {\n  mount: () => void;\n  activate: () => void;\n  update: (deltaTime: number) => void;\n  deactiavte: () => void;\n  unmount: () => void;\n}\n\ninterface ObjectReferences {\n  playerRoot: Object3D;\n}\n\nexport const createPlayer = ({\n  logger,\n  reference,\n  storage,\n}: PlayerProps): Player => {\n  let objects: ObjectReferences;\n  let mixers: AnimationMixer[] = [];\n\n  const castShadow = (player: Object3D<Object3DEventMap>) => {\n    player.traverse((child) => {\n      child.castShadow = true;\n    });\n  };\n\n  const mount = () => {\n    try {\n      let playerRoot = storage\n        .getStorage(\"model\")\n        .retrieve(reference.storageId)?.groups;\n      let animations =\n        storage.getStorage(\"model\").retrieve(reference.storageId)?.animations ??\n        [];\n\n      if (!playerRoot) {\n        throw new Error(\n          `player doesn't exist for the id ${reference.storageId}`\n        );\n      }\n\n      //Local References\n      objects = {\n        playerRoot: playerRoot,\n      };\n\n      // console.log('armature',armature)\n      const mixer = new AnimationMixer(playerRoot);\n      mixer.clipAction(animations[2]).play();\n\n      mixers.push(mixer);\n      logger.onMount({ origin: \"Project-Room-Player\" });\n    } catch (err) {\n      console.error(`Player mesh cant be obtained :${err}`);\n    }\n  };\n\n  const activate = () => {\n    if (objects.playerRoot) {\n      objects.playerRoot.rotation.set(0, 0, 0, \"XYZ\");\n      objects.playerRoot.castShadow = true;\n      castShadow(objects.playerRoot);\n    }\n  };\n\n  const update = (deltaTime: number) => {\n    mixers.forEach((mixer) => {\n      mixer.update(deltaTime);\n    });\n  };\n\n  const deactivate = () => {};\n\n  const unmount = () => {};\n\n  return {\n    mount: mount,\n    activate: activate,\n    update: update,\n    deactiavte: deactivate,\n    unmount: unmount,\n  };\n};\n","import { getServiceRegistry } from \"engine/core/ServiceRegistry\";\nimport { Group, Object3DEventMap } from \"three\";\nimport { ModelIdentifier, Room, RoomProps } from \"types/rooms.types\";\nimport { CameraManager, createCameraManager } from \"./camera\";\nimport { createGround, Ground } from \"./ground\";\nimport { createLighting, Lighting } from \"./lights\";\nimport { createPlayer, Player } from \"./player\";\n\nexport interface ProjectRoomProps extends RoomProps {\n  player: ModelIdentifier;\n  ground: ModelIdentifier;\n}\n\ninterface Components {\n  camera: CameraManager;\n  player: Player;\n  ground: Ground;\n  lighting: Lighting;\n}\n\nexport const createProjectRoom = ({\n  player,\n  ground,\n}: ProjectRoomProps): Room => {\n  //====References===\n  const serviceRegistry = getServiceRegistry();\n  const [storage, context, eventBusManager, logger] = [\n    serviceRegistry.get(\"GlobalStorageManager\"),\n    serviceRegistry.get(\"ThreeJSContextManager\"),\n    serviceRegistry.get(\"EventBusManager\"),\n    serviceRegistry.get(\"Logger\"),\n  ];\n\n  const { scene, camera, orbit, renderer } = {\n    scene: context.get(\"scene\")!,\n    camera: context.get(\"camera\")!,\n    orbit: context.get(\"orbit\")!,\n    renderer: context.get(\"renderer\")!,\n  };\n\n  //===Local===\n  const components: Components = {\n    camera: createCameraManager({\n      camera,\n      eventBusManager,\n      orbit,\n      scene,\n    }),\n    player: createPlayer({ logger, reference: player, storage }),\n    ground: createGround({ logger, reference: ground, storage }),\n    lighting: createLighting({ renderer, scene }),\n  };\n  let group: Nullable<Group<Object3DEventMap>> = null;\n\n  const mount = () => {\n    components.ground.mount();\n    components.player.mount();\n    components.camera.mount();\n    components.lighting.mount();\n\n    group =\n      storage.getStorage(\"model\").retrieve(ground.storageId)?.groups ?? null;\n\n    logger.onMount({ origin: \"Projects\" });\n  };\n\n  const activate = () => {\n    if (group) group.visible = true;\n\n    components.camera.activate();\n    components.ground.actiavte();\n    components.lighting.activate();\n    components.player.activate();\n  };\n\n  const update = (deltaTime: number) => {\n    components.player.update(deltaTime);\n    components.camera.update(deltaTime);\n  };\n\n  const deactivate = () => {\n    if (group) group.visible = false;\n\n    components.camera.deactivate();\n    components.ground.deactivate();\n    components.lighting.deactivate();\n    components.player.deactiavte();\n  };\n\n  const unmount = () => {\n    components.camera.unmount();\n    components.ground.unmount();\n    components.lighting.unmount();\n    components.player.unmount();\n  };\n\n  return {\n    mount: mount,\n    setActive: activate,\n    update: update,\n    setDeactive: deactivate,\n    unmount: unmount,\n    isLoaded: false,\n  };\n};\n","import {\n  ABOUT_ROOM_ASSETS,\n  NAVIGATION_ROOM_ASSETS,\n  PLAYER_ASSET,\n  PROJECTS_ROOM_ASSETS,\n} from \"config/asset_manifest\";\nimport {\n  ABOUT_ROOM_OPTIONS,\n  NAVIGATION_ROOM_OPTIONS,\n  PROJECTS_ROOM_OPTIONS,\n} from \"config/rooms\";\nimport { createLoader, Loader } from \"engine/core/LoadingManager\";\nimport { getServiceRegistry } from \"engine/core/ServiceRegistry\";\nimport { createAboutRoom } from \"gameplay/rooms/about/room\";\nimport { createNavigationRoom } from \"gameplay/rooms/navigation/room\";\nimport { createProjectRoom } from \"gameplay/rooms/projects/room\";\nimport { Room, RoomAsset } from \"types/rooms.types\";\n\nexport interface RoomController {\n  mount: () => Promise<void>;\n  switchRoom: Record<RoomKey | \"default\", () => void>;\n  update: (deltaTime: number) => void;\n  unmount: () => void;\n}\n\ntype RoomKey = \"navigation\" | \"about\" | \"projects\";\n\ntype RoomMap = {\n  [key in RoomKey]: Nullable<Room>;\n};\n\ntype RoomAssetsMap = {\n  [key in RoomKey]: RoomAsset;\n};\n\nexport const createRoomController = (): RoomController => {\n  const serviceRegistry = getServiceRegistry();\n  const [storage, logger, eventBusManager, contextManager, stateManager] = [\n    serviceRegistry.get(\"GlobalStorageManager\"),\n    serviceRegistry.get(\"Logger\"),\n    serviceRegistry.get(\"EventBusManager\"),\n    serviceRegistry.get(\"ThreeJSContextManager\"),\n    serviceRegistry.get(\"GlobalStateManager\"),\n  ];\n\n  let loader: Nullable<Loader> = null;\n  let rooms: RoomMap = { navigation: null, about: null, projects: null };\n  let roomAssets: RoomAssetsMap = {\n    navigation: NAVIGATION_ROOM_ASSETS,\n    about: ABOUT_ROOM_ASSETS,\n    projects: PROJECTS_ROOM_ASSETS,\n  };\n  let activeRoom: Nullable<Room> = null;\n  let activeRoomKey: Nullable<RoomKey> = null;\n\n  const initializeLoader = (): void => {\n    try {\n      loader = createLoader({\n        storageManager: storage,\n        stateManager: stateManager,\n        loaderEventBus: eventBusManager.loadingBus,\n        renderer: contextManager.get(\"renderer\")!,\n        scene: contextManager.get(\"scene\")!,\n      });\n      loader?.configure();\n    } catch (err) {\n      throw new Error(\n        `[Gameplay] Couldnt create and initailize the loader due to ${err}`\n      );\n    }\n  };\n\n  const instantiateRoom = (key: RoomKey): Room => {\n    switch (key) {\n      case \"navigation\":\n        rooms[key] = createNavigationRoom(NAVIGATION_ROOM_OPTIONS);\n        return rooms[key]!;\n      case \"about\":\n        rooms[key] = createAboutRoom(ABOUT_ROOM_OPTIONS);\n        return rooms[key]!;\n      case \"projects\":\n        rooms[key] = createProjectRoom(PROJECTS_ROOM_OPTIONS);\n        return rooms[key]!;\n      default:\n        throw new Error(`Unknown Room key ${key}`);\n    }\n  };\n\n  const loadRoom = async (key: RoomKey) => {\n    if (!loader) return;\n\n    const assets = roomAssets[key];\n    if (!assets)\n      throw new Error(\n        \"[Room Controller] sufficient asset meta data is not given.\"\n      );\n\n    if (!rooms[key]) {\n      const room: Room = instantiateRoom(key);\n\n      console.log(\"load room\", roomAssets[key]);\n\n      const loadItems = [...roomAssets[key].meshes];\n      if (roomAssets[key].hdr) loadItems.push(roomAssets[key].hdr);\n\n      //Load only once\n      await loader.load(loadItems);\n\n      if (room) {\n        room.mount();\n        room.isLoaded = true;\n        activeRoom = room;\n      }\n    }\n  };\n\n  const switchRoom = async (key: RoomKey): Promise<void> => {\n    if (activeRoomKey === key) return;\n\n    if (activeRoomKey != null) {\n      if (rooms[activeRoomKey] != null) rooms[activeRoomKey]!.setDeactive();\n    }\n\n    await loadRoom(key);\n\n    if (rooms[key]) rooms[key].setActive();\n    activeRoomKey = key;\n  };\n\n  const mount = async (): Promise<void> => {\n    logger.onMount({ origin: \"Room Controller\" });\n    initializeLoader();\n    await loader?.load([PLAYER_ASSET]);\n    await loadRoom(\"navigation\");\n    await switchRoom(\"navigation\");\n  };\n\n  const update = (deltaTime: number) => {\n    activeRoom?.update(deltaTime);\n  };\n\n  const unmount = (): void => {\n    loader?.dispose();\n\n    Object.values(rooms).forEach((room) => {\n      room?.unmount();\n    });\n\n    logger.onUnmount({ origin: \"room-controller\" });\n  };\n\n  const transitionRooms = (key: RoomKey) => {\n    eventBusManager.loadingBus.emit({\n      type: \"load:start\",\n      loaded: 0,\n      total: 0,\n      url: \"\",\n    });\n\n    Promise.allSettled([switchRoom(key)]).then(() => {\n      eventBusManager.loadingBus.emit({ type: \"load:complete\" });\n    });\n  };\n\n  const deactivateRoom = () => {\n    if (!activeRoomKey) return;\n\n    activeRoom?.setDeactive();\n  };\n\n  return {\n    mount: mount,\n    switchRoom: {\n      navigation: () => transitionRooms(\"navigation\"),\n      about: () => transitionRooms(\"about\"),\n      projects: () => transitionRooms(\"projects\"),\n      default: () => deactivateRoom(),\n    },\n    update: update,\n    unmount: unmount,\n  };\n};\n","import { getServiceRegistry } from \"engine/core/ServiceRegistry\";\nimport { Clock } from \"three\";\nimport { createRoomController, RoomController } from \"./RoomManager\";\n\nexport interface GameplayManager {\n  onMount: () => Promise<void>;\n  update: () => void;\n  onUnmount: () => void;\n}\n\ninterface State {\n  deltaTime: number;\n}\n\ninterface TempData {\n  deltaTime: number;\n}\n\nexport const createGameplayManager = (): GameplayManager => {\n  const serviceRegistry = getServiceRegistry();\n\n  //Global properties\n  const [eventBusManager, logger, input] = [\n    serviceRegistry.get(\"EventBusManager\"),\n    serviceRegistry.get(\"Logger\"),\n    serviceRegistry.get(\"InputManager\"),\n  ];\n  const clock: Clock = new Clock();\n\n  //Re usable state (no re-allocation)\n  let state: State = { deltaTime: 0 };\n  let tempData: TempData = { deltaTime: 0 };\n  let isMounted: boolean = false;\n\n  //Controllers\n  let roomController: RoomController = createRoomController();\n\n  const bind = () => {\n    eventBusManager.displayBus.on(\n      \"about:show\",\n      roomController.switchRoom[\"about\"]\n    );\n    eventBusManager.displayBus.on(\n      \"about:hide\",\n      roomController.switchRoom[\"default\"]\n    );\n\n    eventBusManager.displayBus.on(\n      \"projects:show\",\n      roomController.switchRoom[\"projects\"]\n    );\n    eventBusManager.displayBus.on(\n      \"projects:hide\",\n      roomController.switchRoom[\"default\"]\n    );\n\n    eventBusManager.displayBus.on(\n      \"home:show\",\n      roomController.switchRoom[\"navigation\"]\n    );\n    eventBusManager.displayBus.on(\n      \"home:hide\",\n      roomController.switchRoom[\"default\"]\n    );\n  };\n\n  const mount = async (): Promise<void> => {\n    if (isMounted) return;\n\n    await roomController.mount();\n    bind();\n    isMounted = true;\n\n    window.addEventListener(\"keyup\", (e) => {\n      console.log(e);\n    });\n  };\n\n  const updateDeltaTime = (): void => {\n    tempData.deltaTime = clock.getDelta();\n\n    if (!isNaN(tempData.deltaTime) && tempData.deltaTime !== undefined) {\n      state.deltaTime = tempData.deltaTime;\n    }\n  };\n\n  const update = () => {\n    updateDeltaTime();\n\n    roomController.update(state.deltaTime ?? 0);\n  };\n\n  const unbind = () => {\n    // eventBusManager.displayBus.off(\"about:show\", rooms.navigation.setActive);\n    // eventBusManager.displayBus.off(\"about:hide\", rooms.navigation.setDeactive);\n  };\n\n  const unmount = () => {\n    unbind();\n  };\n\n  return {\n    onMount: mount,\n    update: update,\n    onUnmount: unmount,\n  };\n};\n","import { queueStep } from \"@utils/dsl\";\nimport { DEFAULT_CAMERA_OPTIONS } from \"config/constants\";\nimport { getServiceRegistry } from \"engine/core/ServiceRegistry\";\nimport { PerspectiveCamera, Scene, WebGLRenderer } from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\nimport { Lifecycle } from \"types/lifecycle.types\";\n\nexport interface ThreeJSRenderOptions {\n  /** Dom element id where the render will be mounted */\n  domMountId: string;\n}\n\nexport interface ThreeJsRenderer\n  extends Lifecycle<[], [loop: () => void], [], [], []> {}\n\nexport const createThreeJsInstance = (\n  props: ThreeJSRenderOptions\n): ThreeJsRenderer => {\n  //Local references\n  const { fov, aspectRatio, near, far } = DEFAULT_CAMERA_OPTIONS;\n\n  //=====Core Elements======\n  let scene: Scene = new Scene();\n  let camera: PerspectiveCamera = new PerspectiveCamera(\n    fov,\n    aspectRatio,\n    near,\n    far\n  );\n  let renderer: WebGLRenderer = new WebGLRenderer({ antialias: true });\n  let orbit: OrbitControls;\n\n  // State\n  let animationCallback: Nullable<() => void> = null;\n  let animationFrameId: Nullable<number> = null;\n\n  //External Context Hook\n  const contextManager = getServiceRegistry().get(\"ThreeJSContextManager\");\n  const logger = getServiceRegistry().get(\"Logger\");\n\n  //Internal Methods\n  const mountRendererToDom = (elementId: string): void => {\n    const container = document.getElementById(elementId);\n\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n\n    if (container) {\n      container.appendChild(renderer.domElement);\n      orbit = new OrbitControls(camera, renderer.domElement);\n    } else {\n      console.warn(`Could not find element with selector tag : ${elementId}`);\n    }\n  };\n\n  /**\n   * Mount the context_manager to allow reference to scene and other props externally\n   */\n  const exposeToContext = (): void => {\n    contextManager.set(\"scene\", scene);\n    contextManager.set(\"camera\", camera);\n    contextManager.set(\"orbit\", orbit);\n    contextManager.set(\"renderer\", renderer);\n  };\n\n  const onLoad = () => {\n    return [\n      queueStep(mountRendererToDom, props.domMountId),\n      queueStep(exposeToContext),\n      queueStep(logger.onLoad, { origin: \"ThreeJs-Manager\" }),\n    ];\n  };\n\n  const onMount = (callback: () => void) => {\n    return [\n      () => {\n        animationCallback = callback;\n      },\n      queueStep(logger.onMount, { origin: \"ThreeJs-Manager\" }),\n    ];\n  };\n\n  const render = () => {\n    if (animationFrameId !== null) return; //prevent multiple render loops\n\n    const loop = () => {\n      //Recursive callback function\n      animationFrameId = requestAnimationFrame(loop);\n      animationCallback?.();\n      renderer.render(scene, camera);\n    };\n\n    loop();\n  };\n\n  const onUnmount = () => {\n    const container = document.getElementById(props.domMountId);\n    if (animationFrameId !== null) {\n      cancelAnimationFrame(animationFrameId);\n      animationFrameId = 0;\n    }\n    if (container && renderer.domElement.parentElement === container) {\n      container.removeChild(renderer.domElement);\n    }\n\n    renderer.dispose();\n    logger.onUnmount({ origin: \"ThreeJs-Manager\" });\n  };\n\n  return {\n    onLoad: onLoad,\n    onMount: onMount,\n    onUpdate: render,\n    onUnmount: onUnmount,\n    onDestroy: () => {},\n  };\n};\n","import { EventBus } from \"@events/eventBus\";\nimport { flattenTask, queueStep } from \"@utils/dsl\";\nimport { CANVAS_ID } from \"config/constants\";\nimport { getServiceRegistry } from \"engine/core/ServiceRegistry\";\nimport { PerspectiveCamera, Scene, WebGLRenderer } from \"three\";\nimport { DebugEvents } from \"types/eventType\";\nimport { Lifecycle, Task } from \"types/lifecycle.types\";\n\nimport {\n  createGameplayManager,\n  GameplayManager,\n} from \"gameplay/GameplayManager\";\nimport { ThreeJsContextManager } from \"./ContextManager\";\nimport { createThreeJsInstance } from \"./ThreeJsManager\";\n\nexport interface RenderManager extends Lifecycle {\n  onInit: () => void;\n}\n\n/** Resises Camera and Renderer on window resise */\nconst handleResize = (camera: PerspectiveCamera, renderer: WebGLRenderer) => {\n  const { height, width } = {\n    height: window.innerHeight,\n    width: window.innerWidth,\n  };\n\n  camera.aspect = width / height;\n  camera.updateProjectionMatrix();\n  renderer.setSize(width, height);\n};\n\n/**Toggles the Object Tree when you press shift and u*/\nconst handleDebug = (\n  e: KeyboardEvent,\n  debugEventBus: EventBus<DebugEvents>,\n  scene: Scene\n) => {\n  if (!(e.key.toLowerCase() === \"u\" && e.shiftKey)) return;\n\n  e.preventDefault();\n  debugEventBus.emit({\n    type: \"debug:inspector\",\n    scene: scene,\n  });\n};\n\nexport const createRenderManager = (): RenderManager => {\n  const serviceRegistry = getServiceRegistry();\n  const logger = serviceRegistry.get(\"Logger\");\n  const threeJsManager = createThreeJsInstance({ domMountId: CANVAS_ID });\n  let threeJsContext: ThreeJsContextManager;\n  const gameplay: GameplayManager = createGameplayManager();\n\n  let _handleResize: (e: UIEvent) => void;\n  let _handleDebug: (e: KeyboardEvent) => void;\n\n  /** Adds required event listeners */\n  const addEventListeners = () => {\n    /**\n     * Primary initialization to ensure correct aspect ratios\n     */\n    handleResize(\n      threeJsContext.get(\"camera\")!,\n      threeJsContext.get(\"renderer\")!\n    );\n\n    window.addEventListener(\"resize\", _handleResize);\n    window.addEventListener(\"keydown\", _handleDebug);\n  };\n\n  /** Release all event listeners to prevent memory leaks */\n  const removeEventListeners = () => {\n    window.removeEventListener(\"resize\", _handleResize);\n    window.removeEventListener(\"keydown\", _handleDebug);\n  };\n\n  const onInit = () => {};\n\n  const onLoad = (): Task[] => {\n    const tasks: Task[] = [\n      ...flattenTask(threeJsManager.onLoad() as Task[]),\n      queueStep(logger.onLoad, { origin: \"Render-Manager\" }),\n    ];\n    return tasks;\n  };\n\n  const onMount = (): Task[] => {\n    const tasks: Task[] = [\n      () => {\n        threeJsContext = serviceRegistry.get(\"ThreeJSContextManager\");\n        //Handle Resize\n        _handleResize = (e: UIEvent) =>\n          handleResize(\n            threeJsContext.get(\"camera\")!,\n            threeJsContext.get(\"renderer\")!\n          );\n        //Handle Debug\n        _handleDebug = (e: KeyboardEvent) =>\n          handleDebug(\n            e,\n            serviceRegistry.get(\"EventBusManager\").debugBus,\n            threeJsContext.get(\"scene\")!\n          );\n      },\n      queueStep(addEventListeners),\n      queueStep(logger.onMount, { origin: \"Render-Manager\" }),\n    ];\n\n    return tasks;\n  };\n\n  const onUpdate = (): Task[] => {\n    return [\n      queueStep(async () => {\n        try {\n          await gameplay.onMount(); // gameplay logic added after obtaining all assets\n        } catch (error) {\n          throw new Error(\"[Game Manager] Loading failed :${error}\");\n        }\n      }),\n      ...flattenTask(threeJsManager.onMount(() => {}) as Task[]), // pass the gameplay loop as callback to the game engine\n      queueStep(threeJsManager.onMount, gameplay.update),\n      queueStep(threeJsManager.onUpdate),\n      queueStep(logger.onUpdate, 0, { origin: \"Render-Manager\" }),\n    ];\n  };\n\n  const onUnmount = () => {\n    const tasks: Task[] = [\n      queueStep(removeEventListeners),\n      queueStep(gameplay.onUnmount),\n      queueStep(threeJsManager.onUnmount),\n      queueStep(logger.onUnmount, { origin: \"Render-Manager\" }),\n    ];\n\n    return tasks;\n  };\n\n  const onDispose = () => {\n    logger.onDestroy({ origin: \"RenderManager\" });\n  };\n\n  return {\n    onInit,\n    onLoad,\n    onMount,\n    onUpdate,\n    onUnmount,\n    onDestroy: onDispose,\n  };\n};\n"]}