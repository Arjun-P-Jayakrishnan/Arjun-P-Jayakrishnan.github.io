var i=()=>{let o=new Set,s=e=>e.toLowerCase(),t=e=>{o.delete(s(e.key));},r=e=>{o.add(s(e.key));};return {onMount:()=>{window.addEventListener("keyup",t),window.addEventListener("keydown",r);},onUnmount:()=>{window.removeEventListener("keyup",t),window.removeEventListener("keydown",r),o.clear();},getPressedKeys:()=>Array.from(o),isKeyPressed:e=>o.has(s(e))}};var a={SENSITIVITY:{sensitivityPitch:.001}};var m=()=>{let{sensitivityPitch:s}=a.SENSITIVITY,t={rotation:{pitch:0,yaw:0}},r=u=>{t.rotation.pitch+=u.movementY,t.rotation.yaw+=u.movementX;};return {onMount:()=>{document.addEventListener("mousemove",r);},onUnmount:()=>{document.removeEventListener("mousemove",r);},getRotation:()=>{let u=t.rotation.yaw,e=t.rotation.pitch;return t.rotation.pitch=0,t.rotation.yaw=0,{yaw:-3e-3*u,pitch:s*e}}}};var n=null,b=()=>({onInit:()=>{n||(n={mouse:m(),keyboard:i()},n.mouse.onMount(),n.keyboard.onMount());},getController:r=>n?n[r]:null,onUnmount:()=>{n&&(n.mouse.onUnmount(),n.keyboard.onUnmount());}});export{b as createInputManager};//# sourceMappingURL=InputManager.js.map
//# sourceMappingURL=InputManager.js.map