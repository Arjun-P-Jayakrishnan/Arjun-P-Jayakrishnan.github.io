{"version":3,"sources":["../../../src/utils/dsl.ts","../../../src/config/constants.ts","../../../src/engine/core/ServiceRegistry.ts","../../../src/engine/managers/ThreeJsManager.ts"],"names":["queueStep","fn","args","DEFAULT_CAMERA_OPTIONS","createServiceRegistry","services","name","service","serviceRegistry","getServiceRegistry","createThreeJsInstance","props","fov","aspectRatio","near","far","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","orbit","animationCallback","animationFrameId","contextManager","logger","mountRendererToDom","elementId","container","OrbitControls","exposeToContext","callback","loop"],"mappings":"mIAMA,SAASA,EACPC,CACGC,CAAAA,GAAAA,CAAAA,CACG,CACN,OAAO,IAAMD,CAAG,CAAA,GAAGC,CAAI,CACzB,CCRA,IAAMC,CAAAA,CAAyB,CAC7B,GAAK,CAAA,EAAA,CACL,YAAa,MAAO,CAAA,UAAA,CAAa,MAAO,CAAA,WAAA,CACxC,KAAM,EACN,CAAA,GAAA,CAAK,GACP,CAAA,CCDA,IAAMC,CAAwB,CAAA,IAAuB,CACnD,IAAMC,EAAyC,IAAI,GAAA,CA6BnD,OAAO,CACL,QAAA,CAzBe,CACfC,CACAC,CAAAA,CAAAA,GACS,CACT,GAAIF,EAAS,GAAIC,CAAAA,CAAI,CACnB,CAAA,MAAM,IAAI,KAAM,CAAA,CAAA,gCAAA,EAAmCA,CAAI,CAAA,CAAA,CAAG,EAE5DD,CAAS,CAAA,GAAA,CAAIC,EAAMC,CAAO,EAC5B,EAkBE,GAhBiCD,CAAAA,CAAAA,EAA2B,CAC5D,IAAMC,EAAUF,CAAS,CAAA,GAAA,CAAIC,CAAI,CAAA,CACjC,GAAI,CAACC,CAAAA,CACH,MAAM,IAAI,MACR,CAA6DD,0DAAAA,EAAAA,CAAI,EACnE,CAEF,CAAA,OAAOC,CACT,CASE,CAAA,GAAA,CAPWD,CACJD,EAAAA,CAAAA,CAAS,IAAIC,CAAI,CAO1B,CACF,CAAA,CAEIE,EAEEC,CAAqB,CAAA,KACpBD,CACHA,GAAAA,CAAAA,CAAkBJ,GAGbI,CAAAA,CAAAA,CAAAA,CAAAA,CCpCF,IAAME,EACXC,CACoB,EAAA,CAEpB,GAAM,CAAE,IAAAC,CAAK,CAAA,WAAA,CAAAC,EAAa,IAAAC,CAAAA,CAAAA,CAAM,IAAAC,CAAI,CAAA,CAAIZ,CAGpCa,CAAAA,CAAAA,CAAe,IAAIC,KACnBC,CAAAA,CAAAA,CAA4B,IAAIC,iBAAAA,CAClCP,EACAC,CACAC,CAAAA,CAAAA,CACAC,CACF,CAAA,CACIK,EAA0B,IAAIC,aAAAA,CAAc,CAAE,SAAW,CAAA,IAAK,CAAC,CAC/DC,CAAAA,CAAAA,CAGAC,CAA0C,CAAA,IAAA,CAC1CC,EAAqC,IAGnCC,CAAAA,CAAAA,CAAiBhB,CAAmB,EAAA,CAAE,IAAI,uBAAuB,CAAA,CACjEiB,CAASjB,CAAAA,CAAAA,GAAqB,GAAI,CAAA,QAAQ,EAG1CkB,CAAsBC,CAAAA,CAAAA,EAA4B,CACtD,IAAMC,CAAAA,CAAY,QAAS,CAAA,cAAA,CAAeD,CAAS,CAEnDR,CAAAA,CAAAA,CAAS,OAAQ,CAAA,MAAA,CAAO,WAAY,MAAO,CAAA,WAAW,CACtDA,CAAAA,CAAAA,CAAS,cAAc,MAAO,CAAA,gBAAgB,EAE1CS,CACFA,EAAAA,CAAAA,CAAU,YAAYT,CAAS,CAAA,UAAU,CACzCE,CAAAA,CAAAA,CAAQ,IAAIQ,aAAcZ,CAAAA,CAAAA,CAAQE,CAAS,CAAA,UAAU,GAErD,OAAQ,CAAA,IAAA,CAAK,CAA8CQ,2CAAAA,EAAAA,CAAS,EAAE,EAE1E,CAAA,CAKMG,EAAkB,IAAY,CAClCN,EAAe,GAAI,CAAA,OAAA,CAAST,CAAK,CAAA,CACjCS,EAAe,GAAI,CAAA,QAAA,CAAUP,CAAM,CAAA,CACnCO,EAAe,GAAI,CAAA,OAAA,CAASH,CAAK,CAAA,CACjCG,EAAe,GAAI,CAAA,UAAA,CAAYL,CAAQ,EACzC,CAAA,CA8CA,OAAO,CACL,MAAA,CA7Ca,IACN,CACLpB,EAAU2B,CAAoBhB,CAAAA,CAAAA,CAAM,UAAU,CAAA,CAC9CX,EAAU+B,CAAe,CAAA,CACzB/B,CAAU0B,CAAAA,CAAAA,CAAO,OAAQ,CAAE,MAAA,CAAQ,iBAAkB,CAAC,CACxD,EAyCA,OAtCeM,CAAAA,CAAAA,EACR,CACL,IAAM,CACJT,CAAoBS,CAAAA,EACtB,CACAhC,CAAAA,CAAAA,CAAU0B,EAAO,OAAS,CAAA,CAAE,MAAQ,CAAA,iBAAkB,CAAC,CACzD,CAAA,CAiCA,SA9Ba,IAAM,CACnB,GAAIF,CAAqB,GAAA,IAAA,CAAM,OAE/B,IAAMS,EAAO,IAAM,CAEjBT,CAAmB,CAAA,qBAAA,CAAsBS,CAAI,CAC7CV,CAAAA,CAAAA,IACAH,CAAAA,CAAAA,CAAS,OAAOJ,CAAOE,CAAAA,CAAM,EAC/B,CAEAe,CAAAA,CAAAA,GACF,CAoBE,CAAA,SAAA,CAlBgB,IAAM,CACtB,IAAMJ,CAAY,CAAA,QAAA,CAAS,cAAelB,CAAAA,CAAAA,CAAM,UAAU,CACtDa,CAAAA,CAAAA,GAAqB,IACvB,GAAA,oBAAA,CAAqBA,CAAgB,CACrCA,CAAAA,CAAAA,CAAmB,GAEjBK,CAAaT,EAAAA,CAAAA,CAAS,WAAW,aAAkBS,GAAAA,CAAAA,EACrDA,CAAU,CAAA,WAAA,CAAYT,EAAS,UAAU,CAAA,CAG3CA,EAAS,OAAQ,EAAA,CACjBM,EAAO,SAAU,CAAA,CAAE,MAAQ,CAAA,iBAAkB,CAAC,EAChD,CAAA,CAOE,UAAW,IAAM,EACnB,CACF","file":"ThreeJsManager.js","sourcesContent":["//Domain Specific Language\n\nimport { Task } from \"types/lifecycle.types\";\n\ntype Step<F extends (...args: any[]) => any> = [F, ...Parameters<F>];\n\nfunction queueStep<F extends (...args: any[]) => any>(\n  fn: F,\n  ...args: Parameters<F>\n): Task {\n  return () => fn(...args);\n}\n\nfunction flattenTask(tasks: (Task | Task[])[]): Task[] {\n  const result: Task[] = [];\n\n  for (const task of tasks) {\n    if (Array.isArray(task)) {\n      result.push(...flattenTask(task));\n    } else {\n      result.push(task);\n    }\n  }\n\n  return result;\n}\n\nexport { flattenTask, queueStep };\n","const MAX_TASKS_PER_FRAME = 5;\nconst MAX_FRAME_BUCKET_TIME = 20; //ms\n\nconst DEFAULT_CAMERA_OPTIONS = {\n  fov: 75,\n  aspectRatio: window.innerWidth / window.innerHeight,\n  near: 0.1,\n  far: 1000,\n} as const;\n\nconst CANVAS_ID = \"game-engine\";\n\nconst MOUSE_CONFIG = {\n  SENSITIVITY: { sensitivityYaw: 0.003, sensitivityPitch: 0.001 },\n};\n\nexport {\n  CANVAS_ID,\n  DEFAULT_CAMERA_OPTIONS,\n  MAX_FRAME_BUCKET_TIME,\n  MAX_TASKS_PER_FRAME,\n  MOUSE_CONFIG,\n};\n","import {\n  ServiceKey,\n  ServiceMap,\n  ServiceRegistry,\n  ServiceType,\n} from \"types/service.types\";\n\nconst createServiceRegistry = (): ServiceRegistry => {\n  const services: Map<ServiceKey, ServiceType> = new Map<\n    ServiceKey,\n    ServiceType\n  >();\n\n  const register = <K extends ServiceKey>(\n    name: K,\n    service: ServiceMap[K]\n  ): void => {\n    if (services.has(name)) {\n      throw new Error(`Error : Redefining the service [${name}]`);\n    }\n    services.set(name, service);\n  };\n\n  const get = <K extends ServiceKey>(name: K): ServiceMap[K] => {\n    const service = services.get(name);\n    if (!service) {\n      throw new Error(\n        `Error : Trying to obtain value of an unregistered service ${name}`\n      );\n    }\n    return service as ServiceMap[K];\n  };\n\n  const has = (name: ServiceKey): boolean => {\n    return services.has(name);\n  };\n\n  return {\n    register: register,\n    get: get,\n    has: has,\n  };\n};\n\nlet serviceRegistry: ServiceRegistry | undefined = undefined;\n\nconst getServiceRegistry = () => {\n  if (!serviceRegistry) {\n    serviceRegistry = createServiceRegistry();\n  }\n\n  return serviceRegistry;\n};\n\nexport { getServiceRegistry };\n","import { queueStep } from \"@utils/dsl\";\nimport { DEFAULT_CAMERA_OPTIONS } from \"config/constants\";\nimport { getServiceRegistry } from \"engine/core/ServiceRegistry\";\nimport { PerspectiveCamera, Scene, WebGLRenderer } from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\nimport { Lifecycle } from \"types/lifecycle.types\";\n\nexport interface ThreeJSRenderOptions {\n  /** Dom element id where the render will be mounted */\n  domMountId: string;\n}\n\nexport interface ThreeJsRenderer\n  extends Lifecycle<[], [loop: () => void], [], [], []> {}\n\nexport const createThreeJsInstance = (\n  props: ThreeJSRenderOptions\n): ThreeJsRenderer => {\n  //Local references\n  const { fov, aspectRatio, near, far } = DEFAULT_CAMERA_OPTIONS;\n\n  //=====Core Elements======\n  let scene: Scene = new Scene();\n  let camera: PerspectiveCamera = new PerspectiveCamera(\n    fov,\n    aspectRatio,\n    near,\n    far\n  );\n  let renderer: WebGLRenderer = new WebGLRenderer({ antialias: true });\n  let orbit: OrbitControls;\n\n  // State\n  let animationCallback: Nullable<() => void> = null;\n  let animationFrameId: Nullable<number> = null;\n\n  //External Context Hook\n  const contextManager = getServiceRegistry().get(\"ThreeJSContextManager\");\n  const logger = getServiceRegistry().get(\"Logger\");\n\n  //Internal Methods\n  const mountRendererToDom = (elementId: string): void => {\n    const container = document.getElementById(elementId);\n\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n\n    if (container) {\n      container.appendChild(renderer.domElement);\n      orbit = new OrbitControls(camera, renderer.domElement);\n    } else {\n      console.warn(`Could not find element with selector tag : ${elementId}`);\n    }\n  };\n\n  /**\n   * Mount the context_manager to allow reference to scene and other props externally\n   */\n  const exposeToContext = (): void => {\n    contextManager.set(\"scene\", scene);\n    contextManager.set(\"camera\", camera);\n    contextManager.set(\"orbit\", orbit);\n    contextManager.set(\"renderer\", renderer);\n  };\n\n  const onLoad = () => {\n    return [\n      queueStep(mountRendererToDom, props.domMountId),\n      queueStep(exposeToContext),\n      queueStep(logger.onLoad, { origin: \"ThreeJs-Manager\" }),\n    ];\n  };\n\n  const onMount = (callback: () => void) => {\n    return [\n      () => {\n        animationCallback = callback;\n      },\n      queueStep(logger.onMount, { origin: \"ThreeJs-Manager\" }),\n    ];\n  };\n\n  const render = () => {\n    if (animationFrameId !== null) return; //prevent multiple render loops\n\n    const loop = () => {\n      //Recursive callback function\n      animationFrameId = requestAnimationFrame(loop);\n      animationCallback?.();\n      renderer.render(scene, camera);\n    };\n\n    loop();\n  };\n\n  const onUnmount = () => {\n    const container = document.getElementById(props.domMountId);\n    if (animationFrameId !== null) {\n      cancelAnimationFrame(animationFrameId);\n      animationFrameId = 0;\n    }\n    if (container && renderer.domElement.parentElement === container) {\n      container.removeChild(renderer.domElement);\n    }\n\n    renderer.dispose();\n    logger.onUnmount({ origin: \"ThreeJs-Manager\" });\n  };\n\n  return {\n    onLoad: onLoad,\n    onMount: onMount,\n    onUpdate: render,\n    onUnmount: onUnmount,\n    onDestroy: () => {},\n  };\n};\n"]}