{"version":3,"sources":["../src/components/loading/loading.ts"],"names":["template","LoadingModal","data","clone","getServiceRegistry","eventBusManager"],"mappings":"oCAMA,IAAMA,EAAW,QAAS,CAAA,aAAA,CAAc,UAAU,CAAA,CAElDA,EAAS,SAAY,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAA,CAaRC,IAAAA,CAAAA,CAAN,cAA2B,WAAY,CAO5C,WAAA,EAAc,CACZ,KAAA,EAcF,CAAA,IAAA,CAAA,aAAA,CAAgB,IAAM,CACpB,KAAK,eAAiB,EAAA,EAAA,CAAG,YAAeC,CAAAA,CAAAA,EAAS,CAC/C,IAAA,CAAK,IAAK,CAAA,OAAA,EAAS,SAAU,CAAA,MAAA,CAAO,QAAQ,EAC9C,CAAC,CAAA,CACD,IAAK,CAAA,eAAA,EAAiB,GAAG,eAAkBA,CAAAA,CAAAA,EAAS,CAClD,IAAA,CAAK,QAAWA,CAAAA,CAAAA,CAAK,MAASA,CAAAA,CAAAA,CAAK,MACrC,CAAC,CACD,CAAA,IAAA,CAAK,eAAiB,EAAA,EAAA,CAAG,eAAkBA,CAAAA,CAAAA,EAAS,CAClD,IAAK,CAAA,IAAA,CAAK,OAAS,EAAA,SAAA,CAAU,GAAI,CAAA,QAAQ,EAC3C,CAAC,CACD,CAAA,IAAA,CAAK,eAAiB,EAAA,EAAA,CAAG,YAAeA,CAAAA,CAAAA,EAAS,EAAE,EACrD,CAxBE,CAAA,IAAA,CAAK,IAAO,CAAA,IAAA,CAAK,YAAa,CAAA,CAAE,IAAM,CAAA,MAAO,CAAC,CAAA,CAE9C,IAAMC,CAAAA,CAAQH,CAAS,CAAA,OAAA,CAAQ,SAAU,CAAA,IAAI,EAC7C,IAAK,CAAA,IAAA,CAAK,WAAYG,CAAAA,CAAK,CAC3B,CAAA,IAAA,CAAK,QAAW,CAAA,CAAA,CAEhB,IAAK,CAAA,IAAA,CAAO,CACV,OAAA,CAAS,IAAK,CAAA,IAAA,CAAK,cAAe,CAAA,SAAS,CAC7C,CACA,CAAA,IAAA,CAAK,MAASC,CAAAA,CAAAA,EAAqB,CAAA,GAAA,CAAI,QAAQ,CAAA,CAC/C,IAAK,CAAA,MAAA,CAAO,MAAO,CAAA,CAAE,MAAQ,CAAA,eAAgB,CAAC,EAChD,CAeA,IAAI,eAAA,CAAgBC,CAAkC,CAAA,CACpD,IAAK,CAAA,eAAA,CAAkBA,CAAgB,CAAA,UAAA,CACvC,IAAK,CAAA,aAAA,GACP,CAEA,iBAAoB,EAAA,EAEpB,oBAAA,EAAuB,EACzB","file":"chunk-WVIKCH65.js","sourcesContent":["import { EventBus } from \"@events/eventBus\";\nimport { EventBusManager } from \"@events/EventBusManager\";\nimport { Logger } from \"@utils/Logger\";\nimport { getServiceRegistry } from \"engine/core/ServiceRegistry\";\nimport { LoadingEvents } from \"types/event.types\";\n\nconst template = document.createElement(\"template\");\n///TODO: Re-add hidden in overlay\ntemplate.innerHTML = `\n    <link rel=\"stylesheet\" href=\"/style/loading_modal.css\"/>\n   \n    <div class=\"overlay\" id=\"overlay\">\n      <div class=\"loading-logo\"></div>\n      <div id=\"loading-text\">Loading...</div>\n    </div>\n`;\n\ninterface Tags {\n  overlay: HTMLElement | null;\n}\n\nexport class LoadingModal extends HTMLElement {\n  loadingEventBus?: EventBus<LoadingEvents>;\n  root: ShadowRoot;\n  tags: Tags;\n  progress: number;\n  logger: Logger;\n\n  constructor() {\n    super();\n    this.root = this.attachShadow({ mode: \"open\" });\n\n    const clone = template.content.cloneNode(true);\n    this.root.appendChild(clone);\n    this.progress = 0;\n\n    this.tags = {\n      overlay: this.root.getElementById(\"overlay\"),\n    };\n    this.logger = getServiceRegistry().get(\"Logger\");\n    this.logger.onLoad({ origin: \"Loading Modal\" });\n  }\n\n  handleLoading = () => {\n    this.loadingEventBus?.on(\"load:start\", (data) => {\n      this.tags.overlay?.classList.remove(\"hidden\");\n    });\n    this.loadingEventBus?.on(\"load:progress\", (data) => {\n      this.progress = data.loaded / data.total;\n    });\n    this.loadingEventBus?.on(\"load:complete\", (data) => {\n      this.tags.overlay?.classList.add(\"hidden\");\n    });\n    this.loadingEventBus?.on(\"load:error\", (data) => {});\n  };\n\n  set eventBusManager(eventBusManager: EventBusManager) {\n    this.loadingEventBus = eventBusManager.loadingBus;\n    this.handleLoading();\n  }\n\n  connectedCallback() {}\n\n  disconnectedCallback() {}\n}\n"]}