{"version":3,"sources":["../src/components/website/header.ts"],"names":["template","Navbar","e","navLinks","data","shadowRoot","clone","_","eventBusManager"],"mappings":"AAIA,IAAMA,EAAW,QAAS,CAAA,aAAA,CAAc,UAAU,CAAA,CAElDA,EAAS,SAAY,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAA,KA4BRC,CAAN,CAAA,cAAqB,WAAY,CAKtC,WAAA,EAAc,CACZ,KAAM,EAAA,CAqCR,IAAuBC,CAAAA,mBAAAA,CAAAA,CAAAA,EAAa,CAC7BA,CAAsB,CAAA,YAAA,GAAiB,aAEvC,IAAK,CAAA,UAAA,CAAW,WAEjB,IAAK,CAAA,UAAA,CAAW,QAAS,CAAA,SAAA,CAAU,SAAS,SAAS,CAAA,EACvD,KAAK,UAAW,CAAA,QAAA,CAAS,UAAU,MAAO,CAAA,SAAS,EAGrD,IAAK,CAAA,KAAA,CAAM,cAAc,eAAkB,CAAA,KAAA,EAC7C,EAKA,IAAmBC,CAAAA,eAAAA,CAAAA,CAAAA,EAA4B,CACzC,IAAK,CAAA,KAAA,CAAM,aAAc,CAAA,eAAA,GAE7B,KAAK,KAAM,CAAA,aAAA,CAAc,gBAAkB,IAEvC,CAAA,IAAA,CAAK,MAAM,aAAc,CAAA,MAAA,EAC3BA,EAAS,SAAU,CAAA,MAAA,CAAO,MAAM,CAChCA,CAAAA,CAAAA,CAAS,UAAU,GAAI,CAAA,SAAS,EAChC,IAAK,CAAA,KAAA,CAAM,aAAc,CAAA,MAAA,CAAS,QAElCA,CAAS,CAAA,SAAA,CAAU,IAAI,MAAM,CAAA,CAC7BA,EAAS,SAAU,CAAA,MAAA,CAAO,SAAS,CACnC,CAAA,IAAA,CAAK,MAAM,aAAc,CAAA,MAAA,CAAS,MAGpC,IAAK,CAAA,UAAA,EAAY,WAAW,YAC1B,CAAA,eAAA,CACA,MAAO,CAAA,IAAA,CAAK,MAAM,aAAc,CAAA,MAAM,CACxC,CACF,EAAA,CAAA,CAUA,0BAAwBD,CAAa,EAAA,CACnCA,CAAE,CAAA,cAAA,GAEF,IAAK,CAAA,KAAA,CAAM,gBAAkB,CAAC,IAAA,CAAK,MAAM,eAEzC,CAAA,IAAA,CAAK,KAAM,CAAA,eAAA,CACP,KAAK,eAAiB,EAAA,IAAA,CAAK,CAAE,IAAM,CAAA,cAAe,CAAC,CACnD,CAAA,IAAA,CAAK,iBAAiB,IAAK,CAAA,CAAE,KAAM,cAAe,CAAC,EACzD,CAEA,CAAA,IAAA,CAAQ,eAAkBE,CAAc,EAAA,IAAA,CAAK,eAAgBA,CAAAA,CAAI,EACjE,IAAQ,CAAA,cAAA,CAAkBA,GAAc,IAAK,CAAA,eAAA,CAAgBA,CAAI,CACjE,CAAA,IAAA,CAAQ,cAAiBF,CACvB,EAAA,IAAA,CAAK,gBAAgB,IAAK,CAAA,UAAA,CAAW,QAAS,CAChD,CAAA,IAAA,CAAQ,eAAkBA,CAAa,EAAA,IAAA,CAAK,mBAAoBA,CAAAA,CAAC,EACjE,IAAQ,CAAA,cAAA,CAAkBA,GAAa,IAAK,CAAA,oBAAA,CAAqBA,CAAC,CA9FhE,CAAA,IAAMG,EAAa,IAAK,CAAA,YAAA,CAAa,CAAE,IAAM,CAAA,MAAO,CAAC,CAE/CC,CAAAA,CAAAA,CAAQN,EAAS,OAAQ,CAAA,SAAA,CAAU,IAAI,CAAA,CAE7CK,EAAW,WAAYC,CAAAA,CAAK,EAE5B,IAAK,CAAA,UAAA,CAAa,CAChB,SAAWD,CAAAA,CAAAA,CAAW,aAAc,CAAA,aAAa,EACjD,QAAUA,CAAAA,CAAAA,CAAW,cAAc,YAAY,CAAA,CAC/C,SAAU,IACZ,CAAA,CAEI,IAAK,CAAA,UAAA,CAAW,WAClB,IAAK,CAAA,UAAA,CAAW,SACd,IAAK,CAAA,UAAA,CAAW,SAAS,aAAc,CAAA,WAAW,GAGtD,IAAK,CAAA,KAAA,CAAQ,CACX,aAAe,CAAA,CACb,OAAQ,KACR,CAAA,eAAA,CAAiB,KACnB,CACA,CAAA,eAAA,CAAiB,KACnB,EACF,CAEA,WAAW,kBAAA,EAAqB,CAC9B,OAAO,EACT,CA2CA,eAAA,CAAgBE,EAAQ,CACtB,IAAA,CAAK,MAAM,eAAkB,CAAA,KAC/B,CAEA,eAAgBA,CAAAA,CAAAA,CAAQ,CACtB,IAAK,CAAA,KAAA,CAAM,eAAkB,CAAA,MAC/B,CAmBA,IAAI,eAAA,CAAgBC,EAAkC,CACpD,IAAA,CAAK,gBAAkBA,CAAgB,CAAA,UAAA,CAGvC,KAAK,eAAgB,CAAA,EAAA,CAAG,eAAgB,IAAK,CAAA,cAAc,EAG3D,IAAK,CAAA,eAAA,CAAgB,GAAG,cAAgB,CAAA,IAAA,CAAK,cAAc,EAC7D,CAKA,iBAAoB,EAAA,CAId,KAAK,UAAW,CAAA,SAAA,EAClB,KAAK,UAAW,CAAA,SAAA,CAAU,iBAAiB,OAAS,CAAA,IAAA,CAAK,aAAa,CAIpE,CAAA,IAAA,CAAK,WAAW,QAClB,EAAA,IAAA,CAAK,WAAW,QAAS,CAAA,gBAAA,CACvB,eACA,CAAA,IAAA,CAAK,cACP,CAIE,CAAA,IAAA,CAAK,WAAW,QAClB,EAAA,IAAA,CAAK,WAAW,QAAS,CAAA,gBAAA,CAAiB,QAAS,IAAK,CAAA,cAAc,EAC1E,CAKA,oBAAA,EAAuB,CAChB,IAAK,CAAA,eAAA,GAEV,KAAK,eAAgB,CAAA,GAAA,CAAI,cAAgB,CAAA,IAAA,CAAK,cAAc,CAC5D,CAAA,IAAA,CAAK,gBAAgB,GAAI,CAAA,cAAA,CAAgB,KAAK,cAAc,CAAA,CAExD,KAAK,UAAW,CAAA,SAAA,EAClB,KAAK,UAAW,CAAA,SAAA,CAAU,oBACxB,OACA,CAAA,IAAA,CAAK,aACP,CAEE,CAAA,IAAA,CAAK,UAAW,CAAA,QAAA,EAClB,KAAK,UAAW,CAAA,QAAA,CAAS,oBACvB,eACA,CAAA,IAAA,CAAK,cACP,CAEE,CAAA,IAAA,CAAK,WAAW,QAClB,EAAA,IAAA,CAAK,WAAW,QAAS,CAAA,mBAAA,CACvB,QACA,IAAK,CAAA,cACP,GACJ,CACF","file":"chunk-YWY65CUM.js","sourcesContent":["import { EventBus } from \"@utils/event_management/eventBus\";\nimport { EventBusManager } from \"@utils/event_management/eventBusFactory\";\nimport { DisplayEvents } from \"@utils/event_management/eventType\";\n\nconst template = document.createElement(\"template\");\n\ntemplate.innerHTML = `\n  <link rel=\"stylesheet\" href=\"/style/header.css\"/>\n  <nav class=\"navbar\" id=\"main-nav\">\n      <div class=\"logo\">Logo</div>\n      <button class=\"toggle-btn\" aria-expanded=\"false\" aria-controls=\"main-nav\">&#9776</button>\n      <ul class=\"nav-links\">\n          <li><a href=\"\" id=\"home\">Home</a></li>\n          <li><a href=\"\" id=\"about\">About</a></li>\n          <li><a href=\"\" id=\"projects\">Projects</a></li>\n          <li><a href=\"\" id=\"contact\">Contact</a></li>\n      </ul>\n  </nav>\n`;\n\ninterface State {\n  hamburgerMenu: {\n    isOpen: boolean;\n    isTransitioning: boolean;\n  };\n  isProjectsShown: boolean;\n}\n\ninterface Components {\n  toggleBtn: HTMLElement | null;\n  navLinks: HTMLElement | null;\n  projects: HTMLAnchorElement | null;\n}\n\nexport class Navbar extends HTMLElement {\n  state: State;\n  displayEventBus: EventBus<DisplayEvents> | undefined;\n  components: Components;\n\n  constructor() {\n    super();\n\n    const shadowRoot = this.attachShadow({ mode: \"open\" });\n\n    const clone = template.content.cloneNode(true);\n\n    shadowRoot.appendChild(clone);\n\n    this.components = {\n      toggleBtn: shadowRoot.querySelector(\".toggle-btn\"),\n      navLinks: shadowRoot.querySelector(\".nav-links\"),\n      projects: null,\n    };\n\n    if (this.components.navLinks) {\n      this.components.projects =\n        this.components.navLinks.querySelector(\"#projects\");\n    }\n\n    this.state = {\n      hamburgerMenu: {\n        isOpen: false,\n        isTransitioning: false,\n      },\n      isProjectsShown: false,\n    };\n  }\n\n  static get observedAttributes() {\n    return [];\n  }\n\n  /**\n   *\n   * @param e event triggered\n   * @returns\n   */\n  handleTransitionEnd = (e: Event) => {\n    if ((e as TransitionEvent).propertyName !== \"transform\") return;\n\n    if (!this.components.navLinks) return;\n\n    if (this.components.navLinks.classList.contains(\"closing\")) {\n      this.components.navLinks.classList.remove(\"closing\");\n    }\n\n    this.state.hamburgerMenu.isTransitioning = false;\n  };\n  /**\n   *\n   * @param navLinks reference to navigation\n   */\n  toggleOpenState = (navLinks: Element): void => {\n    if (this.state.hamburgerMenu.isTransitioning) return;\n\n    this.state.hamburgerMenu.isTransitioning = true;\n\n    if (this.state.hamburgerMenu.isOpen) {\n      navLinks.classList.remove(\"open\");\n      navLinks.classList.add(\"closing\");\n      this.state.hamburgerMenu.isOpen = false;\n    } else {\n      navLinks.classList.add(\"open\");\n      navLinks.classList.remove(\"closing\");\n      this.state.hamburgerMenu.isOpen = true;\n    }\n\n    this.components?.toggleBtn?.setAttribute(\n      \"aria-expanded\",\n      String(this.state.hamburgerMenu.isOpen)\n    );\n  };\n\n  handleShowEvent(_: any) {\n    this.state.isProjectsShown = true;\n  }\n\n  handleHideEvent(_: any) {\n    this.state.isProjectsShown = false;\n  }\n\n  handleOnProjectClick = (e: Event) => {\n    e.preventDefault();\n\n    this.state.isProjectsShown = !this.state.isProjectsShown;\n\n    this.state.isProjectsShown\n      ? this.displayEventBus?.emit({ type: \"project:show\" })\n      : this.displayEventBus?.emit({ type: \"project:hide\" });\n  };\n\n  private showEventBound = (data: any) => this.handleShowEvent(data);\n  private hideEventBound = (data: any) => this.handleHideEvent(data);\n  private onToggleClick = (e: Event) =>\n    this.toggleOpenState(this.components.navLinks!);\n  private onAnimationEnd = (e: Event) => this.handleTransitionEnd(e);\n  private onProjectClick = (e: Event) => this.handleOnProjectClick(e);\n\n  set eventBusManager(eventBusManager: EventBusManager) {\n    this.displayEventBus = eventBusManager.displayBus;\n\n    //update its local state to true if fired externally\n    this.displayEventBus.on(\"project:show\", this.showEventBound);\n\n    //update its local state to false if fired externally\n    this.displayEventBus.on(\"project:hide\", this.hideEventBound);\n  }\n\n  /**\n   * @description called when the component is mounted\n   */\n  connectedCallback() {\n    /**\n     * Show or hide the hamburger menu\n     */\n    if (this.components.toggleBtn)\n      this.components.toggleBtn.addEventListener(\"click\", this.onToggleClick);\n    /**\n     * if it completes animation\n     */\n    if (this.components.navLinks)\n      this.components.navLinks.addEventListener(\n        \"transitionend\",\n        this.onAnimationEnd\n      );\n    /**\n     * Projects\n     */\n    if (this.components.projects)\n      this.components.projects.addEventListener(\"click\", this.onProjectClick);\n  }\n\n  /**\n   * @description called when component is un mounted\n   */\n  disconnectedCallback() {\n    if (!this.displayEventBus) return;\n\n    this.displayEventBus.off(\"project:show\", this.showEventBound);\n    this.displayEventBus.off(\"project:hide\", this.hideEventBound);\n\n    if (this.components.toggleBtn)\n      this.components.toggleBtn.removeEventListener(\n        \"click\",\n        this.onToggleClick\n      );\n\n    if (this.components.navLinks)\n      this.components.navLinks.removeEventListener(\n        \"transitionend\",\n        this.onAnimationEnd\n      );\n\n    if (this.components.projects)\n      this.components.projects.removeEventListener(\n        \"click\",\n        this.onProjectClick\n      );\n  }\n}\n"]}