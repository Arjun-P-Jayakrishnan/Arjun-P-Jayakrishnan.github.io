{"version":3,"sources":["../src/utils/storage/globalStorage.ts"],"sourcesContent":["import { AnimationClip, Group, Object3DEventMap } from \"three\";\nimport { createStorageUnit, StorageUnit } from \"./storageUnit\";\n\nexport interface GlobalStorageProps {}\n\nexport interface GlobalStorage {\n  mount: () => void;\n  unmount: () => void;\n  getStorage: <K extends keyof StorageMap>(key: K) => GenericStorageUnit[K];\n}\n\ntype StorageMap = {\n  animations: AnimationClip[];\n  groups: Group<Object3DEventMap>;\n};\n\ntype GenericStorageUnit = {\n  [K in keyof StorageMap]: StorageUnit<StorageMap[K]>;\n};\n\nexport const createGlobalStorage = <K extends keyof StorageMap>(\n  _props: GlobalStorageProps\n): GlobalStorage => {\n  let storage: GenericStorageUnit | undefined;\n\n  const mount = () => {\n    storage = {\n      animations: createStorageUnit<AnimationClip[]>(),\n      groups: createStorageUnit<Group<Object3DEventMap>>(),\n    };\n  };\n\n  const unmount = () => {\n    if (storage) {\n    }\n    storage = undefined;\n  };\n\n  const getStorage = <K extends keyof StorageMap>(\n    key: K\n  ): GenericStorageUnit[K] => {\n    if (storage === undefined) {\n      throw new Error(`Must mount the storage first`);\n    }\n    return storage[key];\n  };\n\n  return {\n    mount: mount,\n    unmount: unmount,\n    getStorage: getStorage,\n  };\n};\n"],"mappings":"wCAoBO,IAAMA,EACXC,GACkB,CAClB,IAAIC,EAwBJ,MAAO,CACL,MAvBY,IAAM,CAClBA,EAAU,CACR,WAAYC,EAAmC,EAC/C,OAAQA,EAA2C,CACrD,CACF,EAmBE,QAjBc,IAAM,CAGpBD,EAAU,MACZ,EAcE,WAXAE,GAC0B,CAC1B,GAAIF,IAAY,OACd,MAAM,IAAI,MAAM,8BAA8B,EAEhD,OAAOA,EAAQE,CAAG,CACpB,CAMA,CACF","names":["createGlobalStorage","_props","storage","createStorageUnit","key"]}