{"version":3,"sources":["../src/gameplay/gameplay.ts"],"names":["createGameplay","globalState","eventBusManager","getGlobalContext","getThreeJsContext","clock","Clock","state","tempData","isMounted","roomController","createRoomController","bind","mount","processPipelineDebugger","updateDeltaTime","update","unbind"],"mappings":"wLAuBaA,IAAAA,CAAAA,CAAiB,IAAgB,CAE5C,IAAM,CAAE,WAAA,CAAAC,EAAa,eAAAC,CAAAA,CAAgB,CAAIC,CAAAA,CAAAA,GACzBC,CAAAA,EACVC,KAAAA,CAAAA,CAAe,IAAIC,KAGrBC,CAAAA,CAAAA,CAAe,CAAE,SAAA,CAAW,CAAE,CAC9BC,CAAAA,CAAAA,CAAqB,CAAE,SAAA,CAAW,CAAE,CACpCC,CAAAA,CAAAA,CAAqB,KAGrBC,CAAAA,CAAAA,CAAiCC,KAE/BC,CAAAA,CAAAA,CAAO,IAAM,CACjBV,EAAgB,UAAW,CAAA,EAAA,CACzB,YACAQ,CAAAA,CAAAA,CAAe,WAAW,KAC5B,CAAA,CACAR,CAAgB,CAAA,UAAA,CAAW,GACzB,YACAQ,CAAAA,CAAAA,CAAe,UAAW,CAAA,OAC5B,EAEAR,CAAgB,CAAA,UAAA,CAAW,EACzB,CAAA,cAAA,CACAQ,EAAe,UAAW,CAAA,QAC5B,CACAR,CAAAA,CAAAA,CAAgB,WAAW,EACzB,CAAA,cAAA,CACAQ,CAAe,CAAA,UAAA,CAAW,OAC5B,CAEAR,CAAAA,CAAAA,CAAgB,WAAW,EACzB,CAAA,WAAA,CACAQ,EAAe,UAAW,CAAA,UAC5B,CACAR,CAAAA,CAAAA,CAAgB,WAAW,EACzB,CAAA,WAAA,CACAQ,CAAe,CAAA,UAAA,CAAW,OAC5B,EACF,CAAA,CAEMG,CAAQ,CAAA,SAA2B,CACnCJ,CAEJK,GAAAA,GAAAA,CAAwB,OAAQ,CAAA,UAAU,EAE1C,MAAMJ,CAAAA,CAAe,KAAM,EAAA,CAC3BE,GACAH,CAAAA,CAAAA,CAAY,IACd,EAAA,CAAA,CAEMM,EAAkB,IAAY,CAClCP,CAAS,CAAA,SAAA,CAAYH,EAAM,QAAS,EAAA,CAEhC,CAAC,KAAMG,CAAAA,CAAAA,CAAS,SAAS,CAAKA,EAAAA,CAAAA,CAAS,SAAc,GAAA,MAAA,GACvDD,EAAM,SAAYC,CAAAA,CAAAA,CAAS,SAE/B,EAAA,CAAA,CAEMQ,EAAS,IAAM,CACnBD,CAAgB,EAAA,CAEhBL,EAAe,MAAOH,CAAAA,CAAAA,CAAM,SAAa,EAAA,CAAC,EAC5C,CAEMU,CAUN,OAAO,CACL,KAAOJ,CAAAA,CAAAA,CACP,OAAQG,CACR,CAAA,OAAA,CARc,IAAM,CACpBF,IAAwB,SAAU,CAAA,UAAU,EAE9C,CAMA,CACF","file":"chunk-X5LYWVN2.js","sourcesContent":["import { getGlobalContext } from \"managers/globalContext\";\nimport { Clock } from \"three\";\nimport { getThreeJsContext } from \"core/game_engine/game_context\";\nimport {\n  createRoomController,\n  RoomController,\n} from \"./controller/room_controller\";\nimport { processPipelineDebugger } from \"debug/debugger\";\n\nexport interface Gameplay {\n  mount: () => Promise<void>;\n  update: () => void;\n  unmount: () => void;\n}\n\ninterface State {\n  deltaTime: number;\n}\n\ninterface TempData {\n  deltaTime: number;\n}\n\nexport const createGameplay = (): Gameplay => {\n  //Global properties\n  const { globalState, eventBusManager } = getGlobalContext();\n  const context = getThreeJsContext();\n  const clock: Clock = new Clock();\n\n  //Re usable state (no re-allocation)\n  let state: State = { deltaTime: 0 };\n  let tempData: TempData = { deltaTime: 0 };\n  let isMounted: boolean = false;\n\n  //Controllers\n  let roomController: RoomController = createRoomController();\n\n  const bind = () => {\n    eventBusManager.displayBus.on(\n      \"about:show\",\n      roomController.switchRoom[\"about\"]\n    );\n    eventBusManager.displayBus.on(\n      \"about:hide\",\n      roomController.switchRoom[\"default\"]\n    );\n\n    eventBusManager.displayBus.on(\n      \"project:show\",\n      roomController.switchRoom[\"projects\"]\n    );\n    eventBusManager.displayBus.on(\n      \"project:hide\",\n      roomController.switchRoom[\"default\"]\n    );\n\n    eventBusManager.displayBus.on(\n      \"home:show\",\n      roomController.switchRoom[\"navigation\"]\n    );\n    eventBusManager.displayBus.on(\n      \"home:hide\",\n      roomController.switchRoom[\"default\"]\n    );\n  };\n\n  const mount = async (): Promise<void> => {\n    if (isMounted) return;\n\n    processPipelineDebugger.onMount(\"gameplay\");\n\n    await roomController.mount();\n    bind();\n    isMounted = true;\n  };\n\n  const updateDeltaTime = (): void => {\n    tempData.deltaTime = clock.getDelta();\n\n    if (!isNaN(tempData.deltaTime) && tempData.deltaTime !== undefined) {\n      state.deltaTime = tempData.deltaTime;\n    }\n  };\n\n  const update = () => {\n    updateDeltaTime();\n\n    roomController.update(state.deltaTime ?? 0);\n  };\n\n  const unbind = () => {\n    // eventBusManager.displayBus.off(\"about:show\", rooms.navigation.setActive);\n    // eventBusManager.displayBus.off(\"about:hide\", rooms.navigation.setDeactive);\n  };\n\n  const unmount = () => {\n    processPipelineDebugger.onUnmount(\"gameplay\");\n    unbind();\n  };\n\n  return {\n    mount: mount,\n    update: update,\n    unmount: unmount,\n  };\n};\n"]}