{"version":3,"sources":["../src/components/gallery/gallery.ts"],"names":["template","ProjectGallery","data","clone","eventBusManager","_","projects","fragment","cardProps","card"],"mappings":"AAKA,IAAMA,EAAW,QAAS,CAAA,aAAA,CAAc,UAAU,CAAA,CAClDA,EAAS,SAAY,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAA,KA0BRC,CAAN,CAAA,cAA6B,WAAY,CAO9C,aAAc,CACZ,KAAA,EAuBF,CAAA,IAAA,CAAQ,OAAUC,CAAc,EAAA,IAAA,CAAK,aAAcA,CAAAA,CAAI,EACvD,IAAQ,CAAA,MAAA,CAAUA,CAAc,EAAA,IAAA,CAAK,cAAcA,CAAI,CAAA,CAvBrD,IAAK,CAAA,IAAA,CAAO,KAAK,YAAa,CAAA,CAAE,IAAM,CAAA,MAAO,CAAC,CAC9C,CAAA,IAAMC,CAAQH,CAAAA,CAAAA,CAAS,QAAQ,SAAU,CAAA,IAAI,CAC7C,CAAA,IAAA,CAAK,KAAK,WAAYG,CAAAA,CAAK,CAE3B,CAAA,IAAA,CAAK,QAAU,IAAK,CAAA,IAAA,CAAK,cAAe,CAAA,SAAS,EACjD,IAAK,CAAA,SAAA,CAAY,IAAK,CAAA,IAAA,CAAK,eAAe,oBAAoB,EAChE,CAEA,IAAI,gBAAgBC,CAAkC,CAAA,CACpD,IAAK,CAAA,YAAA,CAAeA,EAAgB,QACtC,CAEA,aAAcC,CAAAA,CAAAA,CAAQ,CACpB,OAAQ,CAAA,GAAA,CAAI,gBAAgB,CAC5B,CAAA,IAAA,CAAK,SAAS,SAAU,CAAA,MAAA,CAAO,QAAQ,EACzC,CAEA,aAAcA,CAAAA,CAAAA,CAAQ,CACpB,OAAA,CAAQ,IAAI,gBAAgB,CAAA,CAC5B,IAAK,CAAA,OAAA,EAAS,UAAU,GAAI,CAAA,QAAQ,EACtC,CAKQ,YAAYC,CAA+B,CAAA,CACjD,GAAI,CAAC,KAAK,SAAW,CAAA,OACrB,IAAMC,CAAAA,CAAW,SAAS,sBAAuB,EAAA,CACjDD,CAAS,CAAA,OAAA,CAASE,GAAc,CAC9B,IAAMC,EAAoB,QAAS,CAAA,aAAA,CACjC,cACF,CACAA,CAAAA,CAAAA,CAAK,OAAQD,CAAAA,CAAS,EACtBD,CAAS,CAAA,WAAA,CAAYE,CAAI,EAC3B,CAAC,CAED,CAAA,IAAA,CAAK,SAAU,CAAA,WAAA,CAAYF,CAAQ,CAE9B,CAAA,IAAA,CAAK,YAEV,GAAA,IAAA,CAAK,aAAa,EAAG,CAAA,qBAAA,CAAuB,IAAK,CAAA,MAAM,EACvD,IAAK,CAAA,YAAA,CAAa,EAAG,CAAA,qBAAA,CAAuB,KAAK,MAAM,CAAA,EACzD,CAEA,IAAI,WAAWL,CAAmB,CAAA,CAC3BA,EAAK,OAGR,CAAA,IAAA,CAAK,KAAK,SAAY,CAAA;AAAA,aAAA,EACbA,EAAK,OAAO,CAAA;AAAA,QAHrB,CAAA,CAAA,IAAA,CAAK,WAAYA,CAAAA,CAAAA,CAAK,IAAI,EAM9B,CAEA,iBAAA,EAAoB,EAEpB,oBAAuB,EAAA,CAChB,IAAK,CAAA,YAAA,GAEV,IAAK,CAAA,YAAA,CAAa,GAAI,CAAA,qBAAA,CAAuB,IAAK,CAAA,MAAM,CACxD,CAAA,IAAA,CAAK,YAAa,CAAA,GAAA,CAAI,qBAAuB,CAAA,IAAA,CAAK,MAAM,CAAA,EAC1D,CACF","file":"chunk-NRLCKWSB.js","sourcesContent":["import { EventBus } from \"@events/eventBus\";\nimport { EventBusManager } from \"@events/EventBusManager\";\nimport { ViewEvents } from \"types/eventType\";\nimport { CardMarshall, ProjectCard } from \"./card\";\n\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = `\n    <link rel=\"stylesheet\" href=\"/style/gallery.css\">\n    <style>\n      .hidden {\n        display:none;\n        opacity: 0;\n        pointer-events: none;\n      }\n    </style>\n    <div class=\"gallery hidden\" id=\"gallery\">\n      <div class=\"gallery--container\" id=\"gallery--container\">\n\n      </div>\n    </div>\n`;\n\nexport type ProjectData =\n  | {\n      list: Array<CardMarshall>;\n      isError: false;\n    }\n  | {\n      isError: true;\n      message: string;\n    };\n\nexport class ProjectGallery extends HTMLElement {\n  root: ShadowRoot;\n  gallery: HTMLElement | null;\n  container: HTMLElement | null;\n\n  viewEventBus: EventBus<ViewEvents> | undefined;\n\n  constructor() {\n    super();\n    this.root = this.attachShadow({ mode: \"open\" });\n    const clone = template.content.cloneNode(true);\n    this.root.appendChild(clone);\n\n    this.gallery = this.root.getElementById(\"gallery\");\n    this.container = this.root.getElementById(\"gallery--container\");\n  }\n\n  set eventBusManager(eventBusManager: EventBusManager) {\n    this.viewEventBus = eventBusManager.viewBus;\n  }\n\n  showComponent(_: any) {\n    console.log(\"gallery shown \");\n    this.gallery?.classList.remove(\"hidden\");\n  }\n\n  hideComponent(_: any) {\n    console.log(\"gallery hidden\");\n    this.gallery?.classList.add(\"hidden\");\n  }\n\n  private onShow = (data: any) => this.showComponent(data);\n  private onHide = (data: any) => this.hideComponent(data);\n\n  private inflateData(projects: Array<CardMarshall>) {\n    if (!this.container) return;\n    const fragment = document.createDocumentFragment();\n    projects.forEach((cardProps) => {\n      const card: ProjectCard = document.createElement(\n        \"project-card\"\n      ) as ProjectCard;\n      card.setData(cardProps);\n      fragment.appendChild(card);\n    });\n\n    this.container.appendChild(fragment);\n\n    if (!this.viewEventBus) return;\n\n    this.viewEventBus.on(\"project-screen:show\", this.onShow);\n    this.viewEventBus.on(\"project-screen:hide\", this.onHide);\n  }\n\n  set updateData(data: ProjectData) {\n    if (!data.isError) {\n      this.inflateData(data.list);\n    } else {\n      this.root.innerHTML = `\n          <p>${data.message}</p>\n        `;\n    }\n  }\n\n  connectedCallback() {}\n\n  disconnectedCallback() {\n    if (!this.viewEventBus) return;\n\n    this.viewEventBus.off(\"project-screen:show\", this.onShow);\n    this.viewEventBus.off(\"project-screen:hide\", this.onHide);\n  }\n}\n"]}