{"version":3,"sources":["../src/graphics/mechanics/controllers/plugins/mouse.ts"],"names":["createMouseController","props","state","handleMouse","e","sideways","up_down"],"mappings":"AAyBO,IAAMA,EACXC,CACoB,EAAA,CACpB,IAAIC,CAAe,CAAA,CAKjB,QAAU,CAAA,CACR,MAAO,CACP,CAAA,GAAA,CAAK,CACP,CACF,CAAA,CAEMC,EAAeC,CAAkB,EAAA,CAOrCF,EAAM,QAAS,CAAA,KAAA,EAASE,EAAE,SAC1BF,CAAAA,CAAAA,CAAM,SAAS,GAAOE,EAAAA,CAAAA,CAAE,UAC1B,CAuBA,CAAA,OAAO,CACL,KAtBkB,CAAA,IAAM,CACxB,QAAS,CAAA,gBAAA,CAAiB,YAAaD,CAAW,EACpD,CAqBE,CAAA,OAAA,CAnBoB,IAAM,CAC1B,QAAA,CAAS,oBAAoB,WAAaA,CAAAA,CAAW,EACvD,CAkBE,CAAA,WAAA,CAhBkB,IAAM,CACxB,IAAME,EAAWH,CAAM,CAAA,QAAA,CAAS,IAC1BI,CAAUJ,CAAAA,CAAAA,CAAM,SAAS,KAE/B,CAAA,OAAAA,EAAM,QAAS,CAAA,KAAA,CAAQ,EACvBA,CAAM,CAAA,QAAA,CAAS,IAAM,CAEd,CAAA,CACL,IAAK,CAACD,CAAAA,CAAM,YAAY,GAAMI,CAAAA,CAAAA,CAC9B,MAAOJ,CAAM,CAAA,WAAA,CAAY,MAAQK,CACnC,CACF,CAMA,CACF","file":"chunk-6GP3ULQR.js","sourcesContent":["import { ControllerPlugin } from \"../plugins\";\n\nexport interface MouseControllerProps {\n  sensitivity: { pitch: number; yaw: number };\n}\n\nexport interface MouseController extends ControllerPlugin {\n  getRotation: () => {\n    pitch: number;\n    yaw: number;\n  };\n}\n\ninterface State {\n  mouse: {\n    lastX: number;\n    lastY: number;\n  };\n\n  rotation: {\n    pitch: number;\n    yaw: number;\n  };\n}\n\nexport const createMouseController = (\n  props: MouseControllerProps\n): MouseController => {\n  let state: State = {\n    mouse: {\n      lastX: 0,\n      lastY: 0,\n    },\n    rotation: {\n      pitch: 0,\n      yaw: 0,\n    },\n  };\n\n  const handleMouse = (e: MouseEvent) => {\n    // state.rotation.pitch = e.clientY - state.mouse.lastY;\n    // state.rotation.yaw = e.clientX - state.mouse.lastX;\n\n    // state.mouse.lastX = e.clientX;\n    // state.mouse.lastY = e.clientY;\n\n    state.rotation.pitch += e.movementY;\n    state.rotation.yaw += e.movementX;\n  };\n\n  const mountEvents = () => {\n    document.addEventListener(\"mousemove\", handleMouse);\n  };\n\n  const unmountEvents = () => {\n    document.removeEventListener(\"mousemove\", handleMouse);\n  };\n\n  const getRotation = () => {\n    const sideways = state.rotation.yaw;\n    const up_down = state.rotation.pitch;\n\n    state.rotation.pitch = 0;\n    state.rotation.yaw = 0;\n\n    return {\n      yaw: -props.sensitivity.yaw * sideways,\n      pitch: props.sensitivity.pitch * up_down,\n    };\n  };\n\n  return {\n    mount: mountEvents,\n    unmount: unmountEvents,\n    getRotation: getRotation,\n  };\n};\n"]}