{"version":3,"sources":["../src/gameplay/about/ground.ts"],"names":["createGround","props","ground","getThreeJsContext","globalStorage","getGlobalContext","processPipelineDebugger"],"mappings":"mHAkBO,IAAMA,EAAgBC,CAA+B,EAAA,KACtDC,CAAyB,CAAA,IAAA,CACRC,CAAkB,EAAA,KACnC,CAAE,aAAA,CAAAC,CAAc,CAAIC,CAAAA,CAAAA,GA4BxB,OAAO,CACL,MA3BY,IAAM,CAMlB,GALAH,CAAAA,CAASE,EACN,UAAWH,CAAAA,CAAAA,CAAM,SAAS,CAC1B,CAAA,QAAA,CAASA,EAAM,SAAS,CAAA,EACvB,OAAO,eAAgBA,CAAAA,CAAAA,CAAM,QAAQ,CAErC,CAAA,CAACC,EAAQ,CACX,OAAA,CAAQ,MAAM,CAAsCD,mCAAAA,EAAAA,CAAAA,CAAM,QAAQ,CAAA,CAAE,EACpE,MACF,CACAC,EAAO,QAAYA,CAAAA,CAAAA,CAAO,SAAsB,KAAM,EAAA,CACtDA,CAAO,CAAA,aAAA,CAAgB,KAEtBA,CAAO,CAAA,QAAA,CAAsB,YAAc,IAC3CA,CAAAA,CAAAA,CAAO,SAAkC,OAAU,CAAA,GAAA,CACnDA,CAAO,CAAA,QAAA,CAAkC,YAAc,IAExDI,CAAAA,GAAAA,CAAwB,QAAQ,cAAc,EAChD,EAUE,QARe,CAAA,IAAM,EASrB,CAAA,UAAA,CAPiB,IAAM,EAAC,CAQxB,QANc,IAAM,EAOtB,CACF","file":"chunk-NURIL6WF.js","sourcesContent":["import { getGlobalContext } from \"@managers/globalContext\";\nimport { Nullable } from \"@utils/types/lifecycle\";\nimport { getThreeJsContext } from \"core/game_engine/game_context\";\nimport { processPipelineDebugger } from \"debug/debugger\";\nimport { Material, Mesh, MeshStandardMaterial, PlaneGeometry } from \"three\";\n\nexport interface GroundProps {\n  groundId: string;\n  storageId: string;\n}\n\nexport interface Ground {\n  mount: () => void;\n  actiavte: () => void;\n  deactivate: () => void;\n  unmount: () => void;\n}\n\nexport const createGround = (props: GroundProps): Ground => {\n  let ground: Nullable<Mesh> = null;\n  let contextManager = getThreeJsContext();\n  let { globalStorage } = getGlobalContext();\n\n  const mount = () => {\n    ground = globalStorage\n      .getStorage(props.storageId)\n      .retrieve(props.storageId)\n      ?.groups.getObjectByName(props.groundId) as Mesh;\n\n    if (!ground) {\n      console.error(`Cant get ground mesh from the id : ${props.groundId}`);\n      return;\n    }\n    ground.material = (ground.material as Material).clone();\n    ground.receiveShadow = true;\n\n    (ground.material as Material).needsUpdate = true;\n    (ground.material as MeshStandardMaterial).opacity = 0.15;\n    (ground.material as MeshStandardMaterial).transparent = true;\n\n    processPipelineDebugger.onMount(\"about-ground\");\n  };\n\n  const activate = () => {};\n\n  const deactivate = () => {};\n\n  const unmount = () => {};\n\n  return {\n    mount: mount,\n    actiavte: activate,\n    deactivate: deactivate,\n    unmount: unmount,\n  };\n};\n"]}