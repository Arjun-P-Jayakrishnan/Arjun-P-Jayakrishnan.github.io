{"version":3,"sources":["../src/gameplay/rooms/about/room.ts"],"names":["createAboutRoom","ground","player","serviceRegistry","getServiceRegistry","storage","logger","context","scene","camera","orbit","renderer","components","createCameraManager","createPlayer","createGround","createLighting","group","deltaTime"],"mappings":"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","file":"chunk-JP6MFGVN.js","sourcesContent":["import { Group, Object3DEventMap } from \"three\";\n\nimport { getServiceRegistry } from \"engine/core/ServiceRegistry\";\nimport { ModelIdentifier, Room } from \"types/rooms.types\";\nimport { CameraManager, createCameraManager } from \"./camera\";\nimport { createGround, Ground } from \"./ground\";\nimport { createLighting, Lighting } from \"./lights\";\nimport { createPlayer, Player } from \"./player\";\n\nexport interface AboutRoomProps {\n  player: ModelIdentifier;\n  ground: ModelIdentifier;\n}\n\ninterface Components {\n  camera: CameraManager;\n  player: Player;\n  ground: Ground;\n  lighting: Lighting;\n}\n\nexport const createAboutRoom = ({ ground, player }: AboutRoomProps): Room => {\n  //====References====\n  const serviceRegistry = getServiceRegistry();\n  const [storage, logger, context] = [\n    serviceRegistry.get(\"GlobalStorageManager\"),\n    serviceRegistry.get(\"Logger\"),\n    serviceRegistry.get(\"ThreeJSContextManager\"),\n  ];\n\n  const { scene, camera, orbit, renderer } = {\n    scene: context.get(\"scene\")!,\n    camera: context.get(\"camera\")!,\n    orbit: context.get(\"orbit\")!,\n    renderer: context.get(\"renderer\")!,\n  };\n\n  //===Local===\n  const components: Components = {\n    camera: createCameraManager({ camera: camera, scene: scene }),\n    player: createPlayer({ logger, reference: player, scene, storage }),\n    ground: createGround({ logger, reference: ground, storage }),\n    lighting: createLighting({ renderer, scene }),\n  };\n\n  let group: Nullable<Group<Object3DEventMap>> = null;\n\n  const mount = () => {\n    logger.onMount({ origin: \"About-Room\" });\n    components.ground.mount();\n    components.player.mount();\n    components.camera.mount();\n    components.lighting.mount();\n    group =\n      storage.getStorage(\"model\").retrieve(ground.storageId)?.groups ?? null;\n  };\n\n  const activate = () => {\n    if (group) group.visible = true;\n\n    orbit.enabled = false;\n    components.camera.activate();\n    components.ground.actiavte();\n    components.lighting.activate();\n    components.player.activate();\n    logger.onActivate({ origin: \"About-Room\" });\n  };\n\n  const update = (deltaTime: number) => {\n    //components.camera.update(deltaTime);\n  };\n\n  const deactivate = () => {\n    if (group) group.visible = false;\n\n    components.camera.deactivate();\n    components.ground.deactivate();\n    components.lighting.deactivate();\n    components.player.deactiavte();\n    logger.onDeactivate({ origin: \"About-Room\" });\n  };\n\n  const unmount = () => {\n    components.camera.unmount();\n    components.ground.unmount();\n    components.lighting.unmount();\n    components.player.unmount();\n    logger.onUnmount({ origin: \"About-Room\" });\n  };\n\n  return {\n    mount: mount,\n    setActive: activate,\n    update: update,\n    setDeactive: deactivate,\n    unmount: unmount,\n    isLoaded: false,\n  };\n};\n"]}