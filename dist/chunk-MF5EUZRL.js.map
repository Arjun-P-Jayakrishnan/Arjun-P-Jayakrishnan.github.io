{"version":3,"sources":["../src/components/threejs/scene_inspector.ts"],"sourcesContent":["import { EventBus } from \"@utils/event_management/eventBus\";\r\nimport { EventBusManager } from \"@utils/event_management/eventBusFactory\";\r\nimport { DebugEvents } from \"@utils/event_management/eventType\";\r\nimport { Material, Object3D, Scene } from \"three\";\r\n\r\nconst template = document.createElement(\"template\");\r\ntemplate.innerHTML = `\r\n    <link rel=\"stylesheet\" href=\"/style/scene_inspector.css\">\r\n    <div class=\"inspector-wrapper\">\r\n\r\n      <div class=\"resizer\"></div>\r\n    \r\n      <div class=\"scene-inspector hidden\">\r\n        <div class=\"inspector-header\">\r\n          <span class=\"title\">Scene Inspector</span>\r\n          <button class=\"close-btn\"> ✕ </button>\r\n        </div>\r\n\r\n        <div class=\"inspector-content\">\r\n          <ul class=\"tree-view\">\r\n\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      \r\n    </div>\r\n`;\r\n\r\n//\r\n\r\ninterface State {\r\n  isMenuHidden: boolean;\r\n  isResizing: boolean;\r\n}\r\n\r\ninterface TreeNode {\r\n  id: string;\r\n  label: string;\r\n  //  type: \"mesh\" | \"camera\" | \"light\" | \"animation\" | \"sprite\" | \"group\";\r\n  type: string;\r\n  nodes: TreeNode[];\r\n}\r\n\r\ninterface TreeView {\r\n  Objects: TreeNode[];\r\n  Materials: TreeNode[];\r\n}\r\n\r\nexport class SceneInspector extends HTMLElement {\r\n  root: ShadowRoot;\r\n  eventBus: EventBus<DebugEvents> | undefined;\r\n  state: State;\r\n  element: Element;\r\n  treeView: TreeView;\r\n\r\n  constructor() {\r\n    super();\r\n    this.root = this.attachShadow({ mode: \"open\" });\r\n    const clone = template.content.cloneNode(true);\r\n\r\n    this.root.appendChild(clone);\r\n    this.state = {\r\n      isMenuHidden: true,\r\n      isResizing: false,\r\n    };\r\n\r\n    this.element = this.root.querySelector(\".scene-inspector\")!;\r\n\r\n    this.treeView = {\r\n      Objects: [],\r\n      Materials: [],\r\n    };\r\n\r\n    this.handleResize();\r\n  }\r\n\r\n  set eventBusManager(eventBusManager: EventBusManager) {\r\n    console.log(\"event bus manager done for scene inspect\");\r\n    this.eventBus = eventBusManager.debugBus;\r\n    this.eventBus?.on(\"debug:inspector\", (data) => {\r\n      this.handleShowHideEvent(data);\r\n    });\r\n  }\r\n\r\n  handleShowHideEvent(data: DebugEvents) {\r\n    this.state.isMenuHidden = !this.state.isMenuHidden;\r\n\r\n    if (this.state.isMenuHidden) {\r\n      this.element.classList.add(\"hidden\");\r\n    } else {\r\n      this.element.classList.remove(\"hidden\");\r\n      if (data.scene != null && data.scene !== undefined) {\r\n        this.renderTree(data.scene);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleResize() {\r\n    const resizer: HTMLElement = this.root.querySelector(\".resizer\")!;\r\n    const panel: HTMLElement = this.root.querySelector(\".scene-inspector\")!;\r\n    console.log(\"resizer\", resizer);\r\n    resizer.addEventListener(\"mousedown\", (e) => {\r\n      this.state.isResizing = true;\r\n      document.body.style.cursor = \"ew-resize\";\r\n      e.preventDefault();\r\n      console.log(\"mousedown resizer\");\r\n    });\r\n\r\n    window.addEventListener(\"mousemove\", (e) => {\r\n      console.log(\"mousemove\", this.state.isResizing);\r\n      if (!this.state.isResizing) return;\r\n\r\n      const newWidth = window.innerWidth - (e as MouseEvent).clientX;\r\n\r\n      panel.style.width = `${Math.min(Math.max(newWidth, 200), 600)}px`;\r\n\r\n      console.log(\"mousemove\", newWidth);\r\n    });\r\n\r\n    window.addEventListener(\"mouseup\", (e) => {\r\n      console.log(\"mouse up\", this.state.isResizing);\r\n      if (this.state.isResizing) {\r\n        this.state.isResizing = false;\r\n        document.body.style.cursor = \"\";\r\n      }\r\n    });\r\n  }\r\n\r\n  toggleCloseButton() {\r\n    this.state.isMenuHidden = true;\r\n\r\n    this.element.classList.add(\"hidden\");\r\n  }\r\n\r\n  private collectSceneData(scene: Scene): TreeView {\r\n    const objects: TreeNode[] = [];\r\n    const materialsMap: Map<string, TreeNode> = new Map();\r\n\r\n    const traverse = (object: Object3D): TreeNode => {\r\n      const node: TreeNode = {\r\n        id: object.uuid,\r\n        label: object.name == \"\" ? object.type : object.name,\r\n        type: object.type,\r\n        nodes: [],\r\n      };\r\n\r\n      object.children.forEach((child) => {\r\n        node.nodes.push(traverse(child));\r\n      });\r\n\r\n      if (\"material\" in object && object.material) {\r\n        const mats: Material[] = Array.isArray(object.material)\r\n          ? object.material\r\n          : [object.material];\r\n        mats.forEach((mat) => {\r\n          /**\r\n           * Ensure that a material is registered only once to avoid duplicate entry\r\n           */\r\n          if (!materialsMap.has(mat.uuid)) {\r\n            materialsMap.set(mat.uuid, {\r\n              id: mat.uuid,\r\n              label: mat.name == \"\" ? mat.type : mat.name,\r\n              type: \"material\",\r\n              nodes: [],\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      return node;\r\n    };\r\n\r\n    scene.children.forEach((child) => {\r\n      objects.push(traverse(child));\r\n    });\r\n\r\n    return {\r\n      Objects: objects,\r\n      Materials: Array.from(materialsMap.values()),\r\n    };\r\n  }\r\n\r\n  protected renderTree(scene: Scene) {\r\n    this.treeView = this.collectSceneData(scene);\r\n\r\n    const treeNode = this.root.querySelector(\".tree-view\")!;\r\n    treeNode.innerHTML = ``;\r\n\r\n    console.log(this.treeView);\r\n\r\n    this.addCategory(\"Objects\", treeNode, this.treeView.Objects);\r\n    this.addCategory(\"Materials\", treeNode, this.treeView.Materials);\r\n  }\r\n\r\n  private addCategory(label: string, treeRoot: Element, nodes: TreeNode[]) {\r\n    const li = document.createElement(\"li\");\r\n    li.classList.add(\"category\", \"collapsed\");\r\n\r\n    const header = document.createElement(\"div\");\r\n    header.classList.add(\"category-toggle\");\r\n    header.textContent = `⮞ ${label}`;\r\n\r\n    header.addEventListener(\"click\", (e) => {\r\n      li.classList.toggle(\"collapsed\");\r\n      const isCollapsed = li.classList.contains(\"collapsed\");\r\n      header.textContent = isCollapsed ? `⮞ ${label}` : `▼ ${label}`;\r\n    });\r\n\r\n    const nodeList = document.createElement(\"ul\");\r\n    nodeList.classList.add(\"category-content\");\r\n    nodes.forEach((node) => {\r\n      nodeList.appendChild(this.renderTreeNode(node));\r\n    });\r\n\r\n    li.appendChild(header);\r\n    li.appendChild(nodeList);\r\n    treeRoot.appendChild(li);\r\n  }\r\n\r\n  private renderTreeNode(node: TreeNode): HTMLElement {\r\n    const nodeRoot = document.createElement(\"li\");\r\n    nodeRoot.classList.add(\"tree-node\");\r\n\r\n    const label = document.createElement(\"div\");\r\n    label.classList.add(\"node-label\");\r\n    label.textContent = `${node.label} (${node.type})`;\r\n\r\n    nodeRoot.appendChild(label);\r\n\r\n    if (node.nodes.length > 0) {\r\n      nodeRoot.classList.add(\"collapsed\");\r\n\r\n      const ul = document.createElement(\"ul\");\r\n\r\n      node.nodes.forEach((node) => {\r\n        ul.appendChild(this.renderTreeNode(node));\r\n      });\r\n\r\n      label.addEventListener(\"click\", () => {\r\n        nodeRoot.classList.toggle(\"collapsed\");\r\n      });\r\n\r\n      nodeRoot.appendChild(ul);\r\n    }\r\n\r\n    return nodeRoot;\r\n  }\r\n\r\n  connectedCallback() {\r\n    const closeButton = this.root.querySelector(\".close-btn\")!;\r\n\r\n    closeButton.addEventListener(\"click\", () => {\r\n      this.toggleCloseButton();\r\n    });\r\n  }\r\n\r\n  disconnectedCallback() {}\r\n}\r\n"],"mappings":"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","names":["node"]}