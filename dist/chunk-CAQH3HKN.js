import {a as a$2}from'./chunk-7A62DR63.js';import {a as a$1}from'./chunk-VNWSKNSX.js';import {a}from'./chunk-Y47M3QNG.js';import {b as b$1}from'./chunk-37KH4TOK.js';import {LoadingManager}from'three';var b=p=>{let{scene:s,renderer:u,loaderEventBus:o,globalState:d}=p,r=new LoadingManager,n=[],m=()=>{r.onStart=(e,t,a)=>{o.emit({type:"load:start",url:e,loaded:t,total:a}),d.setState({loading:{active:true,progress:0}});},r.onProgress=(e,t,a)=>{o.emit({type:"load:progress",url:e,loaded:t,total:a}),d.setState({loading:{active:true,progress:t/a}});},r.onLoad=()=>{o.emit({type:"load:complete"});},r.onError=e=>{o.emit({type:"load:error",url:e});};},f=(e,t,a$3)=>{e.length>0&&n.push(a({assets:e,scene:s,loadingManager:r,loadingEventBus:o})),a$3!=null&&n.push(a$1({asset:a$3,scene:s,renderer:u,loadingManager:r,loadingEventBus:o})),t.length>0&&n.push(a$2({assets:t,scene:s,loadingManager:r,loadingEventBus:o}));};return {configure:()=>{m();},load:async e=>{b$1.onInit(`loading the models ${JSON.stringify(e)}`);let t=[];return f(e.meshesMetaData,e.animationsMetaData,e.hdrMetaData),n.forEach(a=>{t.push(a.load());}),await Promise.allSettled(t),n=[],b$1.onInit("loaded models i guess"),{success:[],error:[]}},dispose:()=>{n.forEach(e=>{e.dispose?.();});}}};export{b as a};//# sourceMappingURL=chunk-CAQH3HKN.js.map
//# sourceMappingURL=chunk-CAQH3HKN.js.map