{"version":3,"sources":["../src/graphics/gameplay/controllers/plugins/keyboard.ts"],"sourcesContent":["import { ControllerPlugin } from \"../plugins\";\n\n\nexport interface KeyboardController extends ControllerPlugin {\n  getPressedKeys: () => string[];\n  isKeyPressed: (key: string) => boolean;\n}\n\nexport const createKeyboardController = (): KeyboardController => {\n  const pressedKeys = new Set<string>();\n\n  const normalizedKey = (key: string) => key.toLowerCase();\n\n  const _handleKeyUp = (e: KeyboardEvent) => {\n    pressedKeys.delete(normalizedKey(e.key));\n  };\n\n  const _handleKeyDown = (e: KeyboardEvent) => {\n    pressedKeys.add(normalizedKey(e.key));\n  };\n\n  const mountEvents = () => {\n    window.addEventListener(\"keyup\", _handleKeyUp);\n    window.addEventListener(\"keydown\", _handleKeyDown);\n  };\n\n  const unmountEvents = () => {\n    window.removeEventListener(\"keyup\", _handleKeyUp);\n    window.removeEventListener(\"keydown\", _handleKeyDown);\n    pressedKeys.clear();\n  };\n\n  const getPressedKeys = (): string[] => {\n    return Array.from(pressedKeys);\n  };\n\n  const isKeyPressed = (key: string) => {\n    return pressedKeys.has(normalizedKey(key));\n  };\n\n  return {\n    mount: mountEvents,\n    unmount: unmountEvents,\n    getPressedKeys: getPressedKeys,\n    isKeyPressed: isKeyPressed,\n  };\n};\n"],"mappings":"AAQO,IAAMA,EAA2B,IAA0B,CAChE,IAAMC,EAAc,IAAI,IAElBC,EAAiBC,GAAgBA,EAAI,YAAY,EAEjDC,EAAgB,GAAqB,CACzCH,EAAY,OAAOC,EAAc,EAAE,GAAG,CAAC,CACzC,EAEMG,EAAkB,GAAqB,CAC3CJ,EAAY,IAAIC,EAAc,EAAE,GAAG,CAAC,CACtC,EAqBA,MAAO,CACL,MApBkB,IAAM,CACxB,OAAO,iBAAiB,QAASE,CAAY,EAC7C,OAAO,iBAAiB,UAAWC,CAAc,CACnD,EAkBE,QAhBoB,IAAM,CAC1B,OAAO,oBAAoB,QAASD,CAAY,EAChD,OAAO,oBAAoB,UAAWC,CAAc,EACpDJ,EAAY,MAAM,CACpB,EAaE,eAXqB,IACd,MAAM,KAAKA,CAAW,EAW7B,aARoBE,GACbF,EAAY,IAAIC,EAAcC,CAAG,CAAC,CAQ3C,CACF","names":["createKeyboardController","pressedKeys","normalizedKey","key","_handleKeyUp","_handleKeyDown"]}