{"version":3,"sources":["../src/components/threejs/scene_inspector.ts"],"sourcesContent":["import { EventBus } from \"@utils/event_management/eventBus\";\nimport { EventBusManager } from \"@utils/event_management/eventBusFactory\";\nimport { DebugEvents } from \"@utils/event_management/eventType\";\nimport { Material, Object3D, Scene } from \"three\";\n\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = `\n    <link rel=\"stylesheet\" href=\"/style/scene_inspector.css\">\n    <div class=\"inspector-wrapper\">\n\n      <div class=\"resizer\"></div>\n    \n      <div class=\"scene-inspector hidden\">\n        <div class=\"inspector-header\">\n          <span class=\"title\">Scene Inspector</span>\n          <button class=\"close-btn\"> ✕ </button>\n        </div>\n\n        <div class=\"inspector-content\">\n          <ul class=\"tree-view\">\n\n          </ul>\n        </div>\n      </div>\n\n      \n    </div>\n`;\n\n//\n\ninterface State {\n  isMenuHidden: boolean;\n  isResizing: boolean;\n}\n\ninterface TreeNode {\n  id: string;\n  label: string;\n  //  type: \"mesh\" | \"camera\" | \"light\" | \"animation\" | \"sprite\" | \"group\";\n  type: string;\n  nodes: TreeNode[];\n}\n\ninterface TreeView {\n  Objects: TreeNode[];\n  Materials: TreeNode[];\n}\n\nexport class SceneInspector extends HTMLElement {\n  root: ShadowRoot;\n  eventBus: EventBus<DebugEvents> | undefined;\n  state: State;\n  element: Element;\n  treeView: TreeView;\n\n  constructor() {\n    super();\n    this.root = this.attachShadow({ mode: \"open\" });\n    const clone = template.content.cloneNode(true);\n\n    this.root.appendChild(clone);\n    this.state = {\n      isMenuHidden: true,\n      isResizing: false,\n    };\n\n    this.element = this.root.querySelector(\".scene-inspector\")!;\n\n    this.treeView = {\n      Objects: [],\n      Materials: [],\n    };\n\n    this.handleResize();\n  }\n\n  set eventBusManager(eventBusManager: EventBusManager) {\n    this.eventBus = eventBusManager.debugBus;\n    this.eventBus?.on(\"debug:inspector\", (data) => {\n      this.handleShowHideEvent(data);\n    });\n  }\n\n  handleShowHideEvent(data: DebugEvents) {\n    this.state.isMenuHidden = !this.state.isMenuHidden;\n\n    if (this.state.isMenuHidden) {\n      this.element.classList.add(\"hidden\");\n    } else {\n      this.element.classList.remove(\"hidden\");\n      if (data.scene != null && data.scene !== undefined) {\n        this.renderTree(data.scene);\n      }\n    }\n  }\n\n  handleResize() {\n    const resizer: HTMLElement = this.root.querySelector(\".resizer\")!;\n    const panel: HTMLElement = this.root.querySelector(\".scene-inspector\")!;\n\n    resizer.addEventListener(\"mousedown\", (e) => {\n      this.state.isResizing = true;\n      document.body.style.cursor = \"ew-resize\";\n      e.preventDefault();\n    });\n\n    window.addEventListener(\"mousemove\", (e) => {\n      if (!this.state.isResizing) return;\n\n      const newWidth = window.innerWidth - (e as MouseEvent).clientX;\n\n      panel.style.width = `${Math.min(Math.max(newWidth, 200), 600)}px`;\n    });\n\n    window.addEventListener(\"mouseup\", (e) => {\n      if (this.state.isResizing) {\n        this.state.isResizing = false;\n        document.body.style.cursor = \"\";\n      }\n    });\n  }\n\n  toggleCloseButton() {\n    this.state.isMenuHidden = true;\n\n    this.element.classList.add(\"hidden\");\n  }\n\n  private collectSceneData(scene: Scene): TreeView {\n    const objects: TreeNode[] = [];\n    const materialsMap: Map<string, TreeNode> = new Map();\n\n    const traverse = (object: Object3D): TreeNode => {\n      const node: TreeNode = {\n        id: object.uuid,\n        label: object.name == \"\" ? object.type : object.name,\n        type: object.type,\n        nodes: [],\n      };\n\n      object.children.forEach((child) => {\n        node.nodes.push(traverse(child));\n      });\n\n      if (\"material\" in object && object.material) {\n        const mats: Material[] = Array.isArray(object.material)\n          ? object.material\n          : [object.material];\n        mats.forEach((mat) => {\n          /**\n           * Ensure that a material is registered only once to avoid duplicate entry\n           */\n          if (!materialsMap.has(mat.uuid)) {\n            materialsMap.set(mat.uuid, {\n              id: mat.uuid,\n              label: mat.name == \"\" ? mat.type : mat.name,\n              type: \"material\",\n              nodes: [],\n            });\n          }\n        });\n      }\n\n      return node;\n    };\n\n    scene.children.forEach((child) => {\n      objects.push(traverse(child));\n    });\n\n    return {\n      Objects: objects,\n      Materials: Array.from(materialsMap.values()),\n    };\n  }\n\n  protected renderTree(scene: Scene) {\n    this.treeView = this.collectSceneData(scene);\n\n    const treeNode = this.root.querySelector(\".tree-view\")!;\n    treeNode.innerHTML = ``;\n\n    this.addCategory(\"Objects\", treeNode, this.treeView.Objects);\n    this.addCategory(\"Materials\", treeNode, this.treeView.Materials);\n  }\n\n  private addCategory(label: string, treeRoot: Element, nodes: TreeNode[]) {\n    const li = document.createElement(\"li\");\n    li.classList.add(\"category\", \"collapsed\");\n\n    const header = document.createElement(\"div\");\n    header.classList.add(\"category-toggle\");\n    header.textContent = `⮞ ${label}`;\n\n    header.addEventListener(\"click\", (e) => {\n      li.classList.toggle(\"collapsed\");\n      const isCollapsed = li.classList.contains(\"collapsed\");\n      header.textContent = isCollapsed ? `⮞ ${label}` : `▼ ${label}`;\n    });\n\n    const nodeList = document.createElement(\"ul\");\n    nodeList.classList.add(\"category-content\");\n    nodes.forEach((node) => {\n      nodeList.appendChild(this.renderTreeNode(node));\n    });\n\n    li.appendChild(header);\n    li.appendChild(nodeList);\n    treeRoot.appendChild(li);\n  }\n\n  private renderTreeNode(node: TreeNode): HTMLElement {\n    const nodeRoot = document.createElement(\"li\");\n    nodeRoot.classList.add(\"tree-node\");\n\n    const label = document.createElement(\"div\");\n    label.classList.add(\"node-label\");\n    label.textContent = `${node.label} (${node.type})`;\n\n    nodeRoot.appendChild(label);\n\n    if (node.nodes.length > 0) {\n      nodeRoot.classList.add(\"collapsed\");\n\n      const ul = document.createElement(\"ul\");\n\n      node.nodes.forEach((node) => {\n        ul.appendChild(this.renderTreeNode(node));\n      });\n\n      label.addEventListener(\"click\", () => {\n        nodeRoot.classList.toggle(\"collapsed\");\n      });\n\n      nodeRoot.appendChild(ul);\n    }\n\n    return nodeRoot;\n  }\n\n  connectedCallback() {\n    const closeButton = this.root.querySelector(\".close-btn\")!;\n\n    closeButton.addEventListener(\"click\", () => {\n      this.toggleCloseButton();\n    });\n  }\n\n  disconnectedCallback() {}\n}\n"],"mappings":"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","names":["template","SceneInspector","clone","eventBusManager","data","resizer","panel","e","newWidth","scene","objects","materialsMap","traverse","object","node","child","mat","treeNode","label","treeRoot","nodes","li","header","isCollapsed","nodeList","nodeRoot","ul"]}