{"version":3,"sources":["../src/graphics/main.ts"],"sourcesContent":["import { getGlobalContext } from \"@utils/globalContext\";\r\n\r\nimport { createGameplay, Gameplay } from \"./gameplay/gameplay\";\r\nimport { createThreeJsInstance } from \"./internal/internal\";\r\nimport { createLoader, LoaderOptions } from \"./loader/loader\";\r\n\r\ninterface GameManagerProps {\r\n  loaderOptions: LoaderOptions;\r\n}\r\n\r\nexport interface GameEngineManager {\r\n  mount: () => Promise<void>;\r\n  unmount: () => void;\r\n  update: () => void;\r\n}\r\n\r\nexport const createGameManager = (\r\n  props: GameManagerProps\r\n): GameEngineManager => {\r\n  const { globalState, eventBusManager } = getGlobalContext();\r\n  const engineInstance = createThreeJsInstance({\r\n    camera: {},\r\n    domMountTag: \"game-engine\",\r\n  });\r\n  const { scene, renderer, camera, controls } = engineInstance;\r\n\r\n  const loaderInstance = createLoader(props.loaderOptions, {\r\n    globalState: globalState,\r\n    loaderEventBus: eventBusManager.loadingBus,\r\n    renderer: renderer,\r\n    scene: scene,\r\n  });\r\n\r\n  const gameplay: Gameplay = createGameplay({\r\n    player: {\r\n      ids: {\r\n        rootMesh: \"player\",\r\n      },\r\n    },\r\n  });\r\n\r\n  /**\r\n   * @description handle resize of the canvas\r\n   */\r\n  const _handleResize = () => {\r\n    const width = window.innerWidth;\r\n    const height = window.innerHeight;\r\n\r\n    camera.aspect = width / height;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize(width, height);\r\n  };\r\n\r\n  const _handleDebug = (e: KeyboardEvent) => {\r\n    if (e.key.toLowerCase() === \"u\" && e.shiftKey) {\r\n      e.preventDefault();\r\n      eventBusManager.debugBus.emit({\r\n        type: \"debug:inspector\",\r\n        scene: scene,\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @description creates event listeners for various tasks\r\n   */\r\n  const _mountWindowEventListeners = () => {\r\n    /**\r\n     * Primary initialization to ensure correct aspect ratios\r\n     */\r\n    _handleResize();\r\n\r\n    window.addEventListener(\"resize\", _handleResize);\r\n    window.addEventListener(\"keydown\", _handleDebug);\r\n  };\r\n\r\n  const mount = async () => {\r\n    /**\r\n     * Attach Event Listeners\r\n     */\r\n    _mountWindowEventListeners();\r\n\r\n    /**\r\n     * Initialize the gameplay mechanics and then pass update logic to renderer\r\n     */\r\n    gameplay.mount({\r\n      renderer: renderer,\r\n      scene: scene,\r\n      camera: camera,\r\n      controls: controls,\r\n    });\r\n    engineInstance.register(gameplay.update);\r\n\r\n    /**\r\n     * load all meshes ,objects and animations as per the given props\r\n     */\r\n    loaderInstance.configure();\r\n    await loaderInstance.loadAll();\r\n  };\r\n\r\n  /**\r\n   * @description unmount\r\n   */\r\n  const unmount = () => {\r\n    /**\r\n     * Release all event listeners to prevent memory leaks\r\n     */\r\n    window.removeEventListener(\"resize\", _handleResize);\r\n    window.removeEventListener(\"keydown\", _handleDebug);\r\n  };\r\n\r\n  const update = () => {\r\n    engineInstance.render();\r\n  };\r\n\r\n  return {\r\n    mount: mount,\r\n    unmount: unmount,\r\n    update: update,\r\n  };\r\n};\r\n"],"mappings":";;;;;;;;;;;;;;AAgBO,IAAM,oBAAoB,CAC/B,UACsB;AACtB,QAAM,EAAE,aAAa,gBAAgB,IAAI,iBAAiB;AAC1D,QAAM,iBAAiB,sBAAsB;AAAA,IAC3C,QAAQ,CAAC;AAAA,IACT,aAAa;AAAA,EACf,CAAC;AACD,QAAM,EAAE,OAAO,UAAU,QAAQ,SAAS,IAAI;AAE9C,QAAM,iBAAiB,aAAa,MAAM,eAAe;AAAA,IACvD;AAAA,IACA,gBAAgB,gBAAgB;AAAA,IAChC;AAAA,IACA;AAAA,EACF,CAAC;AAED,QAAM,WAAqB,eAAe;AAAA,IACxC,QAAQ;AAAA,MACN,KAAK;AAAA,QACH,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,EACF,CAAC;AAKD,QAAM,gBAAgB,MAAM;AAC1B,UAAM,QAAQ,OAAO;AACrB,UAAM,SAAS,OAAO;AAEtB,WAAO,SAAS,QAAQ;AACxB,WAAO,uBAAuB;AAE9B,aAAS,QAAQ,OAAO,MAAM;AAAA,EAChC;AAEA,QAAM,eAAe,CAAC,MAAqB;AACzC,QAAI,EAAE,IAAI,YAAY,MAAM,OAAO,EAAE,UAAU;AAC7C,QAAE,eAAe;AACjB,sBAAgB,SAAS,KAAK;AAAA,QAC5B,MAAM;AAAA,QACN;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AAKA,QAAM,6BAA6B,MAAM;AAIvC,kBAAc;AAEd,WAAO,iBAAiB,UAAU,aAAa;AAC/C,WAAO,iBAAiB,WAAW,YAAY;AAAA,EACjD;AAEA,QAAM,QAAQ,YAAY;AAIxB,+BAA2B;AAK3B,aAAS,MAAM;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AACD,mBAAe,SAAS,SAAS,MAAM;AAKvC,mBAAe,UAAU;AACzB,UAAM,eAAe,QAAQ;AAAA,EAC/B;AAKA,QAAM,UAAU,MAAM;AAIpB,WAAO,oBAAoB,UAAU,aAAa;AAClD,WAAO,oBAAoB,WAAW,YAAY;AAAA,EACpD;AAEA,QAAM,SAAS,MAAM;AACnB,mBAAe,OAAO;AAAA,EACxB;AAEA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;","names":[]}