{"version":3,"sources":["../../../src/plugins/backend/InMemoryBackend.ts"],"names":["createInMemoryBackend","map","key","payload"],"mappings":"AAEaA,IAAAA,CAAAA,CAAwB,IAA4B,CAC/D,IAAMC,EAAM,IAAI,GAAA,CAsBhB,OAAO,CACL,GAAA,CArB+BC,GACxBD,CAAI,CAAA,GAAA,CAAIC,CAAG,CAqBlB,CAAA,GAAA,CAlBW,CAAoBA,CAAQC,CAAAA,CAAAA,GAAwB,CAC/DF,CAAAA,CAAI,GAAIC,CAAAA,CAAAA,CAAKC,CAAO,EACtB,CAAA,CAiBE,MAfa,IAAY,CACzBF,EAAI,KAAM,GACZ,EAcE,MAZkCC,CAAAA,CAAAA,EAAiB,CACnDD,CAAI,CAAA,MAAA,CAAOC,CAAG,EAChB,CAAA,CAWE,KATY,IACLD,CAAAA,CAAI,IAAK,EASlB,CACF","file":"InMemoryBackend.js","sourcesContent":["import { StorageBackend } from \"types/plugin.types\";\n\nexport const createInMemoryBackend = <T>(): StorageBackend<T> => {\n  const map = new Map<keyof T, T[keyof T]>();\n\n  const _get = <K extends keyof T>(key: K): T[K] | undefined => {\n    return map.get(key) as T[K] | undefined;\n  };\n\n  const _set = <K extends keyof T>(key: K, payload: T[K]): void => {\n    map.set(key, payload);\n  };\n\n  const _clear = (): void => {\n    map.clear();\n  };\n\n  const _delete = <K extends keyof T>(key: K): void => {\n    map.delete(key);\n  };\n\n  const _keys = (): IterableIterator<keyof T> => {\n    return map.keys();\n  };\n\n  return {\n    get: _get,\n    set: _set,\n    clear: _clear,\n    delete: _delete,\n    keys: _keys,\n  };\n};\n"]}