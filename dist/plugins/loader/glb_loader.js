import {DRACOLoader}from'three/examples/jsm/loaders/DRACOLoader.js';import {GLTFLoader}from'three/examples/jsm/loaders/GLTFLoader.js';var L=({scene:t,loadingManager:s,storageManager:n})=>{let r=new GLTFLoader(s),a=new DRACOLoader;a.setDecoderPath("/public/draco/"),r.setDRACOLoader(a);let d=async e=>{try{let o=await r.loadAsync(e.path);n.getStorage("model").store(e.id,{animations:o.animations,groups:o.scene}),t.add(o.scene);}catch(o){throw new Error(`Errr occuerd while loading a glb file : ${o}`)}};return {load:async e=>{let o=[];e.forEach(i=>{o.push(d(i));}),await Promise.allSettled(o);}}};export{L as createGLBLoader};//# sourceMappingURL=glb_loader.js.map
//# sourceMappingURL=glb_loader.js.map