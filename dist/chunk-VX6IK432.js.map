{"version":3,"sources":["../src/components/website/navbar/header.ts"],"names":["template","Navbar","e","key","showEvent","hideEvent","id","showHandler","processPipelineDebugger","hideHandler","clone","eventBusManager"],"mappings":"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","file":"chunk-VX6IK432.js","sourcesContent":["import { EventBus } from \"@managers/events/eventBus\";\nimport { EventBusManager } from \"@managers/events/eventBusFactory\";\nimport { DisplayEvents } from \"@managers/events/eventType\";\nimport { processPipelineDebugger } from \"debug/debugger\";\n\nconst template = document.createElement(\"template\");\n\ntemplate.innerHTML = `\n  <link rel=\"stylesheet\" href=\"/style/header.css\"/>\n  <nav class=\"navbar\" id=\"main-nav\">\n      <div class=\"logo\">Logo</div>\n      <button class=\"toggle-btn\" aria-expanded=\"false\" aria-controls=\"main-nav\">&#9776</button>\n      <ul class=\"nav-links\">\n          <li><a href=\"\" id=\"home\">Home</a></li>\n          <li><a href=\"\" id=\"about\">About</a></li>\n          <li><a href=\"\" id=\"projects\">Projects</a></li>\n          <li><a href=\"\" id=\"contact\">Contact</a></li>\n      </ul>\n  </nav>\n`;\n\ntype TabKeys=\"home\"|\"about\"|\"project\"|\"contact\";\n\ninterface State {\n  hamburgerMenu: {\n    isOpen: boolean;\n    isTransitioning: boolean;\n  };\n  activeTab: TabKeys;\n}\n\ninterface Components {\n  toggleBtn: HTMLElement | null;\n  navLinks: HTMLElement | null;\n  projects: HTMLAnchorElement | null;\n  about: HTMLAnchorElement | null;\n  home: HTMLAnchorElement | null;\n  contact: HTMLAnchorElement | null;\n}\n\nexport class Navbar extends HTMLElement {\n  //State\n  private state: State = {\n    hamburgerMenu: {\n      isOpen: false,\n      isTransitioning: false,\n    },\n    activeTab:\"home\"\n  };\n\n  private displayEventBus: EventBus<DisplayEvents> | null = null;\n  private components: Components = {\n    about: null,\n    navLinks: null,\n    projects: null,\n    contact: null,\n    home: null,\n    toggleBtn: null,\n  };\n\n  root: ShadowRoot;\n\n  busHandlers: Record<`${TabKeys}:show` | `${TabKeys}:hide`,(e: DisplayEvents) => void> | null = null;\n  sections = [\"project\", \"about\", \"contact\", \"home\"] as const;\n\n  constructor() {\n    super();\n    this.root = this.attachShadow({ mode: \"open\" });\n    const clone = template.content.cloneNode(true);\n    this.root.appendChild(clone);\n    this.queryElements();\n  }\n\n  static get observedAttributes() {\n    return [];\n  }\n\n  /**\n   * @description called when the component is mounted\n   */\n  connectedCallback() {\n    this.bindEvents();\n    this.setupBusListeners();\n  }\n\n  /**\n   * @description called when component is un mounted\n   */\n  disconnectedCallback() {\n    this.unBindEvents();\n    this.disposeBusListeners();\n  }\n\n  queryElements() {\n    this.components.toggleBtn = this.root.querySelector(\".toggle-btn\");\n    this.components.navLinks = this.root.querySelector(\".nav-links\");\n\n    if (this.components.navLinks) {\n      this.components.projects =\n        this.components.navLinks.querySelector(\"#projects\");\n\n      this.components.about = this.components.navLinks.querySelector(\"#about\");\n\n      this.components.contact =\n        this.components.navLinks.querySelector(\"#contact\");\n\n      this.components.home = this.components.navLinks.querySelector(\"#home\");\n    }\n  }\n\n  bindEvents() {\n    this.components.toggleBtn?.addEventListener(\"click\", this.onToggleClick);\n    this.components.navLinks?.addEventListener(\n      \"transitionend\",\n      this.onAnimationEnd\n    );\n    this.components.projects?.addEventListener(\"click\", this.onProjectClick);\n    this.components.about?.addEventListener(\"click\", this.onAboutClick);\n    this.components.home?.addEventListener(\"click\", this.onHomeClick);\n    this.components.contact?.addEventListener(\"click\", this.onContactClick);\n  }\n\n  unBindEvents() {\n    this.components.toggleBtn?.removeEventListener(\"click\", this.onToggleClick);\n    this.components.navLinks?.removeEventListener(\n      \"transitionend\",\n      this.onAnimationEnd\n    );\n    this.components.projects?.removeEventListener(\"click\", this.onProjectClick);\n    this.components.about?.removeEventListener(\"click\", this.onAboutClick);\n    this.components.home?.removeEventListener(\"click\", this.onHomeClick);\n    this.components.contact?.removeEventListener(\"click\", this.onContactClick);\n  }\n\n  /***\n   * @description on Click handler for hamburger menu closing or opening\n   */\n  toggleHamburgerMenu = (): void => {\n    if (!this.components.navLinks) return;\n    if (this.state.hamburgerMenu.isTransitioning) return;\n\n    this.state.hamburgerMenu.isTransitioning = true;\n    this.components.navLinks.classList.toggle(\n      \"open\",\n      !this.state.hamburgerMenu.isOpen\n    );\n    this.components.navLinks.classList.toggle(\n      \"closing\",\n      this.state.hamburgerMenu.isOpen\n    );\n    this.state.hamburgerMenu.isOpen = !this.state.hamburgerMenu.isOpen;\n\n    this.components?.toggleBtn?.setAttribute(\n      \"aria-expanded\",\n      String(this.state.hamburgerMenu.isOpen)\n    );\n  };\n\n  /**\n   * @description handle the transition end\n   * @param e event triggered\n   */\n  handleTransitionEnd = (e: Event) => {\n    if ((e as TransitionEvent).propertyName !== \"transform\") return;\n\n    this.components.navLinks?.classList.remove(\"closing\");\n    this.state.hamburgerMenu.isTransitioning = false;\n  };\n\n  toggleSections = <K extends DisplayEvents[\"elementId\"]>(e: Event, key: K) => {\n    if(this.state.activeTab==key) return;\n    e.preventDefault();\n   \n    const showEvent = {\n      elementId: key,\n      type: `${key}:show`,\n    } as DisplayEvents;\n\n    const hideEvent = {\n      elementId: key,\n      type: `${this.state.activeTab}:hide`,\n    } as DisplayEvents;\n\n    this.displayEventBus?.emit(hideEvent);\n    this.displayEventBus?.emit(showEvent);\n  \n    this.state.activeTab = key;\n  };\n\n  private onToggleClick = (e: Event) => this.toggleHamburgerMenu();\n  private onAnimationEnd = (e: Event) => this.handleTransitionEnd(e);\n  private onProjectClick = (e: Event) => this.toggleSections(e, \"project\");\n  private onAboutClick = (e: Event) => this.toggleSections(e, \"about\");\n  private onHomeClick = (e: Event) => this.toggleSections(e, \"home\");\n  private onContactClick = (e: Event) => this.toggleSections(e, \"contact\");\n\n  setupBusListeners = () => {\n    if (!this.displayEventBus) return;\n\n    this.sections.forEach((id) => {\n      const showHandler = (e: DisplayEvents) => {\n        processPipelineDebugger.onMount(`[${id}]-component`)\n      };\n      const hideHandler = (e: DisplayEvents) => {\n        processPipelineDebugger.onUnmount(`[${id}]-component`)\n      };\n\n      this.displayEventBus?.on(`${id}:show`, showHandler);\n      this.displayEventBus?.on(`${id}:hide`, hideHandler);\n\n      if (!this.busHandlers) return;\n\n      this.busHandlers[`${id}:show`] = showHandler;\n      this.busHandlers[`${id}:hide`] = hideHandler;\n    });\n  };\n\n  disposeBusListeners = () => {\n    if (!this.displayEventBus) return;\n\n    this.sections.forEach((id) => {\n      if (!this.busHandlers) return;\n\n      this.displayEventBus?.off(`${id}:show`, this.busHandlers[`${id}:show`]);\n      this.displayEventBus?.off(`${id}:hide`, this.busHandlers[`${id}:hide`]);\n    });\n  };\n\n  set eventBusManager(eventBusManager: EventBusManager) {\n    this.displayEventBus = eventBusManager.displayBus;\n  }\n}\n"]}