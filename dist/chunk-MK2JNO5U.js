import {a}from'./chunk-BFK572KU.js';var M=t=>({enter:e=>{console.log("enter idle"),t.animationController.play(t.animationId);},execute:e=>{e.isMoving()&&(e.isShiftPressed()?e.changeState("Run"):e.changeState("Walk"));},exit:e=>{console.log("exit idle");}}),F=t=>({enter:e=>{console.log("enter walk"),t.animationController.play(t.animationId);},execute:e=>{e.isMoving()?e.isShiftPressed()&&e.changeState("Run"):e.changeState("Idle");},exit:e=>{console.log("exit walk");}}),h=t=>({enter:e=>{console.log("enter run"),t.animationController.play(t.animationId);},execute:e=>{e.isMoving()?e.isShiftPressed()||e.changeState("Walk"):e.changeState("Idle");},exit:e=>{console.log("exit run");}}),I=({animationController:t})=>{let r=a(),{keyboard:n}={mouse:r.getController("mouse"),keyboard:r.getController("keyboard")},{idle:l,walk:S,run:d}={idle:M({animationController:t,animationId:"Idle"}),walk:F({animationController:t,animationId:"Walk"}),run:h({animationController:t,animationId:"Run"})},a$1=l,c="Idle",m=o=>{a$1.execute(i),t.update(o);},P=()=>!!(n?.isKeyPressed("w")||n?.isKeyPressed("a")||n?.isKeyPressed("s")||n?.isKeyPressed("d")),x=()=>n?.isKeyPressed("shift")??false,y=o=>{switch(o){case "Idle":return l;case "Walk":return S;case "Run":return d;default:return l}},f=o=>{c!==o&&(c=o,a$1.exit(i),a$1=y(o),a$1.enter(i));},g=()=>{a$1.enter(i);},i={changeState:f,isMoving:P,isShiftPressed:x};return {mount:g,update:m,unmount:()=>{}}};export{I as a};//# sourceMappingURL=chunk-MK2JNO5U.js.map
//# sourceMappingURL=chunk-MK2JNO5U.js.map