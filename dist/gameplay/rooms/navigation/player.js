import {Vector3,Euler,AnimationMixer}from'three';var A=({mixer:o,actions:a,crossFadeDuration:u=.3})=>{let n=null,p=null;return {play:(s,C=0)=>{if(n===s)return;let d=a[s];d&&(d.reset(),d.play(),p?.crossFadeTo(d,u,false),p=d,n=s);},getCurrentAnimation:()=>n,stop:()=>{},update:s=>{s!==void 0&&o.update(s);}}};var h=o=>({enter:e=>{console.log("enter idle"),o.animationController.play(o.animationId);},execute:e=>{e.isMoving()&&(e.isShiftPressed()?e.changeState("Run"):e.changeState("Walk"));},exit:e=>{console.log("exit idle");}}),v=o=>({enter:e=>{console.log("enter walk"),o.animationController.play(o.animationId);},execute:e=>{e.isMoving()?e.isShiftPressed()&&e.changeState("Run"):e.changeState("Idle");},exit:e=>{console.log("exit walk");}}),F=o=>({enter:e=>{console.log("enter run"),o.animationController.play(o.animationId);},execute:e=>{e.isMoving()?e.isShiftPressed()||e.changeState("Walk"):e.changeState("Idle");},exit:e=>{console.log("exit run");}}),b=({inputs:o,animationController:a})=>{let {keyboard:n}={mouse:o.getController("mouse"),keyboard:o.getController("keyboard")},{idle:p,walk:l,run:S}={idle:h({animationController:a,animationId:"Idle"}),walk:v({animationController:a,animationId:"Walk"}),run:F({animationController:a,animationId:"Run"})},m=p,f="Idle",s=r=>{m.execute(c),a.update(r);},C=()=>!!(n?.isKeyPressed("w")||n?.isKeyPressed("a")||n?.isKeyPressed("s")||n?.isKeyPressed("d")),d=()=>n?.isKeyPressed("shift")??false,P=r=>{switch(r){case "Idle":return p;case "Walk":return l;case "Run":return S;default:return p}},x=r=>{f!==r&&(f=r,m.exit(c),m=P(r),m.enter(c));},t=()=>{m.enter(c);},c={changeState:x,isMoving:C,isShiftPressed:d};return {mount:t,update:s,unmount:()=>{}}};var I={MOVEMENT_ACCELERATION:.05,MAX_VELOCITY:.05},L=({reference:o,storage:a,InputManager:u})=>{let n,e={direction:new Vector3(0,0,-1),velocity:new Vector3(0,0,0),rotationApplied:{pitch:0,yaw:0}},p={inputDirection:new Vector3(0,0,0)},l={player:null},S=()=>{try{let t=a.getStorage("model").retrieve(o.storageId);if(!t)throw new Error(`player doesn't exist for the id ${o.storageId}`);let c=t?.groups,y=t?.animations,r=new AnimationMixer(c),i=A({mixer:r,actions:{Idle:r.clipAction(y[0]),Walk:r.clipAction(y[3]),Run:r.clipAction(y[1])},crossFadeDuration:.3}),g=b({animationController:i,inputs:u});g.mount(),l={player:c},n={input:{mouse:u.getController("mouse"),keyboard:u.getController("keyboard")},animation:i,fsm:g};}catch(t){console.error(`Player mesh cant be obtained :${t}`);}},m=t=>{!t||!l.player||(e.rotationApplied=t.getRotation(),l.player.rotation.y+=e.rotationApplied.yaw);},f=(t,c)=>{if(!t||!l.player)return;let r=.001,{inputDirection:i}=p;if(i.set(0,0,0),t.isKeyPressed("w")&&(i.z-=1),t.isKeyPressed("s")&&(i.z+=1),t.isKeyPressed("a")&&(i.x-=1),t.isKeyPressed("d")&&(i.x+=1),i.length()>0)i.applyQuaternion(l.player.quaternion),i.normalize(),e.velocity.add(i.multiplyScalar(I.MOVEMENT_ACCELERATION*c)),e.velocity.clampLength(0,I.MAX_VELOCITY);else if(i.length()==0&&e.velocity.length()>0){let g=Math.exp(-5*c);e.velocity.multiplyScalar(g),e.velocity.lengthSq()<r*r&&e.velocity.set(0,0,0);}l.player.position.add(e.velocity);},s=t=>{m(n.input.mouse),f(n.input.keyboard,t);};return {mount:S,activate:()=>{},deactivate:()=>{},update:t=>(s(t),n.fsm.update(t),{position:l.player?.position??new Vector3(0,0,0),rotation:l.player?.rotation??new Euler(0,0,0,"XYZ"),rotationDelta:e.rotationApplied}),unmount:()=>{}}};export{L as createPlayer};//# sourceMappingURL=player.js.map
//# sourceMappingURL=player.js.map