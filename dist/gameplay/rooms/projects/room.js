import {Vector3,CatmullRomCurve3,AnimationMixer,DirectionalLight,AmbientLight,PCFShadowMap}from'three';var x=()=>{let o=new Map;return {register:(a,i)=>{if(o.has(a))throw new Error(`Error : Redefining the service [${a}]`);o.set(a,i);},get:a=>{let i=o.get(a);if(!i)throw new Error(`Error : Trying to obtain value of an unregistered service ${a}`);return i},has:a=>o.has(a)}},f,y=()=>(f||(f=x()),f);var S=({camera:o,eventBusManager:n,orbit:e,scene:r})=>{let a=[new Vector3(0,2,10),new Vector3(0,2,5),new Vector3(0,2,3),new Vector3(0,2,2),new Vector3(0,2,1),new Vector3(0,2,0),new Vector3(0,2,-1),new Vector3(0,1,-1),new Vector3(0,1,-1.5),new Vector3(0,1,-2)],i=new CatmullRomCurve3(a),c=0,m=false;return {mount:()=>{c=0;},activate:()=>{e.enabled=false,o.position.set(0,2.5,10),o.near=.001,o.far=1e3;},update:p=>{if(!m&&c>1&&(m=true,e.enabled=true,n.viewBus.emit({type:"project-screen:show",elementId:"project-screen"}),console.log("event emitted view event")),!m&&(c+=p*.1,c<=.9)){let h=i.getPointAt(c),v=i.getPointAt(c+.1);v.z-=.1,o.position.copy(h),o.lookAt(v);}},deactivate:()=>{},unmount:()=>{}}};var b=({reference:o,logger:n,storage:e})=>{let r=null;return {mount:()=>{let d=e.getStorage("model").retrieve(o.storageId)?.groups;if(r=d?.getObjectByName(o.id),!r){console.error(`Cant get ground mesh from the id : ${o.id}`);return}r.material=r.material.clone(),r.receiveShadow=true,r.material.needsUpdate=true,r.material.opacity=1,r.material.transparent=true;let l=["sky","ground"];d?.traverse(g=>{l.includes(g.name)||(g.castShadow=true);}),n.onMount({origin:"about-ground"});},actiavte:()=>{},deactivate:()=>{},unmount:()=>{}}};var w=({renderer:o,scene:n})=>{let e,r;return {mount:()=>{e=new DirectionalLight(16777215,5),e.castShadow=true,e.position.set(0,1,.5),e.target.position.set(0,0,0),e.shadow.mapSize.width=1024,e.shadow.mapSize.height=1024,e.shadow.camera.near=.1,e.shadow.camera.far=50,e.shadow.camera.left=-10,e.shadow.camera.right=10,e.shadow.camera.top=10,e.shadow.camera.bottom=-10,r=new AmbientLight(16777215),o.shadowMap.enabled=true,o.shadowMap.type=PCFShadowMap;},activate:()=>{e&&n.add(e),r&&n.add(r);},deactivate:()=>{e&&n.remove(e),r&&n.remove(r);},unmount:()=>{}}};var P=({logger:o,reference:n,storage:e})=>{let r,a=[],i=t=>{t.traverse(s=>{s.castShadow=true;});};return {mount:()=>{try{let t=e.getStorage("model").retrieve(n.storageId)?.groups,s=e.getStorage("model").retrieve(n.storageId)?.animations??[];if(!t)throw new Error(`player doesn't exist for the id ${n.storageId}`);r={playerRoot:t};let p=new AnimationMixer(t);p.clipAction(s[2]).play(),a.push(p),o.onMount({origin:"Project-Room-Player"});}catch(t){console.error(`Player mesh cant be obtained :${t}`);}},activate:()=>{r.playerRoot&&(r.playerRoot.rotation.set(0,0,0,"XYZ"),r.playerRoot.castShadow=true,i(r.playerRoot));},update:t=>{a.forEach(s=>{s.update(t);});},deactiavte:()=>{},unmount:()=>{}}};var re=({player:o,ground:n})=>{let e=y(),[r,a,i,c]=[e.get("GlobalStorageManager"),e.get("ThreeJSContextManager"),e.get("EventBusManager"),e.get("Logger")],{scene:m,camera:d,orbit:l,renderer:g}={scene:a.get("scene"),camera:a.get("camera"),orbit:a.get("orbit"),renderer:a.get("renderer")},t={camera:S({camera:d,eventBusManager:i,orbit:l,scene:m}),player:P({logger:c,reference:o,storage:r}),ground:b({logger:c,reference:n,storage:r}),lighting:w({renderer:g,scene:m})},s=null;return {mount:()=>{t.ground.mount(),t.player.mount(),t.camera.mount(),t.lighting.mount(),s=r.getStorage("model").retrieve(n.storageId)?.groups??null,c.onMount({origin:"Projects"});},setActive:()=>{s&&(s.visible=true),t.camera.activate(),t.lighting.activate(),t.player.activate();},update:M=>{t.player.update(M),t.camera.update(M);},setDeactive:()=>{s&&(s.visible=false),t.lighting.deactivate();},unmount:()=>{},isLoaded:false}};export{re as createProjectRoom};//# sourceMappingURL=room.js.map
//# sourceMappingURL=room.js.map