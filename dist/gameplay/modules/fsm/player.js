var y=t=>({enter:e=>{console.log("enter idle"),t.animationController.play(t.animationId);},execute:e=>{e.isMoving()&&(e.isShiftPressed()?e.changeState("Run"):e.changeState("Walk"));},exit:e=>{console.log("exit idle");}}),f=t=>({enter:e=>{console.log("enter walk"),t.animationController.play(t.animationId);},execute:e=>{e.isMoving()?e.isShiftPressed()&&e.changeState("Run"):e.changeState("Idle");},exit:e=>{console.log("exit walk");}}),F=t=>({enter:e=>{console.log("enter run"),t.animationController.play(t.animationId);},execute:e=>{e.isMoving()?e.isShiftPressed()||e.changeState("Walk"):e.changeState("Idle");},exit:e=>{console.log("exit run");}}),p=({inputs:t,animationController:o})=>{let {keyboard:n}={mouse:t.getController("mouse"),keyboard:t.getController("keyboard")},{idle:l,walk:u,run:S}={idle:y({animationController:o,animationId:"Idle"}),walk:f({animationController:o,animationId:"Walk"}),run:F({animationController:o,animationId:"Run"})},a=l,c="Idle",d=r=>{a.execute(i),o.update(r);},m=()=>!!(n?.isKeyPressed("w")||n?.isKeyPressed("a")||n?.isKeyPressed("s")||n?.isKeyPressed("d")),P=()=>n?.isKeyPressed("shift")??false,x=r=>{switch(r){case "Idle":return l;case "Walk":return u;case "Run":return S;default:return l}},M=r=>{c!==r&&(c=r,a.exit(i),a=x(r),a.enter(i));},g=()=>{a.enter(i);},i={changeState:M,isMoving:m,isShiftPressed:P};return {mount:g,update:d,unmount:()=>{}}};export{p as createFSMController};//# sourceMappingURL=player.js.map
//# sourceMappingURL=player.js.map