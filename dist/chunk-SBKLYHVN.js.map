{"version":3,"sources":["../src/gameplay/rooms/about/ground.ts"],"names":["createGround","logger","reference","storage","ground"],"mappings":"AAkBO,IAAMA,EAAe,CAAC,CAC3B,OAAAC,CACA,CAAA,SAAA,CAAAC,EACA,OAAAC,CAAAA,CACF,CAA2B,GAAA,CACzB,IAAIC,CAAyB,CAAA,IAAA,CA4B7B,OAAO,CACL,KAAA,CA3BY,IAAM,CAMlB,GALAA,CAASD,CAAAA,CAAAA,CACN,WAAW,OAAO,CAAA,CAClB,SAASD,CAAU,CAAA,SAAS,GAC3B,MAAO,CAAA,eAAA,CAAgBA,EAAU,EAAE,CAAA,CAEnC,CAACE,CAAQ,CAAA,CACX,QAAQ,KAAM,CAAA,CAAA,mCAAA,EAAsCF,EAAU,EAAE,CAAA,CAAE,CAClE,CAAA,MACF,CACAE,CAAO,CAAA,QAAA,CAAYA,EAAO,QAAsB,CAAA,KAAA,GAChDA,CAAO,CAAA,aAAA,CAAgB,KAEtBA,CAAO,CAAA,QAAA,CAAsB,YAAc,IAC3CA,CAAAA,CAAAA,CAAO,SAAkC,OAAU,CAAA,GAAA,CACnDA,EAAO,QAAkC,CAAA,WAAA,CAAc,IAExDH,CAAAA,CAAAA,CAAO,QAAQ,CAAE,MAAA,CAAQ,cAAe,CAAC,EAC3C,EAUE,QARe,CAAA,IAAM,EASrB,CAAA,UAAA,CAPiB,IAAM,EAAC,CAQxB,QANc,IAAM,EAOtB,CACF","file":"chunk-SBKLYHVN.js","sourcesContent":["import { Logger } from \"@utils/Logger\";\nimport { GlobalStorageManager } from \"engine/managers/storage/storageTypes\";\nimport { Material, Mesh, MeshStandardMaterial } from \"three\";\nimport { ModelIdentifier } from \"types/rooms.types\";\n\nexport interface GroundProps {\n  reference: ModelIdentifier;\n  storage: GlobalStorageManager;\n  logger: Logger;\n}\n\nexport interface Ground {\n  mount: () => void;\n  actiavte: () => void;\n  deactivate: () => void;\n  unmount: () => void;\n}\n\nexport const createGround = ({\n  logger,\n  reference,\n  storage,\n}: GroundProps): Ground => {\n  let ground: Nullable<Mesh> = null;\n\n  const mount = () => {\n    ground = storage\n      .getStorage(\"model\")\n      .retrieve(reference.storageId)\n      ?.groups.getObjectByName(reference.id) as Mesh;\n\n    if (!ground) {\n      console.error(`Cant get ground mesh from the id : ${reference.id}`);\n      return;\n    }\n    ground.material = (ground.material as Material).clone();\n    ground.receiveShadow = true;\n\n    (ground.material as Material).needsUpdate = true;\n    (ground.material as MeshStandardMaterial).opacity = 0.15;\n    (ground.material as MeshStandardMaterial).transparent = true;\n\n    logger.onMount({ origin: \"about-ground\" });\n  };\n\n  const activate = () => {};\n\n  const deactivate = () => {};\n\n  const unmount = () => {};\n\n  return {\n    mount: mount,\n    actiavte: activate,\n    deactivate: deactivate,\n    unmount: unmount,\n  };\n};\n"]}