{"version":3,"sources":["../src/gameplay/rooms/navigation/ground.ts"],"names":["createGround","logger","references","storage","camera","ground","gridMat","createGridMaterial"],"mappings":"oCAqBaA,IAAAA,CAAAA,CAAe,CAAC,CAC3B,MAAA,CAAAC,EACA,UAAAC,CAAAA,CAAAA,CACA,QAAAC,CACA,CAAA,MAAA,CAAAC,GACF,CAA2B,GAAA,CACzB,IAAIC,CAAyB,CAAA,IAAA,CACzBC,EAAkC,IAmCtC,CAAA,OAAO,CACL,KAAA,CAlCY,IAAM,CAOlB,GANAD,CACGF,CAAAA,CAAAA,CACE,WAAW,OAAO,CAAA,CAClB,SAASD,CAAW,CAAA,SAAS,CAC5B,EAAA,MAAA,CAAO,eAAgBA,CAAAA,CAAAA,CAAW,EAAE,CAAc,EAAA,IAAA,CAEpD,CAACG,CAAQ,CAAA,CACX,QAAQ,KACN,CAAA,CAAA,mCAAA,EAAsCH,CAAW,CAAA,EAAE,CAAIA,CAAAA,EAAAA,CAAAA,CAAW,SAAS,CAC7E,CAAA,CAAA,CACA,MACF,CAEAI,CAAAA,CAAUC,EAAmB,CAC3B,MAAA,CAAQH,IACR,QAAU,CAAA,EAAA,CACV,QAAS,CACX,CAAC,EAEDC,CAAO,CAAA,QAAA,CAAWC,EAAQ,GAC1BL,CAAAA,CAAAA,CAAO,OAAQ,CAAA,CAAE,MAAQ,CAAA,mBAAoB,CAAC,EAChD,CAAA,CAaE,OAXa,IAAM,CACnBK,GAAS,MAAOF,CAAAA,GAAAA,CAAO,QAAQ,EACjC,CAUE,CAAA,QAAA,CARe,IAAM,EAAC,CAStB,WARiB,IAAM,GASvB,OAPc,CAAA,IAAM,EAQtB,CACF","file":"chunk-2462QA3U.js","sourcesContent":["import { Logger } from \"@utils/Logger\";\nimport { GlobalStorageManager } from \"engine/managers/storage/storageTypes\";\nimport { createGridMaterial, GridMaterial } from \"materials/grid/grid-material\";\nimport { Mesh, PerspectiveCamera } from \"three\";\nimport { ModelIdentifier } from \"types/rooms.types\";\n\nexport interface GroundProps {\n  references: ModelIdentifier;\n  storage: GlobalStorageManager;\n  logger: Logger;\n  camera: PerspectiveCamera;\n}\n\nexport interface Ground {\n  mount: () => void;\n  update: () => void;\n  activate: () => void;\n  deactivate: () => void;\n  unmount: () => void;\n}\n\nexport const createGround = ({\n  logger,\n  references,\n  storage,\n  camera,\n}: GroundProps): Ground => {\n  let ground: Nullable<Mesh> = null;\n  let gridMat: Nullable<GridMaterial> = null;\n\n  const mount = () => {\n    ground =\n      (storage\n        .getStorage(\"model\")\n        .retrieve(references.storageId)\n        ?.groups.getObjectByName(references.id) as Mesh) ?? null;\n\n    if (!ground) {\n      console.error(\n        `Cant get ground mesh from the id : ${references.id} ${references.storageId}`\n      );\n      return;\n    }\n\n    gridMat = createGridMaterial({\n      camera: camera,\n      fadeNear: 0.1,\n      fadeFar: 1,\n    });\n\n    ground.material = gridMat.mat;\n    logger.onMount({ origin: \"Navigation-Ground\" });\n  };\n\n  const update = () => {\n    gridMat?.update(camera.position);\n  };\n\n  const activate = () => {};\n  const deactivate = () => {};\n\n  const unmount = () => {};\n\n  return {\n    mount: mount,\n    update: update,\n    activate: activate,\n    deactivate: deactivate,\n    unmount: unmount,\n  };\n};\n"]}