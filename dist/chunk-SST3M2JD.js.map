{"version":3,"sources":["../src/utils/globalContext.ts"],"sourcesContent":["import {\n  createEventBusManager,\n  EventBusManager,\n} from \"./event_management/eventBusFactory\";\nimport { createGlobalState, GlobalState } from \"./state/globalState\";\nimport { GlobalStateContext } from \"./state/globalStateData\";\nimport { createGlobalStorage, GlobalStorage } from \"./storage/globalStorage\";\n\nconst GLOBAL_STATE_INITIAL: GlobalStateContext = {\n  loading: {\n    active: false,\n    progress: 0,\n  },\n} as const;\n\nexport interface References {\n  globalState: GlobalState;\n  eventBusManager: EventBusManager;\n  globalStorage: GlobalStorage;\n}\n\nexport let references: References;\n\nexport const getGlobalContext = () => {\n  if (!references) {\n    references = {\n      globalState: createGlobalState(GLOBAL_STATE_INITIAL),\n      eventBusManager: createEventBusManager(),\n      globalStorage: createGlobalStorage({}),\n    };\n\n    references.globalState.inflate();\n    references.globalStorage.mount();\n  }\n\n  return references;\n};\n"],"mappings":";;;;;;;;;;;AAQA,IAAM,uBAA2C;AAAA,EAC/C,SAAS;AAAA,IACP,QAAQ;AAAA,IACR,UAAU;AAAA,EACZ;AACF;AAQO,IAAI;AAEJ,IAAM,mBAAmB,MAAM;AACpC,MAAI,CAAC,YAAY;AACf,iBAAa;AAAA,MACX,aAAa,kBAAkB,oBAAoB;AAAA,MACnD,iBAAiB,sBAAsB;AAAA,MACvC,eAAe,oBAAoB,CAAC,CAAC;AAAA,IACvC;AAEA,eAAW,YAAY,QAAQ;AAC/B,eAAW,cAAc,MAAM;AAAA,EACjC;AAEA,SAAO;AACT;","names":[]}