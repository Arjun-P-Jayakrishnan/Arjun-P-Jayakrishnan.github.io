{"version":3,"sources":["../src/engine/managers/ThreeJsManager.ts"],"names":["createThreeJsInstance","props","fov","aspectRatio","near","far","DEFAULT_CAMERA_OPTIONS","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","orbit","animationCallback","animationFrameId","contextManager","getServiceRegistry","logger","mountRendererToDom","elementId","container","OrbitControls","exposeToContext","queueStep","callback","loop"],"mappings":"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","file":"chunk-BSY74MYA.js","sourcesContent":["import { queueStep } from \"@utils/dsl\";\nimport { DEFAULT_CAMERA_OPTIONS } from \"config/constants\";\nimport { getServiceRegistry } from \"engine/core/ServiceRegistry\";\nimport { PerspectiveCamera, Scene, WebGLRenderer } from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\nimport { Lifecycle } from \"types/lifecycle.types\";\n\nexport interface ThreeJSRenderOptions {\n  /** Dom element id where the render will be mounted */\n  domMountId: string;\n}\n\nexport interface ThreeJsRenderer\n  extends Lifecycle<[], [loop: () => void], [], [], []> {}\n\nexport const createThreeJsInstance = (\n  props: ThreeJSRenderOptions\n): ThreeJsRenderer => {\n  //Local references\n  const { fov, aspectRatio, near, far } = DEFAULT_CAMERA_OPTIONS;\n\n  //=====Core Elements======\n  let scene: Scene = new Scene();\n  let camera: PerspectiveCamera = new PerspectiveCamera(\n    fov,\n    aspectRatio,\n    near,\n    far\n  );\n  let renderer: WebGLRenderer = new WebGLRenderer({ antialias: true });\n  let orbit: OrbitControls;\n\n  // State\n  let animationCallback: Nullable<() => void> = null;\n  let animationFrameId: Nullable<number> = null;\n\n  //External Context Hook\n  const contextManager = getServiceRegistry().get(\"ThreeJSContextManager\");\n  const logger = getServiceRegistry().get(\"Logger\");\n\n  //Internal Methods\n  const mountRendererToDom = (elementId: string): void => {\n    const container = document.getElementById(elementId);\n\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n\n    if (container) {\n      container.appendChild(renderer.domElement);\n      orbit = new OrbitControls(camera, renderer.domElement);\n    } else {\n      console.warn(`Could not find element with selector tag : ${elementId}`);\n    }\n  };\n\n  /**\n   * Mount the context_manager to allow reference to scene and other props externally\n   */\n  const exposeToContext = (): void => {\n    contextManager.set(\"scene\", scene);\n    contextManager.set(\"camera\", camera);\n    contextManager.set(\"orbit\", orbit);\n    contextManager.set(\"renderer\", renderer);\n  };\n\n  const onLoad = () => {\n    return [\n      queueStep(mountRendererToDom, props.domMountId),\n      queueStep(exposeToContext),\n      queueStep(logger.onLoad, { origin: \"ThreeJs-Manager\" }),\n    ];\n  };\n\n  const onMount = (callback: () => void) => {\n    return [\n      () => {\n        animationCallback = callback;\n      },\n      queueStep(logger.onMount, { origin: \"ThreeJs-Manager\" }),\n    ];\n  };\n\n  const render = () => {\n    if (animationFrameId !== null) return; //prevent multiple render loops\n\n    const loop = () => {\n      //Recursive callback function\n      animationFrameId = requestAnimationFrame(loop);\n      animationCallback?.();\n      renderer.render(scene, camera);\n    };\n\n    loop();\n  };\n\n  const onUnmount = () => {\n    const container = document.getElementById(props.domMountId);\n    if (animationFrameId !== null) {\n      cancelAnimationFrame(animationFrameId);\n      animationFrameId = 0;\n    }\n    if (container && renderer.domElement.parentElement === container) {\n      container.removeChild(renderer.domElement);\n    }\n\n    renderer.dispose();\n    logger.onUnmount({ origin: \"ThreeJs-Manager\" });\n  };\n\n  return {\n    onLoad: onLoad,\n    onMount: onMount,\n    onUpdate: render,\n    onUnmount: onUnmount,\n    onDestroy: () => {},\n  };\n};\n"]}