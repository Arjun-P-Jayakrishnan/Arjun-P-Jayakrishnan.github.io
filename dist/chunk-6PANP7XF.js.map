{"version":3,"sources":["../src/utils/dsl.ts"],"names":["queueStep","fn","args","flattenTask","tasks","result","task"],"mappings":"AAMA,SAASA,EACPC,CACGC,CAAAA,GAAAA,CAAAA,CACG,CACN,OAAO,IAAMD,CAAG,CAAA,GAAGC,CAAI,CACzB,CAEA,SAASC,CAAAA,CAAYC,EAAkC,CACrD,IAAMC,EAAiB,EAAC,CAExB,IAAWC,IAAAA,CAAAA,IAAQF,EACb,KAAM,CAAA,OAAA,CAAQE,CAAI,CAAA,CACpBD,EAAO,IAAK,CAAA,GAAGF,CAAYG,CAAAA,CAAI,CAAC,CAEhCD,CAAAA,CAAAA,CAAO,KAAKC,CAAI,CAAA,CAIpB,OAAOD,CACT","file":"chunk-6PANP7XF.js","sourcesContent":["//Domain Specific Language\n\nimport { Task } from \"types/lifecycle.types\";\n\ntype Step<F extends (...args: any[]) => any> = [F, ...Parameters<F>];\n\nfunction queueStep<F extends (...args: any[]) => any>(\n  fn: F,\n  ...args: Parameters<F>\n): Task {\n  return () => fn(...args);\n}\n\nfunction flattenTask(tasks: (Task | Task[])[]): Task[] {\n  const result: Task[] = [];\n\n  for (const task of tasks) {\n    if (Array.isArray(task)) {\n      result.push(...flattenTask(task));\n    } else {\n      result.push(task);\n    }\n  }\n\n  return result;\n}\n\nexport { flattenTask, queueStep };\n"]}