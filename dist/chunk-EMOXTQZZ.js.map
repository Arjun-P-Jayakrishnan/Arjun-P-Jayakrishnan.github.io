{"version":3,"sources":["../src/gameplay/projects/lights.ts"],"names":["createLighting","ctx","getThreeJsContext","scene","renderer","dirLight","ambientLight","DirectionalLight","AmbientLight","PCFShadowMap"],"mappings":"mGAYaA,IAAAA,CAAAA,CAAe,IAAa,CACrC,IAAMC,CAA0BC,CAAAA,CAAAA,GAC1B,CAAC,KAAA,CAAAC,GAAM,CAAA,QAAA,CAAAC,CAAQ,CAAA,CAAE,CAAC,KAAA,CAAMH,EAAI,GAAI,CAAA,OAAO,CAAE,CAAA,QAAA,CAASA,EAAI,GAAI,CAAA,UAAU,CAAC,CAAA,CAEvEI,EACAC,CAsCJ,CAAA,OAAM,CACF,KAAA,CArCQ,IAAI,CACZD,CAAS,CAAA,IAAIE,iBAAiB,QAAS,CAAA,CAAC,CACxCF,CAAAA,CAAAA,CAAS,WAAW,IACpBA,CAAAA,CAAAA,CAAS,QAAS,CAAA,GAAA,CAAI,EAAE,CAAE,CAAA,EAAG,CAC7BA,CAAAA,CAAAA,CAAS,OAAO,QAAS,CAAA,GAAA,CAAI,CAAE,CAAA,CAAA,CAAE,CAAC,CAGlCA,CAAAA,CAAAA,CAAS,MAAO,CAAA,OAAA,CAAQ,MAAM,IAC9BA,CAAAA,CAAAA,CAAS,MAAO,CAAA,OAAA,CAAQ,OAAO,IAC/BA,CAAAA,CAAAA,CAAS,MAAO,CAAA,MAAA,CAAO,IAAK,CAAA,EAAA,CAC5BA,CAAS,CAAA,MAAA,CAAO,OAAO,GAAI,CAAA,EAAA,CAC3BA,CAAS,CAAA,MAAA,CAAO,OAAO,IAAK,CAAA,GAAA,CAC5BA,CAAS,CAAA,MAAA,CAAO,OAAO,KAAM,CAAA,EAAA,CAC7BA,CAAS,CAAA,MAAA,CAAO,MAAO,CAAA,GAAA,CAAI,EAC3BA,CAAAA,CAAAA,CAAS,OAAO,MAAO,CAAA,MAAA,CAAO,GAE9BC,CAAAA,CAAAA,CAAa,IAAIE,YAAa,CAAA,QAAQ,CAEtCJ,CAAAA,CAAAA,CAAS,UAAU,OAAQ,CAAA,IAAA,CAC3BA,CAAS,CAAA,SAAA,CAAU,IAAKK,CAAAA,aAC5B,CAkBI,CAAA,QAAA,CAhBW,IAAI,CACZJ,CAAAA,EAAUF,GAAM,CAAA,GAAA,CAAIE,CAAQ,CAC5BC,CAAAA,CAAAA,EAAcH,GAAM,CAAA,GAAA,CAAIG,CAAY,EAC3C,CAAA,CAcI,UAZa,CAAA,IAAI,CACdD,CAAUF,EAAAA,GAAAA,CAAM,MAAOE,CAAAA,CAAQ,EAC/BC,CAAcH,EAAAA,GAAAA,CAAM,MAAOG,CAAAA,CAAY,EAC9C,CAUI,CAAA,OAAA,CARU,IAAI,EASlB,CACJ","file":"chunk-EMOXTQZZ.js","sourcesContent":["import { getThreeJsContext, ThreeJsContextManager } from \"core/game_engine/game_context\";\nimport { Nullable } from \"core/lifecyle\";\nimport { AmbientLight, CameraHelper, DirectionalLight, DirectionalLightHelper, PCFShadowMap } from \"three\"\n\nexport interface Lighting{\n    mount:()=>void;\n    activate:()=>void;\n    deactivate:()=>void;\n    unmount:()=>void;\n}\n\n\nexport const createLighting=():Lighting=>{\n    const ctx:ThreeJsContextManager=getThreeJsContext();\n    const {scene,renderer}={scene:ctx.get('scene'),renderer:ctx.get('renderer')}\n\n    let dirLight:Nullable<DirectionalLight>;\n    let ambientLight:Nullable<AmbientLight>;\n    \n    const mount=()=>{\n        dirLight=new DirectionalLight(0xffffff,5);\n        dirLight.castShadow=true;\n        dirLight.position.set(0,1,0.5);\n        dirLight.target.position.set(0,0,0);\n\n        \n        dirLight.shadow.mapSize.width=1024;\n        dirLight.shadow.mapSize.height=1024;\n        dirLight.shadow.camera.near=0.1;\n        dirLight.shadow.camera.far=50;\n        dirLight.shadow.camera.left=-10;\n        dirLight.shadow.camera.right=10;\n        dirLight.shadow.camera.top=10;\n        dirLight.shadow.camera.bottom=-10;\n\n        ambientLight=new AmbientLight(0xffffff);\n\n        renderer.shadowMap.enabled=true;\n        renderer.shadowMap.type=PCFShadowMap;\n    }\n\n    const activate=()=>{\n        if(dirLight) scene.add(dirLight);\n        if(ambientLight) scene.add(ambientLight);\n    }\n\n    const deactivate=()=>{\n        if(dirLight) scene.remove(dirLight);\n        if(ambientLight) scene.remove(ambientLight);\n    }\n\n    const unmount=()=>{\n\n    }\n\n    return{\n        mount:mount,\n        activate:activate,\n        deactivate:deactivate,\n        unmount:unmount\n    }\n}"]}