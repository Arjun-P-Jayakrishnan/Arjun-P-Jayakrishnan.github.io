{"version":3,"sources":["../src/components/threejs/scene_inspector.ts"],"names":["template","SceneInspector","clone","eventBusManager","data","resizer","panel","e","newWidth","scene","objects","materialsMap","traverse","object","node","child","mat","treeNode","label","treeRoot","nodes","li","header","isCollapsed","nodeList","nodeRoot","ul"],"mappings":"AAKA,IAAMA,EAAW,QAAS,CAAA,aAAA,CAAc,UAAU,CAAA,CAClDA,EAAS,SAAY,CAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAA,CA2CRC,IAAAA,CAAAA,CAAN,cAA6B,WAAY,CAO9C,WAAc,EAAA,CACZ,KAAM,EAAA,CACN,IAAK,CAAA,IAAA,CAAO,IAAK,CAAA,YAAA,CAAa,CAAE,IAAM,CAAA,MAAO,CAAC,CAAA,CAC9C,IAAMC,CAAAA,CAAQF,CAAS,CAAA,OAAA,CAAQ,UAAU,IAAI,CAAA,CAE7C,IAAK,CAAA,IAAA,CAAK,WAAYE,CAAAA,CAAK,CAC3B,CAAA,IAAA,CAAK,MAAQ,CACX,YAAA,CAAc,IACd,CAAA,UAAA,CAAY,KACd,CAAA,CAEA,IAAK,CAAA,OAAA,CAAU,KAAK,IAAK,CAAA,aAAA,CAAc,kBAAkB,CAAA,CAEzD,IAAK,CAAA,QAAA,CAAW,CACd,OAAA,CAAS,EACT,CAAA,SAAA,CAAW,EACb,CAEA,CAAA,IAAA,CAAK,YAAa,GACpB,CAEA,IAAI,eAAA,CAAgBC,CAAkC,CAAA,CACpD,KAAK,QAAWA,CAAAA,CAAAA,CAAgB,QAChC,CAAA,IAAA,CAAK,UAAU,EAAG,CAAA,iBAAA,CAAoBC,CAAS,EAAA,CAC7C,IAAK,CAAA,mBAAA,CAAoBA,CAAI,EAC/B,CAAC,EACH,CAEA,mBAAoBA,CAAAA,CAAAA,CAAmB,CACrC,IAAA,CAAK,KAAM,CAAA,YAAA,CAAe,CAAC,IAAK,CAAA,KAAA,CAAM,YAElC,CAAA,IAAA,CAAK,KAAM,CAAA,YAAA,CACb,IAAK,CAAA,OAAA,CAAQ,UAAU,GAAI,CAAA,QAAQ,CAEnC,EAAA,IAAA,CAAK,QAAQ,SAAU,CAAA,MAAA,CAAO,QAAQ,CAAA,CAClCA,EAAK,KAAS,EAAA,IAAA,EAAQA,CAAK,CAAA,KAAA,GAAU,MACvC,EAAA,IAAA,CAAK,UAAWA,CAAAA,CAAAA,CAAK,KAAK,CAGhC,EAAA,CAEA,YAAe,EAAA,CACb,IAAMC,CAAAA,CAAuB,IAAK,CAAA,IAAA,CAAK,cAAc,UAAU,CAAA,CACzDC,CAAqB,CAAA,IAAA,CAAK,IAAK,CAAA,aAAA,CAAc,kBAAkB,CAAA,CAErED,EAAQ,gBAAiB,CAAA,WAAA,CAAcE,CAAM,EAAA,CAC3C,KAAK,KAAM,CAAA,UAAA,CAAa,IACxB,CAAA,QAAA,CAAS,KAAK,KAAM,CAAA,MAAA,CAAS,WAC7BA,CAAAA,CAAAA,CAAE,cAAe,GACnB,CAAC,CAAA,CAED,OAAO,gBAAiB,CAAA,WAAA,CAAcA,CAAM,EAAA,CAC1C,GAAI,CAAC,IAAK,CAAA,KAAA,CAAM,WAAY,OAE5B,IAAMC,CAAW,CAAA,MAAA,CAAO,UAAcD,CAAAA,CAAAA,CAAiB,OAEvDD,CAAAA,CAAAA,CAAM,MAAM,KAAQ,CAAA,CAAA,EAAG,IAAK,CAAA,GAAA,CAAI,IAAK,CAAA,GAAA,CAAIE,CAAU,CAAA,GAAG,EAAG,GAAG,CAAC,CAC/D,EAAA,EAAA,CAAC,CAED,CAAA,MAAA,CAAO,gBAAiB,CAAA,SAAA,CAAYD,GAAM,CACpC,IAAA,CAAK,KAAM,CAAA,UAAA,GACb,IAAK,CAAA,KAAA,CAAM,UAAa,CAAA,KAAA,CACxB,SAAS,IAAK,CAAA,KAAA,CAAM,MAAS,CAAA,EAAA,EAEjC,CAAC,EACH,CAEA,iBAAA,EAAoB,CAClB,IAAK,CAAA,KAAA,CAAM,YAAe,CAAA,IAAA,CAE1B,KAAK,OAAQ,CAAA,SAAA,CAAU,GAAI,CAAA,QAAQ,EACrC,CAEQ,gBAAA,CAAiBE,CAAwB,CAAA,CAC/C,IAAMC,CAAAA,CAAsB,EAAC,CACvBC,EAAsC,IAAI,GAAA,CAE1CC,CAAYC,CAAAA,CAAAA,EAA+B,CAC/C,IAAMC,CAAiB,CAAA,CACrB,GAAID,CAAO,CAAA,IAAA,CACX,KAAOA,CAAAA,CAAAA,CAAO,IAAQ,EAAA,EAAA,CAAKA,CAAO,CAAA,IAAA,CAAOA,EAAO,IAChD,CAAA,IAAA,CAAMA,CAAO,CAAA,IAAA,CACb,MAAO,EACT,CAEA,CAAA,OAAAA,EAAO,QAAS,CAAA,OAAA,CAASE,CAAU,EAAA,CACjCD,CAAK,CAAA,KAAA,CAAM,IAAKF,CAAAA,CAAAA,CAASG,CAAK,CAAC,EACjC,CAAC,CAAA,CAEG,UAAcF,GAAAA,CAAAA,EAAUA,CAAO,CAAA,QAAA,EAAA,CACR,MAAM,OAAQA,CAAAA,CAAAA,CAAO,QAAQ,CAAA,CAClDA,CAAO,CAAA,QAAA,CACP,CAACA,CAAAA,CAAO,QAAQ,CACf,EAAA,OAAA,CAASG,CAAQ,EAAA,CAIfL,EAAa,GAAIK,CAAAA,CAAAA,CAAI,IAAI,CAAA,EAC5BL,EAAa,GAAIK,CAAAA,CAAAA,CAAI,IAAM,CAAA,CACzB,EAAIA,CAAAA,CAAAA,CAAI,IACR,CAAA,KAAA,CAAOA,EAAI,IAAQ,EAAA,EAAA,CAAKA,CAAI,CAAA,IAAA,CAAOA,CAAI,CAAA,IAAA,CACvC,IAAM,CAAA,UAAA,CACN,MAAO,EACT,CAAC,EAEL,CAAC,CAAA,CAGIF,CACT,CAAA,CAEA,OAAAL,CAAM,CAAA,QAAA,CAAS,OAASM,CAAAA,CAAAA,EAAU,CAChCL,CAAAA,CAAQ,IAAKE,CAAAA,CAAAA,CAASG,CAAK,CAAC,EAC9B,CAAC,CAAA,CAEM,CACL,OAAA,CAASL,CACT,CAAA,SAAA,CAAW,MAAM,IAAKC,CAAAA,CAAAA,CAAa,MAAO,EAAC,CAC7C,CACF,CAEU,UAAA,CAAWF,EAAc,CACjC,IAAA,CAAK,QAAW,CAAA,IAAA,CAAK,gBAAiBA,CAAAA,CAAK,CAE3C,CAAA,IAAMQ,EAAW,IAAK,CAAA,IAAA,CAAK,aAAc,CAAA,YAAY,EACrDA,CAAS,CAAA,SAAA,CAAY,EAErB,CAAA,IAAA,CAAK,YAAY,SAAWA,CAAAA,CAAAA,CAAU,IAAK,CAAA,QAAA,CAAS,OAAO,CAAA,CAC3D,IAAK,CAAA,WAAA,CAAY,YAAaA,CAAU,CAAA,IAAA,CAAK,QAAS,CAAA,SAAS,EACjE,CAEQ,WAAYC,CAAAA,CAAAA,CAAeC,EAAmBC,CAAmB,CAAA,CACvE,IAAMC,CAAAA,CAAK,QAAS,CAAA,aAAA,CAAc,IAAI,CAAA,CACtCA,EAAG,SAAU,CAAA,GAAA,CAAI,UAAY,CAAA,WAAW,EAExC,IAAMC,CAAAA,CAAS,QAAS,CAAA,aAAA,CAAc,KAAK,CAC3CA,CAAAA,CAAAA,CAAO,SAAU,CAAA,GAAA,CAAI,iBAAiB,CAAA,CACtCA,CAAO,CAAA,WAAA,CAAc,UAAKJ,CAAK,CAAA,CAAA,CAE/BI,CAAO,CAAA,gBAAA,CAAiB,OAAUf,CAAAA,CAAAA,EAAM,CACtCc,CAAAA,CAAG,UAAU,MAAO,CAAA,WAAW,CAC/B,CAAA,IAAME,CAAcF,CAAAA,CAAAA,CAAG,SAAU,CAAA,QAAA,CAAS,WAAW,CACrDC,CAAAA,CAAAA,CAAO,WAAcC,CAAAA,CAAAA,CAAc,UAAKL,CAAK,CAAA,CAAA,CAAK,CAAKA,OAAAA,EAAAA,CAAK,GAC9D,CAAC,CAAA,CAED,IAAMM,CAAAA,CAAW,QAAS,CAAA,aAAA,CAAc,IAAI,CAAA,CAC5CA,EAAS,SAAU,CAAA,GAAA,CAAI,kBAAkB,CAAA,CACzCJ,CAAM,CAAA,OAAA,CAASN,CAAS,EAAA,CACtBU,EAAS,WAAY,CAAA,IAAA,CAAK,cAAeV,CAAAA,CAAI,CAAC,EAChD,CAAC,CAAA,CAEDO,EAAG,WAAYC,CAAAA,CAAM,CACrBD,CAAAA,CAAAA,CAAG,WAAYG,CAAAA,CAAQ,CACvBL,CAAAA,CAAAA,CAAS,YAAYE,CAAE,EACzB,CAEQ,cAAA,CAAeP,CAA6B,CAAA,CAClD,IAAMW,CAAAA,CAAW,SAAS,aAAc,CAAA,IAAI,CAC5CA,CAAAA,CAAAA,CAAS,SAAU,CAAA,GAAA,CAAI,WAAW,CAAA,CAElC,IAAMP,CAAQ,CAAA,QAAA,CAAS,aAAc,CAAA,KAAK,CAM1C,CAAA,GALAA,CAAM,CAAA,SAAA,CAAU,IAAI,YAAY,CAAA,CAChCA,CAAM,CAAA,WAAA,CAAc,GAAGJ,CAAK,CAAA,KAAK,CAAKA,EAAAA,EAAAA,CAAAA,CAAK,IAAI,CAE/CW,CAAAA,CAAAA,CAAAA,CAAAA,CAAS,WAAYP,CAAAA,CAAK,CAEtBJ,CAAAA,CAAAA,CAAK,KAAM,CAAA,MAAA,CAAS,EAAG,CACzBW,CAAAA,CAAS,SAAU,CAAA,GAAA,CAAI,WAAW,CAAA,CAElC,IAAMC,CAAAA,CAAK,SAAS,aAAc,CAAA,IAAI,CAEtCZ,CAAAA,CAAAA,CAAK,KAAM,CAAA,OAAA,CAASA,CAAS,EAAA,CAC3BY,EAAG,WAAY,CAAA,IAAA,CAAK,cAAeZ,CAAAA,CAAI,CAAC,EAC1C,CAAC,CAEDI,CAAAA,CAAAA,CAAM,iBAAiB,OAAS,CAAA,IAAM,CACpCO,CAAAA,CAAS,SAAU,CAAA,MAAA,CAAO,WAAW,EACvC,CAAC,CAEDA,CAAAA,CAAAA,CAAS,WAAYC,CAAAA,CAAE,EACzB,CAEA,OAAOD,CACT,CAEA,iBAAoB,EAAA,CACE,IAAK,CAAA,IAAA,CAAK,aAAc,CAAA,YAAY,CAE5C,CAAA,gBAAA,CAAiB,QAAS,IAAM,CAC1C,IAAK,CAAA,iBAAA,GACP,CAAC,EACH,CAEA,oBAAA,EAAuB,EACzB","file":"chunk-ESNUHDK6.js","sourcesContent":["import { EventBus } from \"@events/eventBus\";\nimport { EventBusManager } from \"@events/EventBusManager\";\nimport { Material, Object3D, Scene } from \"three\";\nimport { DebugEvents } from \"types/eventType\";\n\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = `\n    <link rel=\"stylesheet\" href=\"/style/scene_inspector.css\">\n    <div class=\"inspector-wrapper\">\n\n      <div class=\"resizer\"></div>\n    \n      <div class=\"scene-inspector hidden\">\n        <div class=\"inspector-header\">\n          <span class=\"title\">Scene Inspector</span>\n          <button class=\"close-btn\"> âœ• </button>\n        </div>\n\n        <div class=\"inspector-content\">\n          <ul class=\"tree-view\">\n\n          </ul>\n        </div>\n      </div>\n\n      \n    </div>\n`;\n\n//\n\ninterface State {\n  isMenuHidden: boolean;\n  isResizing: boolean;\n}\n\ninterface TreeNode {\n  id: string;\n  label: string;\n  //  type: \"mesh\" | \"camera\" | \"light\" | \"animation\" | \"sprite\" | \"group\";\n  type: string;\n  nodes: TreeNode[];\n}\n\ninterface TreeView {\n  Objects: TreeNode[];\n  Materials: TreeNode[];\n}\n\nexport class SceneInspector extends HTMLElement {\n  root: ShadowRoot;\n  eventBus: EventBus<DebugEvents> | undefined;\n  state: State;\n  element: Element;\n  treeView: TreeView;\n\n  constructor() {\n    super();\n    this.root = this.attachShadow({ mode: \"open\" });\n    const clone = template.content.cloneNode(true);\n\n    this.root.appendChild(clone);\n    this.state = {\n      isMenuHidden: true,\n      isResizing: false,\n    };\n\n    this.element = this.root.querySelector(\".scene-inspector\")!;\n\n    this.treeView = {\n      Objects: [],\n      Materials: [],\n    };\n\n    this.handleResize();\n  }\n\n  set eventBusManager(eventBusManager: EventBusManager) {\n    this.eventBus = eventBusManager.debugBus;\n    this.eventBus?.on(\"debug:inspector\", (data) => {\n      this.handleShowHideEvent(data);\n    });\n  }\n\n  handleShowHideEvent(data: DebugEvents) {\n    this.state.isMenuHidden = !this.state.isMenuHidden;\n\n    if (this.state.isMenuHidden) {\n      this.element.classList.add(\"hidden\");\n    } else {\n      this.element.classList.remove(\"hidden\");\n      if (data.scene != null && data.scene !== undefined) {\n        this.renderTree(data.scene);\n      }\n    }\n  }\n\n  handleResize() {\n    const resizer: HTMLElement = this.root.querySelector(\".resizer\")!;\n    const panel: HTMLElement = this.root.querySelector(\".scene-inspector\")!;\n\n    resizer.addEventListener(\"mousedown\", (e) => {\n      this.state.isResizing = true;\n      document.body.style.cursor = \"ew-resize\";\n      e.preventDefault();\n    });\n\n    window.addEventListener(\"mousemove\", (e) => {\n      if (!this.state.isResizing) return;\n\n      const newWidth = window.innerWidth - (e as MouseEvent).clientX;\n\n      panel.style.width = `${Math.min(Math.max(newWidth, 200), 600)}px`;\n    });\n\n    window.addEventListener(\"mouseup\", (e) => {\n      if (this.state.isResizing) {\n        this.state.isResizing = false;\n        document.body.style.cursor = \"\";\n      }\n    });\n  }\n\n  toggleCloseButton() {\n    this.state.isMenuHidden = true;\n\n    this.element.classList.add(\"hidden\");\n  }\n\n  private collectSceneData(scene: Scene): TreeView {\n    const objects: TreeNode[] = [];\n    const materialsMap: Map<string, TreeNode> = new Map();\n\n    const traverse = (object: Object3D): TreeNode => {\n      const node: TreeNode = {\n        id: object.uuid,\n        label: object.name == \"\" ? object.type : object.name,\n        type: object.type,\n        nodes: [],\n      };\n\n      object.children.forEach((child) => {\n        node.nodes.push(traverse(child));\n      });\n\n      if (\"material\" in object && object.material) {\n        const mats: Material[] = Array.isArray(object.material)\n          ? object.material\n          : [object.material];\n        mats.forEach((mat) => {\n          /**\n           * Ensure that a material is registered only once to avoid duplicate entry\n           */\n          if (!materialsMap.has(mat.uuid)) {\n            materialsMap.set(mat.uuid, {\n              id: mat.uuid,\n              label: mat.name == \"\" ? mat.type : mat.name,\n              type: \"material\",\n              nodes: [],\n            });\n          }\n        });\n      }\n\n      return node;\n    };\n\n    scene.children.forEach((child) => {\n      objects.push(traverse(child));\n    });\n\n    return {\n      Objects: objects,\n      Materials: Array.from(materialsMap.values()),\n    };\n  }\n\n  protected renderTree(scene: Scene) {\n    this.treeView = this.collectSceneData(scene);\n\n    const treeNode = this.root.querySelector(\".tree-view\")!;\n    treeNode.innerHTML = ``;\n\n    this.addCategory(\"Objects\", treeNode, this.treeView.Objects);\n    this.addCategory(\"Materials\", treeNode, this.treeView.Materials);\n  }\n\n  private addCategory(label: string, treeRoot: Element, nodes: TreeNode[]) {\n    const li = document.createElement(\"li\");\n    li.classList.add(\"category\", \"collapsed\");\n\n    const header = document.createElement(\"div\");\n    header.classList.add(\"category-toggle\");\n    header.textContent = `â®ž ${label}`;\n\n    header.addEventListener(\"click\", (e) => {\n      li.classList.toggle(\"collapsed\");\n      const isCollapsed = li.classList.contains(\"collapsed\");\n      header.textContent = isCollapsed ? `â®ž ${label}` : `â–¼ ${label}`;\n    });\n\n    const nodeList = document.createElement(\"ul\");\n    nodeList.classList.add(\"category-content\");\n    nodes.forEach((node) => {\n      nodeList.appendChild(this.renderTreeNode(node));\n    });\n\n    li.appendChild(header);\n    li.appendChild(nodeList);\n    treeRoot.appendChild(li);\n  }\n\n  private renderTreeNode(node: TreeNode): HTMLElement {\n    const nodeRoot = document.createElement(\"li\");\n    nodeRoot.classList.add(\"tree-node\");\n\n    const label = document.createElement(\"div\");\n    label.classList.add(\"node-label\");\n    label.textContent = `${node.label} (${node.type})`;\n\n    nodeRoot.appendChild(label);\n\n    if (node.nodes.length > 0) {\n      nodeRoot.classList.add(\"collapsed\");\n\n      const ul = document.createElement(\"ul\");\n\n      node.nodes.forEach((node) => {\n        ul.appendChild(this.renderTreeNode(node));\n      });\n\n      label.addEventListener(\"click\", () => {\n        nodeRoot.classList.toggle(\"collapsed\");\n      });\n\n      nodeRoot.appendChild(ul);\n    }\n\n    return nodeRoot;\n  }\n\n  connectedCallback() {\n    const closeButton = this.root.querySelector(\".close-btn\")!;\n\n    closeButton.addEventListener(\"click\", () => {\n      this.toggleCloseButton();\n    });\n  }\n\n  disconnectedCallback() {}\n}\n"]}