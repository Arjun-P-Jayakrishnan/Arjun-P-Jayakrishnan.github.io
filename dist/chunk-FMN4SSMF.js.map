{"version":3,"sources":["../src/components/about/experience.ts"],"names":["template","ExperiencePage","clone","header","li","details","d","button","index","collapsibleElement","fn","e","data","main","title","company","meta","duration","location","responsibilities","documentFragment","responsibility","_li","entry","dataList"],"mappings":"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","file":"chunk-FMN4SSMF.js","sourcesContent":["const template = document.createElement(\"template\");\ntemplate.innerHTML = `\n    <link rel=\"stylesheet\" href=\"/style/experience.css\">\n    <div class=\"experience\">\n        <ul class=\"job-list\">\n          <li class=\"job-item\">\n            <div class=\"job-header\">\n              <h3 class=\"job-title\">Title</h3>\n              <h5 class=\"job-duration\">Duration</h5>\n            </div>\n            <div class=\"job-details\">\n              <ul class=\"job-responsibilities\">\n                <li class=\"job-responsibility-item\">Done task which improved some item</li>\n              </ul>\n            </div>\n          </li>\n        </ul>\n    </div>\n`;\n\ninterface Components {\n  root: HTMLDivElement | null;\n  jobList: HTMLUListElement | null;\n}\n\nexport interface JobExperience {\n  title: string;\n  company: string;\n  duration: string;\n  location: string;\n  responsibilities: string[];\n}\n\nexport class ExperiencePage extends HTMLElement {\n  root: ShadowRoot;\n  components: Components;\n  events: Record<\n    string,\n    { button: HTMLButtonElement; callback: (e: Event) => void }\n  > = {};\n\n  constructor() {\n    super();\n    this.root = this.attachShadow({ mode: \"open\" });\n\n    const clone = template.content.cloneNode(true);\n\n    this.root.appendChild(clone);\n\n    this.components = {\n      root: this.root.querySelector(\".experience\") as HTMLDivElement,\n      jobList: this.root.querySelector(\".job-list\") as HTMLUListElement,\n    };\n  }\n\n  connectedCallback() {}\n\n  disconnectedCallback() {}\n\n  private bindEvents(header: HTMLDivElement, li: HTMLLIElement) {\n    console.log(header, li);\n    header.addEventListener(\"click\", () => {\n      const details = li.querySelector(\".job-details\") as HTMLDivElement;\n      this.components.jobList\n        ?.querySelectorAll(\".job-details.active\")\n        .forEach((d) => {\n          if (d !== details) d.classList.remove(\"active\");\n        });\n\n      console.log(\"toggle visibility\");\n\n      details.classList.toggle(\"active\");\n    });\n  }\n\n  private addEvent(\n    button: HTMLButtonElement,\n    index: number,\n    collapsibleElement: HTMLDivElement\n  ) {\n    const fn = (e: Event) => {\n      collapsibleElement.classList.toggle(\"hidden\");\n      console.log(\"button is clicked \", index);\n    };\n    this.events[`button :${index}`] = {\n      button: button,\n      callback: fn,\n    };\n    button.addEventListener(\"click\", fn);\n    console.log(\"attaching event\", index);\n  }\n\n  private addJobExperience(data: {\n    title: string;\n    company: string;\n    location: string;\n    duration: string;\n    responsibilities: string[];\n    index: number;\n  }): HTMLLIElement {\n    const li = document.createElement(\"li\");\n    li.classList.add(\"job-item\");\n\n    const header = document.createElement(\"div\");\n    header.classList.add(\"job-header\");\n\n    const main = document.createElement(\"div\");\n    main.classList.add(\"job-main\");\n\n    const title = document.createElement(\"h3\");\n    title.classList.add(\"job-title\");\n    title.textContent = data.title;\n    main.appendChild(title);\n\n    if (data.company) {\n      const company = document.createElement(\"h5\");\n      company.classList.add(\"job-company\");\n      company.textContent = data.company;\n      main.appendChild(company);\n    }\n\n    const meta = document.createElement(\"div\");\n    meta.classList.add(\"job-meta\");\n\n    const duration = document.createElement(\"h5\");\n    duration.classList.add(\"job-duration\");\n    duration.textContent = data.duration;\n    meta.appendChild(duration);\n\n    if (data.location) {\n      const location = document.createElement(\"span\");\n      location.classList.add(\"job-location\");\n      location.textContent = data.location;\n      meta.appendChild(location);\n    }\n\n    header.appendChild(main);\n    header.appendChild(meta);\n    // header.appendChild(button);\n\n    const details = document.createElement(\"div\");\n    details.classList.add(\"job-details\");\n    // details.classList.add(\"hidden\");\n\n    // this.addEvent(button, data.index, details);\n\n    const responsibilities = document.createElement(\"ul\");\n    responsibilities.classList.add(\"job-responsibilities\");\n\n    const documentFragment = document.createDocumentFragment();\n\n    data.responsibilities.forEach((responsibility) => {\n      const _li = document.createElement(\"li\");\n      _li.classList.add(\"job-responsibility-item\");\n      _li.textContent = responsibility;\n      documentFragment.appendChild(_li);\n    });\n\n    responsibilities.appendChild(documentFragment);\n    details.appendChild(responsibilities);\n    li.appendChild(header);\n    li.appendChild(details);\n\n    this.bindEvents(header, li);\n\n    return li;\n  }\n\n  private removeEvents() {\n    console.log(\"remove all\");\n    Object.entries(this.events).forEach((entry) => {\n      entry[1].button.removeEventListener(\"click\", entry[1].callback);\n    });\n  }\n\n  private inflateCarousel(dataList: Array<JobExperience>) {\n    if (!this.components.jobList) return;\n    this.removeEvents();\n    this.components.jobList.innerHTML = \"\";\n\n    dataList.forEach((data, index) => {\n      this.components.jobList?.appendChild(\n        this.addJobExperience({\n          ...data,\n          index: index,\n        })\n      );\n    });\n  }\n\n  set Experience(data: Array<JobExperience>) {\n    console.log(\"experience\", data);\n    this.inflateCarousel(data);\n  }\n}\n"]}