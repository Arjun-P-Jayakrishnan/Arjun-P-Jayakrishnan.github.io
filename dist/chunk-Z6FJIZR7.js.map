{"version":3,"sources":["../src/graphics/internal/internal.ts"],"sourcesContent":["import {\r\n  AxesHelper,\r\n  Camera,\r\n  PerspectiveCamera,\r\n  Scene,\r\n  WebGLRenderer,\r\n} from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\r\n\r\nexport interface ThreeJSRenderProps {\r\n  /**\r\n   * Properties for camera\r\n   */\r\n  camera: {\r\n    fov?: number;\r\n    aspect?: number;\r\n    near?: number;\r\n    far?: number;\r\n  };\r\n  /**\r\n   * Tag to which renderer has to be attached\r\n   */\r\n  domMountTag: string;\r\n}\r\n\r\nexport interface ThreeJsRenderReference {\r\n  scene: Scene;\r\n  camera: Camera;\r\n  renderer: WebGLRenderer;\r\n  controls: OrbitControls;\r\n\r\n  /**\r\n   * @description Mount\r\n   */\r\n  register: (loop: () => void) => void;\r\n  /**\r\n   * @description Loop\r\n   */\r\n  render: () => void;\r\n  /**\r\n   * @description UnMount\r\n   */\r\n  dispose: (disposeCallbacks: Array<() => void>) => void;\r\n}\r\n\r\n/**\r\n * @description Creates a threejs environment in which further additions can be made\r\n * @param props properties that define the setup of game engine\r\n * @returns Render Lifecycle methods\r\n */\r\nexport const createThreeJsInstance = (\r\n  props: ThreeJSRenderProps\r\n): ThreeJsRenderReference => {\r\n  //Local references\r\n\r\n  let scene: Scene = new Scene();\r\n\r\n  let camera: PerspectiveCamera = new PerspectiveCamera(\r\n    props.camera.fov,\r\n    props.camera.aspect,\r\n    props.camera.near,\r\n    props.camera.far\r\n  );\r\n\r\n  let renderer: WebGLRenderer = new WebGLRenderer({ antialias: true });\r\n\r\n  let controls: OrbitControls = new OrbitControls(camera, renderer.domElement);\r\n\r\n  let animationLoop: () => void;\r\n\r\n  /**\r\n   * @description add the renderer so that it can display the 3d\r\n   * @param tag the dom tag to which the renderer is to be attached\r\n   */\r\n  const _mountRenderer = (tag: string) => {\r\n    const container = document.getElementById(tag);\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n    if (container) {\r\n      container.appendChild(renderer.domElement);\r\n    } else {\r\n      console.warn(`Could not find element with selector tag : ${tag}`);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @description setup initial properties of orbital controls\r\n   */\r\n  const _configureControls = () => {\r\n    controls.enableDamping = true;\r\n    controls.dampingFactor = 0.25;\r\n    controls.screenSpacePanning = false;\r\n    controls.maxPolarAngle = Math.PI / 2;\r\n  };\r\n\r\n  /**\r\n   * @description handle resize of the canvas\r\n   */\r\n  const _handleResize = () => {\r\n    const width = window.innerWidth;\r\n    const height = window.innerHeight;\r\n\r\n    camera.aspect = width / height;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize(width, height);\r\n  };\r\n\r\n  /**\r\n   * @description event listener to monitor for window size changes\r\n   */\r\n  const _addEvents = () => {\r\n    window.addEventListener(\"resize\", _handleResize);\r\n  };\r\n\r\n  const addAxesHelper = () => {\r\n    const axes_helper = new AxesHelper();\r\n    scene.add(axes_helper);\r\n  };\r\n\r\n  /**\r\n   * @description Life cycle method similar to Mount\r\n   * @param loop callback for all rendering\r\n   */\r\n  const register = (loop: () => void) => {\r\n    animationLoop = loop;\r\n\r\n    _mountRenderer(props.domMountTag);\r\n    _configureControls();\r\n    _addEvents();\r\n\r\n    camera.position.set(0, 0, 0.5);\r\n\r\n    addAxesHelper();\r\n    _handleResize();\r\n  };\r\n\r\n  /**\r\n   * @description Life cycle method similar to update\r\n   */\r\n  const render = () => {\r\n    //Recursive callback function\r\n    requestAnimationFrame(render);\r\n\r\n    controls.update();\r\n\r\n    animationLoop();\r\n\r\n    //Render scene from cameras perspective\r\n    renderer.render(scene, camera);\r\n  };\r\n\r\n  /**\r\n   * @description Life cycle method similar to UnMount\r\n   * @param disposeCallbacks array of dispose callbacks to be executed\r\n   */\r\n  const dispose = (disposeCallbacks: Array<() => void>) => {\r\n    disposeCallbacks.forEach((fn) => fn());\r\n\r\n    window.removeEventListener(\"window\", _addEvents);\r\n\r\n    renderer.dispose();\r\n    controls.dispose();\r\n  };\r\n\r\n  return Object.freeze({\r\n    scene: scene,\r\n    camera: camera,\r\n    controls: controls,\r\n    renderer: renderer,\r\n\r\n    register: register,\r\n    render: render,\r\n    dispose: dispose,\r\n  });\r\n};\r\n"],"mappings":";AAAA;AAAA,EACE;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,OACK;AACP,SAAS,qBAAqB;AA2CvB,IAAM,wBAAwB,CACnC,UAC2B;AAG3B,MAAI,QAAe,IAAI,MAAM;AAE7B,MAAI,SAA4B,IAAI;AAAA,IAClC,MAAM,OAAO;AAAA,IACb,MAAM,OAAO;AAAA,IACb,MAAM,OAAO;AAAA,IACb,MAAM,OAAO;AAAA,EACf;AAEA,MAAI,WAA0B,IAAI,cAAc,EAAE,WAAW,KAAK,CAAC;AAEnE,MAAI,WAA0B,IAAI,cAAc,QAAQ,SAAS,UAAU;AAE3E,MAAI;AAMJ,QAAM,iBAAiB,CAAC,QAAgB;AACtC,UAAM,YAAY,SAAS,eAAe,GAAG;AAE7C,aAAS,QAAQ,OAAO,YAAY,OAAO,WAAW;AACtD,aAAS,cAAc,OAAO,gBAAgB;AAE9C,QAAI,WAAW;AACb,gBAAU,YAAY,SAAS,UAAU;AAAA,IAC3C,OAAO;AACL,cAAQ,KAAK,8CAA8C,GAAG,EAAE;AAAA,IAClE;AAAA,EACF;AAKA,QAAM,qBAAqB,MAAM;AAC/B,aAAS,gBAAgB;AACzB,aAAS,gBAAgB;AACzB,aAAS,qBAAqB;AAC9B,aAAS,gBAAgB,KAAK,KAAK;AAAA,EACrC;AAKA,QAAM,gBAAgB,MAAM;AAC1B,UAAM,QAAQ,OAAO;AACrB,UAAM,SAAS,OAAO;AAEtB,WAAO,SAAS,QAAQ;AACxB,WAAO,uBAAuB;AAE9B,aAAS,QAAQ,OAAO,MAAM;AAAA,EAChC;AAKA,QAAM,aAAa,MAAM;AACvB,WAAO,iBAAiB,UAAU,aAAa;AAAA,EACjD;AAEA,QAAM,gBAAgB,MAAM;AAC1B,UAAM,cAAc,IAAI,WAAW;AACnC,UAAM,IAAI,WAAW;AAAA,EACvB;AAMA,QAAM,WAAW,CAAC,SAAqB;AACrC,oBAAgB;AAEhB,mBAAe,MAAM,WAAW;AAChC,uBAAmB;AACnB,eAAW;AAEX,WAAO,SAAS,IAAI,GAAG,GAAG,GAAG;AAE7B,kBAAc;AACd,kBAAc;AAAA,EAChB;AAKA,QAAM,SAAS,MAAM;AAEnB,0BAAsB,MAAM;AAE5B,aAAS,OAAO;AAEhB,kBAAc;AAGd,aAAS,OAAO,OAAO,MAAM;AAAA,EAC/B;AAMA,QAAM,UAAU,CAAC,qBAAwC;AACvD,qBAAiB,QAAQ,CAAC,OAAO,GAAG,CAAC;AAErC,WAAO,oBAAoB,UAAU,UAAU;AAE/C,aAAS,QAAQ;AACjB,aAAS,QAAQ;AAAA,EACnB;AAEA,SAAO,OAAO,OAAO;AAAA,IACnB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IAEA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AACH;","names":[]}