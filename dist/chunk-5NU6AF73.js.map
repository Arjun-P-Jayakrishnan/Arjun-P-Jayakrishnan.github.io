{"version":3,"sources":["../src/components/website/about/about.ts"],"names":["template","AboutPage","BackgroundPage","ExperiencePage","background","el","experience","button","index","clone","buttons","_","e","eventBusManager","data","offset","prevIndex","length","activeSlide","education","skills","skillItem","experienceData"],"mappings":"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","file":"chunk-5NU6AF73.js","sourcesContent":["import { EventBus } from \"@utils/event_management/eventBus\";\nimport { EventBusManager } from \"@utils/event_management/eventBusFactory\";\nimport { DisplayEvents } from \"@utils/event_management/eventType\";\nimport { BackgroundPage } from \"./background\";\nimport { ExperiencePage, JobExperience } from \"./experience\";\n\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = `\n    <link rel=\"stylesheet\" href=\"/style/about.css\">\n    <div class=\"about hidden\">\n        <div class=\"carousel\">\n          <div class=\"carousel-container\">\n            <ul class=\"carousel-track\">\n                <li class=\"slide\" data-active><slot name=\"background\">Background</slot></li>\n                <li class=\"slide\"><slot name=\"experience\">Experience</slot></li>\n                <li class=\"slide\"><slot name=\"resume\">Resume</slot></li>\n                <li class=\"slide\"><slot name=\"frameworks\">Frameworks</slot></li>\n            </ul>\n          </div>\n          <button class=\"carousel__button prev\">&#8678;</button>\n          <button class=\"carousel__button next\">&#8680;</button>\n          <div class=\"carousel_nav\">\n                <button class=\"carousel_indicator\" data-active-button></button>\n                <button class=\"carousel_indicator\"></button>\n                <button class=\"carousel_indicator\"></button>\n                <button class=\"carousel_indicator\"></button>\n          </div>\n        </div>\n    </div>\n`;\n\ninterface State {\n  currentIndex: number;\n}\n\ninterface Components {\n  about: HTMLDivElement | null;\n  carousel: HTMLDivElement | null;\n  next: HTMLButtonElement | null;\n  prev: HTMLButtonElement | null;\n  track: HTMLUListElement | null;\n  navButtons: HTMLButtonElement[];\n}\n\ninterface CarouselItems {\n  background: BackgroundPage;\n  experience: ExperiencePage;\n}\n\nexport type AboutData =\n  | {\n      isError: false;\n      records: Record<string, { type: string; data: any }>;\n    }\n  | {\n      isError: true;\n      message: string;\n    };\n\nexport class AboutPage extends HTMLElement {\n  state: State = {\n    currentIndex: 0,\n  };\n  root: ShadowRoot;\n  displayBus: EventBus<DisplayEvents> | null = null;\n  components: Components;\n  carouselItem: CarouselItems | null = null;\n\n  prevClick = (e: Event) => this.swapSlides(-1);\n  nextClick = (e: Event) => this.swapSlides(1);\n  navButtonClicks: Array<(e: Event) => void> = [];\n\n  constructor() {\n    super();\n    this.root = this.attachShadow({ mode: \"open\" });\n\n    const clone = template.content.cloneNode(true);\n\n    this.root.appendChild(clone);\n\n    const buttons = Array.from(\n      this.root.querySelector(\".carousel_nav\")?.children ?? []\n    );\n\n    this.components = {\n      about: this.root.querySelector(\".about\"),\n      carousel: this.root.querySelector(\".carousel\"),\n      next: this.root.querySelector(\".next\"),\n      prev: this.root.querySelector(\".prev\"),\n      track: this.root.querySelector(\".carousel-track\"),\n      navButtons: buttons as any as HTMLButtonElement[],\n    };\n\n    console.log(this.components.navButtons);\n\n    this.components.navButtons.forEach((_, index) => {\n      this.navButtonClicks.push((e: Event) =>\n        this.swapSlides(index - this.state.currentIndex)\n      );\n    });\n    this.defineElements();\n    this.querySlottedElements();\n  }\n\n  private defineElements = () => {\n    if (!customElements.get(\"background-page\")) {\n      customElements.define(\"background-page\", BackgroundPage);\n    }\n\n    if (!customElements.get(\"experience-page\")) {\n      customElements.define(\"experience-page\", ExperiencePage);\n    }\n  };\n\n  private querySlottedElements = () => {\n    const slotBackground = this.root.querySelector(\n      'slot[name=\"background\"]'\n    ) as HTMLSlotElement;\n\n    const nodesBackground = slotBackground?.assignedElements?.() || [];\n\n    const background = nodesBackground.find(\n      (el) => el instanceof BackgroundPage\n    ) as BackgroundPage;\n\n    const slotExperience=this.root.querySelector('slot[name=\"experience\"]') as HTMLSlotElement;\n\n    const nodesExperience = slotExperience?.assignedElements?.()||[];\n\n    const experience: ExperiencePage = nodesExperience.find(\n      (el) => el instanceof ExperiencePage\n    ) as ExperiencePage;\n    \n    this.carouselItem = {\n      background: background,\n      experience: experience,\n    };\n  };\n\n  set eventBusManager(eventBusManager: EventBusManager) {\n    this.displayBus = eventBusManager.displayBus;\n\n    this.displayBus.on(\"about:show\", this.onShow);\n    this.displayBus.on(\"about:hide\", this.onHide);\n  }\n\n  set updateData(data: AboutData) {\n    if (!data.isError) {\n      this.inflateCarousel(data.records);\n    } else {\n      this.root.innerHTML = `\n        <p>${data.message}</p>\n      `;\n    }\n  }\n\n  connectedCallback() {\n    this.bindEvents();\n  }\n\n  disconnectedCallback() {\n    this.unbindEvents();\n\n    this.displayBus?.off(\"about:show\", this.onShow);\n    this.displayBus?.off(\"about:hide\", this.onHide);\n  }\n\n  private onShow = () => {\n    this.components.about?.classList.toggle(\"hidden\", false);\n  };\n\n  private onHide = () => {\n    this.components.about?.classList.toggle(\"hidden\", true);\n  };\n\n  swapSlides(offset: number) {\n    if (!this.components.track) return;\n\n    const prevIndex = this.state.currentIndex;\n    const length = this.components.track.children.length;\n\n    this.state.currentIndex += offset;\n    if (this.state.currentIndex < 0) this.state.currentIndex = length - 1;\n    if (this.state.currentIndex >= length) this.state.currentIndex = 0;\n\n    const activeSlide = this.components.track.children[\n      prevIndex\n    ] as HTMLElement;\n\n    (\n      this.components.track.children[this.state.currentIndex] as HTMLElement\n    ).dataset.active = \"true\";\n    delete activeSlide.dataset.active;\n\n    this.components.navButtons[this.state.currentIndex].dataset.activeButton =\n      \"true\";\n    delete this.components.navButtons[prevIndex].dataset.activeButton;\n  }\n\n  private bindEvents = () => {\n    this.components.prev?.addEventListener(\"click\", this.prevClick);\n    this.components.next?.addEventListener(\"click\", this.nextClick);\n    this.components.navButtons.forEach((button, index) => {\n      button.addEventListener(\"click\", this.navButtonClicks[index]);\n    });\n  };\n\n  private unbindEvents = () => {\n    this.components.prev?.removeEventListener(\"click\", this.prevClick);\n    this.components.next?.removeEventListener(\"click\", this.nextClick);\n    this.components.navButtons.forEach((button, index) => {\n      button.removeEventListener(\"click\", this.navButtonClicks[index]);\n    });\n  };\n\n  private setBackground(data: any) {\n    if (!this.carouselItem?.background) return;\n\n    this.carouselItem.background.Summary = {\n      title: data[\"summary\"][\"title\"] ?? \"Title-Placeholder\",\n      description: data[\"summary\"][\"description\"] ?? \"Description\",\n    };\n\n    const education = data[\"education\"];\n\n    this.carouselItem.background.Education = {\n      course: education[\"course\"],\n      institute: education[\"institute\"],\n      description: education[\"description\"],\n    };\n\n    const skills: Array<any> = data[\"skills\"] as Array<any>;\n    this.carouselItem.background.Skills = skills.map((skillItem) => {\n      return {\n        title: skillItem[\"title\"],\n        tags: skillItem[\"tags\"] as Array<string>,\n      };\n    });\n  }\n\n  private setExperience(experienceData: any) {\n    if (!this.carouselItem?.experience) return;\n\n    this.carouselItem.experience.Experience = experienceData.map(\n      (data: any) => {\n        return {\n          title: data.title,\n          duration: data.duration,\n          responsibilities: data[\"responsibilities\"] as Array<string>,\n        } as JobExperience;\n      }\n    );\n  }\n\n  private inflateCarousel(data: Record<string, { type: string; data: any }>) {\n    this.setBackground(data[\"personal\"].data);\n    this.setExperience(data[\"experience\"].data);\n  }\n}\n"]}