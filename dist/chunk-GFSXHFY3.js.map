{"version":3,"sources":["../src/graphics/mechanics/controllers/plugins/mouse.ts"],"names":["createMouseController","props","state","handleMouse","e","sideways","up_down"],"mappings":"AA0BaA,IAAAA,CAAAA,CACXC,GACoB,CACpB,IAAIC,EAAe,CACjB,KAAA,CAAO,CACL,KAAA,CAAO,CACP,CAAA,KAAA,CAAO,CACT,CACA,CAAA,QAAA,CAAU,CACR,KAAO,CAAA,CAAA,CACP,IAAK,CACP,CACF,CAEMC,CAAAA,CAAAA,CAAeC,CAAkB,EAAA,CACrCF,EAAM,QAAS,CAAA,KAAA,CAAQE,EAAE,OAAUF,CAAAA,CAAAA,CAAM,MAAM,KAC/CA,CAAAA,CAAAA,CAAM,QAAS,CAAA,GAAA,CAAME,CAAE,CAAA,OAAA,CAAUF,EAAM,KAAM,CAAA,KAAA,CAE7CA,CAAM,CAAA,KAAA,CAAM,KAAQE,CAAAA,CAAAA,CAAE,QACtBF,CAAM,CAAA,KAAA,CAAM,KAAQE,CAAAA,CAAAA,CAAE,QACxB,CAAA,CAuBA,OAAO,CACL,KAAA,CAtBkB,IAAM,CACxB,QAAA,CAAS,iBAAiB,WAAaD,CAAAA,CAAW,EACpD,CAAA,CAqBE,OAnBoB,CAAA,IAAM,CAC1B,QAAS,CAAA,mBAAA,CAAoB,WAAaA,CAAAA,CAAW,EACvD,CAAA,CAkBE,YAhBkB,IAAM,CACxB,IAAME,CAAAA,CAAWH,CAAM,CAAA,QAAA,CAAS,IAC1BI,CAAUJ,CAAAA,CAAAA,CAAM,SAAS,KAE/B,CAAA,OAAAA,EAAM,QAAS,CAAA,KAAA,CAAQ,CACvBA,CAAAA,CAAAA,CAAM,QAAS,CAAA,GAAA,CAAM,EAEd,CACL,GAAA,CAAKD,CAAM,CAAA,WAAA,CAAcI,CACzB,CAAA,KAAA,CAAOJ,EAAM,WAAcK,CAAAA,CAC7B,CACF,CAMA,CACF","file":"chunk-GFSXHFY3.js","sourcesContent":["import { ControllerPlugin } from \"../plugins\";\n\n\nexport interface MouseControllerProps {\n  sensitivity: number;\n}\n\nexport interface MouseController extends ControllerPlugin {\n  getRotation: () => {\n    pitch: number;\n    yaw: number;\n  };\n}\n\ninterface State {\n  mouse: {\n    lastX: number;\n    lastY: number;\n  };\n\n  rotation: {\n    pitch: number;\n    yaw: number;\n  };\n}\n\nexport const createMouseController = (\n  props: MouseControllerProps\n): MouseController => {\n  let state: State = {\n    mouse: {\n      lastX: 0,\n      lastY: 0,\n    },\n    rotation: {\n      pitch: 0,\n      yaw: 0,\n    },\n  };\n\n  const handleMouse = (e: MouseEvent) => {\n    state.rotation.pitch = e.clientY - state.mouse.lastY;\n    state.rotation.yaw = e.clientX - state.mouse.lastX;\n\n    state.mouse.lastX = e.clientX;\n    state.mouse.lastY = e.clientY;\n  };\n\n  const mountEvents = () => {\n    document.addEventListener(\"mousemove\", handleMouse);\n  };\n\n  const unmountEvents = () => {\n    document.removeEventListener(\"mousemove\", handleMouse);\n  };\n\n  const getRotation = () => {\n    const sideways = state.rotation.yaw;\n    const up_down = state.rotation.pitch;\n\n    state.rotation.pitch = 0;\n    state.rotation.yaw = 0;\n\n    return {\n      yaw: props.sensitivity * sideways,\n      pitch: props.sensitivity * up_down,\n    };\n  };\n\n  return {\n    mount: mountEvents,\n    unmount: unmountEvents,\n    getRotation: getRotation,\n  };\n};\n"]}