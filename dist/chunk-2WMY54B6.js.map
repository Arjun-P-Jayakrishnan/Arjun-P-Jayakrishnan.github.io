{"version":3,"sources":["../src/graphics/gameplay/modules/ground.ts"],"sourcesContent":["import { getThreeJsContext } from \"graphics/internal/context\";\nimport { createGridMaterial, GridMaterial } from \"graphics/materials/grid/grid-material\";\nimport { Mesh } from \"three\";\n\nexport interface GroundProps {\n  ids: {\n    groundRoot: string;\n  };\n}\n\nexport interface Ground {\n  mount: () => void;\n  update: () => void;\n  unmount: () => void;\n}\n\nexport const createGround = (props: GroundProps): Ground => {\n  let ground: Mesh | null = null;\n  let contextManager = getThreeJsContext();\n\n  let gridMat: GridMaterial | null = null;\n\n  const mount = () => {\n    ground = contextManager\n      .getProperty(\"scene\")\n      .getObjectByName(props.ids.groundRoot) as Mesh;\n\n    if (!ground) {\n      console.error(\n        `Cant get ground mesh from the id : ${props.ids.groundRoot}`\n      );\n      return;\n    }\n\n    gridMat = createGridMaterial({\n      camera: contextManager.getProperty(\"camera\"),\n      fadeNear: 0.1,\n      fadeFar: 1,\n    });\n\n    ground.material = gridMat.mat;\n  };\n\n  const update = () => {\n    gridMat?.update(contextManager.getProperty(\"camera\").position)\n  };\n\n  const unmount = () => {};\n\n  return {\n    mount: mount,\n    update:update,\n    unmount: unmount,\n  };\n};\n"],"mappings":"2EAgBO,IAAMA,EAAgBC,GAA+B,CAC1D,IAAIC,EAAsB,KACtBC,EAAiBC,EAAkB,EAEnCC,EAA+B,KA6BnC,MAAO,CACL,MA5BY,IAAM,CAKlB,GAJAH,EAASC,EACN,YAAY,OAAO,EACnB,gBAAgBF,EAAM,IAAI,UAAU,EAEnC,CAACC,EAAQ,CACX,QAAQ,MACN,sCAAsCD,EAAM,IAAI,UAAU,EAC5D,EACA,MACF,CAEAI,EAAUC,EAAmB,CAC3B,OAAQH,EAAe,YAAY,QAAQ,EAC3C,SAAU,GACV,QAAS,CACX,CAAC,EAEDD,EAAO,SAAWG,EAAQ,GAC5B,EAUE,OARa,IAAM,CACnBA,GAAS,OAAOF,EAAe,YAAY,QAAQ,EAAE,QAAQ,CAC/D,EAOE,QALc,IAAM,CAAC,CAMvB,CACF","names":["createGround","props","ground","contextManager","getThreeJsContext","gridMat","createGridMaterial"]}