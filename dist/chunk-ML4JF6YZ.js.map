{"version":3,"sources":["../src/managers/globalContext.ts"],"names":["GLOBAL_STATE_INITIAL","references","getGlobalContext","createGlobalState","createEventBusManager","createGlobalStorage"],"mappings":"0HAMA,IAAMA,EAA2C,CAC/C,OAAA,CAAS,CACP,MAAA,CAAQ,MACR,QAAU,CAAA,CACZ,CACF,CAAA,CAQWC,EAEEC,CAAmB,CAAA,KACzBD,CACHA,GAAAA,CAAAA,CAAa,CACX,WAAaE,CAAAA,GAAAA,CAAkBH,CAAoB,CAAA,CACnD,gBAAiBI,GAAsB,EAAA,CACvC,aAAeC,CAAAA,CAAAA,CAAoB,EAAE,CACvC,CAEAJ,CAAAA,CAAAA,CAAW,YAAY,OAAQ,EAAA,CAC/BA,CAAW,CAAA,aAAA,CAAc,OAGpBA,CAAAA,CAAAA,CAAAA","file":"chunk-ML4JF6YZ.js","sourcesContent":["\nimport { createEventBusManager, EventBusManager } from \"./events/eventBusFactory\";\nimport { createGlobalState, GlobalState } from \"./state/globalState\";\nimport { GlobalStateContext } from \"./state/globalStateData\";\nimport { createGlobalStorage, GlobalStorage } from \"./storage/globalStorage\";\n\nconst GLOBAL_STATE_INITIAL: GlobalStateContext = {\n  loading: {\n    active: false,\n    progress: 0,\n  },\n} as const;\n\nexport interface References {\n  globalState: GlobalState;\n  eventBusManager: EventBusManager;\n  globalStorage: GlobalStorage;\n}\n\nexport let references: References;\n\nexport const getGlobalContext = () => {\n  if (!references) {\n    references = {\n      globalState: createGlobalState(GLOBAL_STATE_INITIAL),\n      eventBusManager: createEventBusManager(),\n      globalStorage: createGlobalStorage({}),\n    };\n\n    references.globalState.inflate();\n    references.globalStorage.mount();\n  }\n\n  return references;\n};\n"]}