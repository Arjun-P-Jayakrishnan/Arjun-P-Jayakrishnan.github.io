{"version":3,"sources":["../src/graphics/instance/gameplay.ts"],"sourcesContent":["import { EventBusManager } from \"@utils/event_management/eventBusFactory\";\r\nimport { GlobalState } from \"@utils/state/globalState\";\r\nimport { Camera, PerspectiveCamera, Scene, WebGLRenderer } from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\nexport interface GameplayOptions {}\r\n\r\nexport interface GameplayContext {\r\n  globalState: GlobalState;\r\n  eventBusManager: EventBusManager;\r\n}\r\n\r\nexport interface ThreeJSContext {\r\n  scene: Scene;\r\n  renderer: WebGLRenderer;\r\n  camera: Camera;\r\n  controls:OrbitControls\r\n}\r\n\r\nexport interface Gameplay {\r\n  mount: (context: ThreeJSContext) => void;\r\n  update: () => void;\r\n  unmount: () => void;\r\n}\r\n\r\nexport const createGameplay = (\r\n  options: GameplayOptions,\r\n  context: GameplayContext\r\n): Gameplay => {\r\n  const mount = (context: ThreeJSContext) => {};\r\n\r\n  const update = () => {};\r\n\r\n  const unmount = () => {};\r\n\r\n  return {\r\n    mount: mount,\r\n    update: update,\r\n    unmount: unmount,\r\n  };\r\n};\r\n"],"mappings":";AAyBO,IAAM,iBAAiB,CAC5B,SACA,YACa;AACb,QAAM,QAAQ,CAACA,aAA4B;AAAA,EAAC;AAE5C,QAAM,SAAS,MAAM;AAAA,EAAC;AAEtB,QAAM,UAAU,MAAM;AAAA,EAAC;AAEvB,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;","names":["context"]}