import {a as a$5}from'./chunk-WROTUZJN.js';import {a as a$3}from'./chunk-344VLTTP.js';import {a as a$4}from'./chunk-CKNDFUNO.js';import {c as c$1,b as b$3,a as a$6}from'./chunk-VMUFPQJF.js';import {a}from'./chunk-5PDCNHTA.js';import {a as a$2}from'./chunk-YSY5DFCU.js';import {b as b$1}from'./chunk-37KH4TOK.js';import {b}from'./chunk-ML4JF6YZ.js';import {a as a$1,d,c,b as b$2}from'./chunk-PVV5FYMO.js';var $=()=>{let{globalState:N,eventBusManager:i}=b(),u=a(),e=null,t={navigation:null,about:null,projects:null},m={navigation:b$2,about:c,projects:d},s=null,r=null,_=()=>{try{e=a$2({globalState:N,loaderEventBus:i.loadingBus,renderer:u.get("renderer"),scene:u.get("scene")}),e?.configure();}catch(o){throw new Error(`[Gameplay] Couldnt create and initailize the loader due to ${o}`)}},E=o=>{switch(o){case "navigation":return t[o]=a$5(a$6),t[o];case "about":return t[o]=a$4(b$3),t[o];case "projects":return t[o]=a$3(c$1),t[o];default:throw new Error(`Unknown Room key ${o}`)}},c$2=async o=>{if(!e)return;if(!m[o])throw new Error("[Room Controller] sufficient asset meta data is not given.");if(!t[o]){let a=E(o);await e.load({source:{modelDescriptors:m[o].meshes,environmentMap:m[o].hdr}}),a&&(a.mount(),a.isLoaded=true,s=a);}},d$1=async o=>{r!==o&&(r!=null&&(b$1.onInit("deactivating"),t[r]!=null&&t[r].setDeactive()),await c$2(o),t[o]&&t[o].setActive(),r=o);},P=async()=>{b$1.onMount("room-controller"),_(),await e?.load({source:{modelDescriptors:[a$1]}}),await c$2("navigation"),await d$1("navigation");},K=o=>{s?.update(o);},C=()=>{e?.dispose(),Object.values(t).forEach(o=>{o?.unmount();}),b$1.onUnmount("room-controller");},l=o=>{i.loadingBus.emit({type:"load:start",loaded:0,total:0,url:""}),Promise.allSettled([d$1(o)]).then(()=>{i.loadingBus.emit({type:"load:complete"});});},j=()=>{r&&s?.setDeactive();};return {mount:P,switchRoom:{navigation:()=>l("navigation"),about:()=>l("about"),projects:()=>l("projects"),default:()=>j()},update:K,unmount:C}};export{$ as a};//# sourceMappingURL=chunk-5BMKKQPT.js.map
//# sourceMappingURL=chunk-5BMKKQPT.js.map