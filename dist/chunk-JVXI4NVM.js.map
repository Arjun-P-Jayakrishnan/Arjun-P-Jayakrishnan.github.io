{"version":3,"sources":["../src/engine/managers/DOMManger.ts"],"names":["_loadJSON","url","loadAboutData","about","data","err","loadProjectData","projectGallery","projects","createDomManager","flags","serviceRegsitry","getServiceRegistry","lifecycleScheduler","logger","eventBusManager","Navbar","LoadingModal","SceneInspector","ProjectGallery","ProjectCard","queueStep","AboutPage","loadingModal","navbar","sceneInspector","selector","element"],"mappings":"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","file":"chunk-JVXI4NVM.js","sourcesContent":["import { AboutPage } from \"@components/about/about\";\nimport { CardMarshall, ProjectCard } from \"@components/gallery/card\";\nimport { ProjectGallery } from \"@components/gallery/gallery\";\nimport { LoadingModal } from \"@components/loading/loading\";\nimport { Navbar } from \"@components/navbar/navbar\";\nimport { SceneInspector } from \"@components/threejs/scene_inspector\";\nimport { queueStep } from \"@utils/dsl\";\nimport { getServiceRegistry } from \"engine/core/ServiceRegistry\";\nimport { Lifecycle } from \"types/lifecycle.types\";\n\ninterface DOMManager extends Lifecycle {\n  onInit: () => void;\n}\n\nconst _loadJSON = async (url: string): Promise<any> => {\n  const res = await fetch(url);\n  const data = await res.json();\n\n  return data;\n};\n\nconst loadAboutData = async () => {\n  const about: AboutPage = document.querySelector(\"about-page\")!;\n  try {\n    const data = await _loadJSON(\"/public/data/about.json\");\n\n    about.updateData = {\n      isError: false,\n      records: data,\n    };\n  } catch (err) {\n    about.updateData = {\n      isError: true,\n      message: `Error getting data ${err}`,\n    };\n    console.error(`Error getting data ${err}`);\n  }\n};\n\nconst loadProjectData = async () => {\n  const projectGallery: ProjectGallery =\n    document.querySelector(\"project-gallery\")!;\n  try {\n    const data = await fetch(\"/public/data/projects.json\");\n    const projects = await data.json();\n\n    projectGallery.updateData = {\n      isError: false,\n      list: projects[\"projects\"] as Array<CardMarshall>,\n    };\n  } catch (err) {\n    projectGallery.updateData = {\n      isError: true,\n      message: `Error getting data ${err}`,\n    };\n    console.error(`Error getting data ${err}`);\n  }\n};\n\nconst createDomManager = (): DOMManager => {\n  let flags = {\n    navbarDefined: false,\n    loadingModalDefined: false,\n    sceneInspectorDefined: false,\n    projectGalleryDefined: false,\n    projectCardDefined: false,\n    aboutPageDefined: false,\n  };\n\n  const serviceRegsitry = getServiceRegistry();\n  const [lifecycleScheduler, logger, eventBusManager] = [\n    serviceRegsitry.get(\"LifecycleScheduler\"),\n    serviceRegsitry.get(\"Logger\"),\n    serviceRegsitry.get(\"EventBusManager\"),\n  ];\n\n  /**\n   * @description definition part\n   */\n  const onInit = () => {\n    // Navbar\n    if (!flags.navbarDefined) {\n      customElements.define(\"nav-bar\", Navbar);\n      flags.navbarDefined = true;\n    }\n    // Loading Modal\n    if (!flags.loadingModalDefined) {\n      customElements.define(\"loading-modal\", LoadingModal);\n      flags.loadingModalDefined = true;\n    }\n    // Scene Inspector\n    if (!flags.sceneInspectorDefined) {\n      customElements.define(\"scene-inspector\", SceneInspector);\n      flags.sceneInspectorDefined = true;\n    }\n\n    // Projects\n    eventBusManager.displayBus.once(\"projects:show\", () => {\n      if (flags.projectGalleryDefined) return;\n      logger.onMount({ origin: \"Projects-Page\" });\n      //Loading\n      eventBusManager.loadingBus.emit({\n        type: \"load:start\",\n        loaded: 0,\n        total: 0,\n        url: \"\",\n      });\n      customElements.define(\"project-gallery\", ProjectGallery);\n      customElements.define(\"project-card\", ProjectCard);\n\n      lifecycleScheduler.schedule(\n        queueStep(() => {\n          try {\n            const projectGallery: ProjectGallery =\n              document.querySelector(\"project-gallery\")!;\n\n            projectGallery.eventBusManager = eventBusManager;\n          } catch (err) {\n            console.error(err);\n          }\n        })\n      );\n\n      lifecycleScheduler.schedule(\n        queueStep(async () => {\n          try {\n            console.log(\"loading data\");\n            await loadProjectData();\n            eventBusManager.loadingBus.emit({ type: \"load:complete\" });\n          } catch (err) {\n            console.log(`Error while loading projects data ${err}`);\n          }\n        })\n      );\n\n      flags.projectGalleryDefined = true;\n    });\n\n    // About Page\n    eventBusManager.displayBus.once(\"about:show\", () => {\n      if (flags.aboutPageDefined) return;\n      logger.onMount({ origin: \"About-Page\" });\n      //Loading\n      eventBusManager.loadingBus.emit({\n        type: \"load:start\",\n        loaded: 0,\n        total: 0,\n        url: \"\",\n      });\n\n      customElements.define(\"about-page\", AboutPage);\n      lifecycleScheduler.schedule(\n        queueStep(async () => {\n          await loadAboutData();\n          eventBusManager.loadingBus.emit({ type: \"load:complete\" });\n        })\n      );\n\n      lifecycleScheduler.schedule(\n        queueStep(() => {\n          try {\n            const about: AboutPage = document.querySelector(\"about-page\")!;\n            about.eventBusManager = eventBusManager;\n          } catch (err) {\n            console.error(err);\n          }\n        })\n      );\n\n      flags.aboutPageDefined = true;\n    });\n  };\n\n  /**\n   * @description data-fetch part\n   */\n  const onLoad = () => {\n    logger.onLoad({ origin: \"DOMManager\" });\n    try {\n      const loadingModal: LoadingModal =\n        document.querySelector(\"loading-modal\")!;\n      loadingModal.eventBusManager = eventBusManager;\n    } catch (err) {\n      console.error(`Missing loading modal element :${err}`);\n    }\n\n    try {\n      const navbar: Navbar = document.querySelector(\"nav-bar\")!;\n      navbar.eventBusManager = eventBusManager;\n    } catch (err) {\n      console.error(`Missing navbar element : ${err}`);\n    }\n\n    try {\n      const sceneInspector: SceneInspector =\n        document.querySelector(\"scene-inspector\")!;\n      sceneInspector.eventBusManager = eventBusManager;\n    } catch (err) {\n      console.error(err);\n    }\n\n    // try {\n    //   const gallery: ProjectGallery =\n    //     document.querySelector(\"project-gallery\")!;\n    //   gallery.eventBusManager = context.eventBusManager;\n    // } catch (err) {\n    //   console.error(`Missing project gallery component : ${err}`);\n    // }\n  };\n\n  /**\n   * @description attach components with data /events\n   */\n  const onMount = () => {\n    logger.onMount({ origin: \"DOMManager\" });\n  };\n\n  const onUpdate = () => {\n    logger.onUpdate(0, { origin: \"DOMManager\" });\n  };\n\n  const onUnmount = () => {\n    const selectors = [\n      \"loading-modal\",\n      \"nav-bar\",\n      \"scene-inspector\",\n      // \"project-gallery\",\n      // \"project-card\",\n\n      // \"about-page\",\n      // \"background-page\",\n    ];\n\n    selectors.forEach((selector) => {\n      const element = document.querySelector(selector);\n      if (element?.parentElement) {\n        //call disconnected  callback for the removal of event listeners\n        element.parentElement.removeChild(element);\n      } else {\n        console.warn(\n          `Could not unmount ${selector} either already removed or not found`\n        );\n      }\n    });\n    logger.onUnmount({ origin: \"DOMManger\" });\n  };\n\n  /**\n   * @deprecated\n   */\n  const onDispose = () => {\n    logger.onDestroy({ origin: \"DOMManager\" });\n  };\n\n  return {\n    onInit: onInit,\n    onLoad: onLoad,\n    onMount: onMount,\n    onUpdate: onUpdate,\n    onUnmount: onUnmount,\n    onDestroy: onDispose,\n  };\n};\n\nexport { createDomManager };\n\nexport type { DOMManager };\n"]}