{"version":3,"sources":["../src/components/website/gallery/card.ts"],"names":["template","PROJECT_CARD_CONSTANTS","ProjectCard","clone","name","oldValue","newValue","props","title","description","image","_title","tags","children","tag","span","github_link"],"mappings":"AAAA,IAAMA,EAAW,QAAS,CAAA,aAAA,CAAc,UAAU,CAAA,CAClDA,EAAS,SAAY,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAA,CAwBfC,IAAAA,CAAAA,CAAyB,CAC7B,OAAA,CACA,OACA,CAAA,aAAA,CACA,MACA,CAAA,SACF,CAkBaC,CAAAA,CAAAA,CAAN,cAA0B,WAAY,CAI3C,WAAc,EAAA,CACZ,KAAM,EAAA,CACN,IAAK,CAAA,IAAA,CAAO,IAAK,CAAA,YAAA,CAAa,CAAE,IAAA,CAAM,MAAO,CAAC,CAE9C,CAAA,IAAMC,CAAQH,CAAAA,CAAAA,CAAS,QAAQ,SAAU,CAAA,IAAI,CAE7C,CAAA,IAAA,CAAK,IAAK,CAAA,WAAA,CAAYG,CAAK,CAAA,CAE3B,IAAK,CAAA,UAAA,CAAa,CAChB,IAAA,CAAM,IAAK,CAAA,IAAA,CAAK,aAAc,CAAA,KAAK,EACnC,KAAO,CAAA,IAAA,CAAK,IAAK,CAAA,aAAA,CAAc,IAAI,CAAA,CACnC,WAAa,CAAA,IAAA,CAAK,KAAK,aAAc,CAAA,GAAG,CACxC,CAAA,OAAA,CAAS,IAAK,CAAA,IAAA,CAAK,aAAc,CAAA,OAAO,EACxC,IAAM,CAAA,IAAA,CAAK,IAAK,CAAA,aAAA,CAAc,cAAc,CAC9C,EACF,CAEA,WAAW,kBAAA,EAAqB,CAC9B,OAAOF,CACT,CAEA,wBAAyBG,CAAAA,CAAAA,CAAcC,EAAkBC,CAAkB,CAAA,CACrED,CAAaC,GAAAA,CAAAA,EACf,IAAK,CAAA,MAAA,CAAOF,CAAI,EAEpB,CAEA,OAAA,CAAQG,CAAqB,CAAA,CAC3B,IAAK,CAAA,YAAA,CAAa,OAASA,CAAAA,CAAAA,CAAM,KAAK,CACtC,CAAA,IAAA,CAAK,YAAa,CAAA,OAAA,CAASA,CAAM,CAAA,QAAQ,CACzC,CAAA,IAAA,CAAK,YAAa,CAAA,aAAA,CAAeA,CAAM,CAAA,WAAW,CAClD,CAAA,IAAA,CAAK,YAAa,CAAA,MAAA,CAAQA,EAAM,IAAQ,EAAA,EAAE,CAC1C,CAAA,IAAA,CAAK,YAAa,CAAA,SAAA,CAAWA,CAAM,CAAA,OAAO,EAC5C,CAEA,MAAA,CAAOH,CAAc,CAAA,CACnB,OAAQA,CAAAA,EACN,KAAK,QACH,IAAMI,CAAAA,CAAgB,IAAK,CAAA,YAAA,CAAa,OAAO,CAAA,EAAK,EAChD,CAAA,IAAA,CAAK,UAAW,CAAA,KAAA,GAAO,IAAK,CAAA,UAAA,CAAW,KAAM,CAAA,WAAA,CAAcA,CAC/D,CAAA,CAAA,MACF,KAAK,aACH,CAAA,IAAMC,CAAsB,CAAA,IAAA,CAAK,YAAa,CAAA,aAAa,CAAK,EAAA,EAAA,CAC5D,IAAK,CAAA,UAAA,CAAW,WAClB,GAAA,IAAA,CAAK,UAAW,CAAA,WAAA,CAAa,WAAcA,CAAAA,CAAAA,CAAAA,CAC7C,MACF,KAAK,OAAA,CACH,IAAMC,CAAAA,CAAgB,IAAK,CAAA,YAAA,CAAa,OAAO,CAAA,EAAK,EAC9CC,CAAAA,CAAAA,CAAiB,IAAK,CAAA,YAAA,CAAa,OAAO,CAAA,EAAK,EACjD,CAAA,IAAA,CAAK,WAAW,IAClB,GAAA,IAAA,CAAK,UAAW,CAAA,IAAA,CAAK,YAAa,CAAA,KAAA,CAAOD,CAAK,CAAA,CAC9C,KAAK,UAAW,CAAA,IAAA,CAAK,YAAa,CAAA,KAAA,CAAOC,CAAM,CAAA,CAAA,CAEjD,MACF,KAAK,OACH,IAAMC,CAAAA,CAAAA,CAAQ,IAAK,CAAA,YAAA,CAAa,MAAM,CAAA,EAAK,EAAI,EAAA,KAAA,CAAM,GAAG,CAAA,CACxD,GAAI,IAAA,CAAK,UAAW,CAAA,OAAA,CAAS,CAC3B,IAAMC,EAAWD,CAAK,CAAA,GAAA,CAAKE,CAAQ,EAAA,CACjC,IAAMC,CAAAA,CAAO,QAAS,CAAA,aAAA,CAAc,MAAM,CAC1C,CAAA,OAAAA,CAAK,CAAA,WAAA,CAAcD,CACZC,CAAAA,CACT,CAAC,CAAA,CAED,KAAK,UAAW,CAAA,OAAA,CAAQ,eAAgB,CAAA,GAAGF,CAAQ,EACrD,CACA,MACF,KAAK,SAAA,CACH,IAAMG,CAAAA,CAAc,IAAK,CAAA,YAAA,CAAa,SAAS,CAAA,EAAK,GAChD,IAAK,CAAA,UAAA,CAAW,IAClB,EAAA,IAAA,CAAK,UAAW,CAAA,IAAA,CAAK,YAAa,CAAA,MAAA,CAAQA,CAAW,CAEvD,CAAA,KACJ,CACF,CAEA,iBAAoB,EAAA,EAEpB,oBAAA,EAAuB,EACzB","file":"chunk-2IRYGOGO.js","sourcesContent":["const template = document.createElement(\"template\");\ntemplate.innerHTML = `\n  <link rel=\"stylesheet\" href=\"/style/card.css\" />\n  <div class=\"card\">\n    <div class=\"card-content\">\n     <div class=\"card-header\">\n        <div class=\"card-image\">\n          <img src=\"\" alt=\"\" loading=\"lazy\"/>\n        </div>\n        <div class=\"title-group\">\n          <h3></h3>\n          <small class=\"sub-heading\"></small>\n        </div>\n      </div>  \n     \n      <p class=\"description\"></p>\n      <div class=\"tags\"></div>\n      <a class=\"github-link\" href=\"\" >\n        <img src=\"/assets/images/github-brands-solid.svg\" alt=\"Github\" loading=\"lazy\"/>\n        Github\n      </a>\n    </div>\n  </div>\n`;\n\nconst PROJECT_CARD_CONSTANTS = [\n  \"title\",\n  \"image\",\n  \"description\",\n  \"tags\",\n  \"linkUrl\",\n];\n\nexport interface CardMarshall {\n  title: string;\n  description: string;\n  imageUrl: string;\n  tags?: string;\n  linkUrl: string;\n}\n\ninterface Components {\n  logo: HTMLImageElement | null;\n  title: HTMLHeadingElement | null;\n  description: HTMLParagraphElement | null;\n  tagRoot: HTMLDivElement | null;\n  link: HTMLAnchorElement | null;\n}\n\nexport class ProjectCard extends HTMLElement {\n  root: ShadowRoot;\n  components: Components;\n\n  constructor() {\n    super();\n    this.root = this.attachShadow({ mode: \"open\" });\n\n    const clone = template.content.cloneNode(true);\n\n    this.root.appendChild(clone);\n\n    this.components = {\n      logo: this.root.querySelector(\"img\"),\n      title: this.root.querySelector(\"h3\"),\n      description: this.root.querySelector(\"p\"),\n      tagRoot: this.root.querySelector(\".tags\"),\n      link: this.root.querySelector(\".github-link\"),\n    };\n  }\n\n  static get observedAttributes() {\n    return PROJECT_CARD_CONSTANTS;\n  }\n\n  attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n    if (oldValue !== newValue) {\n      this.render(name);\n    }\n  }\n\n  setData(props: CardMarshall) {\n    this.setAttribute(\"title\", props.title);\n    this.setAttribute(\"image\", props.imageUrl);\n    this.setAttribute(\"description\", props.description);\n    this.setAttribute(\"tags\", props.tags ?? \"\");\n    this.setAttribute(\"linkUrl\", props.linkUrl);\n  }\n\n  render(name: string) {\n    switch (name) {\n      case \"title\":\n        const title: string = this.getAttribute(\"title\") || \"\";\n        if (this.components.title) this.components.title.textContent = title;\n        break;\n      case \"description\":\n        const description: string = this.getAttribute(\"description\") || \"\";\n        if (this.components.description)\n          this.components.description!.textContent = description;\n        break;\n      case \"image\":\n        const image: string = this.getAttribute(\"image\") || \"\";\n        const _title: string = this.getAttribute(\"title\") || \"\";\n        if (this.components.logo) {\n          this.components.logo.setAttribute(\"src\", image);\n          this.components.logo.setAttribute(\"alt\", _title);\n        }\n        break;\n      case \"tags\":\n        const tags = (this.getAttribute(\"tags\") || \"\").split(\",\");\n        if (this.components.tagRoot) {\n          const children = tags.map((tag) => {\n            const span = document.createElement(\"span\");\n            span.textContent = tag;\n            return span;\n          });\n\n          this.components.tagRoot.replaceChildren(...children);\n        }\n        break;\n      case \"linkUrl\":\n        const github_link = this.getAttribute(\"linkUrl\") || \"\";\n        if (this.components.link) {\n          this.components.link.setAttribute(`href`, github_link);\n        }\n        break;\n    }\n  }\n\n  connectedCallback() {}\n\n  disconnectedCallback() {}\n}\n"]}