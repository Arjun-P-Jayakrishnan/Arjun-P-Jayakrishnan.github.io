{"version":3,"sources":["../src/utils/globalContext.ts"],"sourcesContent":["import {\r\n  createEventBusManager,\r\n  EventBusManager,\r\n} from \"./event_management/eventBusFactory\";\r\nimport { createGlobalState, GlobalState } from \"./state/globalState\";\r\nimport { GlobalStateContext } from \"./state/globalStateData\";\r\nimport { createGlobalStorage, GlobalStorage } from \"./storage/globalStorage\";\r\n\r\nconst GLOBAL_STATE_INITIAL: GlobalStateContext = {\r\n  loading: {\r\n    active: false,\r\n    progress: 0,\r\n  },\r\n} as const;\r\n\r\nexport interface References {\r\n  globalState: GlobalState;\r\n  eventBusManager: EventBusManager;\r\n  globalStorage: GlobalStorage;\r\n}\r\n\r\nexport let references: References;\r\n\r\nexport const getGlobalContext = () => {\r\n  if (!references) {\r\n    references = {\r\n      globalState: createGlobalState(GLOBAL_STATE_INITIAL),\r\n      eventBusManager: createEventBusManager(),\r\n      globalStorage: createGlobalStorage({}),\r\n    };\r\n  }\r\n\r\n  return references;\r\n};\r\n"],"mappings":";;;;;;;;;;;AAQA,IAAM,uBAA2C;AAAA,EAC/C,SAAS;AAAA,IACP,QAAQ;AAAA,IACR,UAAU;AAAA,EACZ;AACF;AAQO,IAAI;AAEJ,IAAM,mBAAmB,MAAM;AACpC,MAAI,CAAC,YAAY;AACf,iBAAa;AAAA,MACX,aAAa,kBAAkB,oBAAoB;AAAA,MACnD,iBAAiB,sBAAsB;AAAA,MACvC,eAAe,oBAAoB,CAAC,CAAC;AAAA,IACvC;AAAA,EACF;AAEA,SAAO;AACT;","names":[]}