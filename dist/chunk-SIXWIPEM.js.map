{"version":3,"sources":["../src/utils/Logger.ts"],"names":["createLogger","info","deltaTime"],"mappings":"AAiBA,IAAMA,EAAe,KA+BZ,CACL,OA/BcC,CAAqB,EAAA,CACnC,QAAQ,GAAI,CAAA,CAAA,cAAA,EAAOA,CAAK,CAAA,MAAM,uBAAuB,EACvD,CAAA,CA8BE,QA5BeA,CAAqB,EAAA,CACpC,QAAQ,GAAI,CAAA,CAAA,QAAA,EAAMA,CAAK,CAAA,MAAM,uBAAuB,EACtD,CAAA,CA2BE,SAzBe,CAACC,CAAAA,CAAmBD,IAAqB,CACxD,OAAA,CAAQ,IACN,CAAOA,WAAAA,EAAAA,CAAAA,CAAK,MAAM,CAA6BC,0BAAAA,EAAAA,CAAAA,CAAU,QAAQ,CAAC,CAAC,EACrE,EACF,CAAA,CAsBE,SApBiBD,CAAAA,CAAAA,EAAqB,CACtC,OAAQ,CAAA,GAAA,CAAI,WAAMA,CAAK,CAAA,MAAM,sBAAsB,EACrD,CAAA,CAmBE,SAjBiBA,CAAAA,CAAAA,EAAqB,CACtC,OAAQ,CAAA,GAAA,CAAI,oBAAQA,CAAK,CAAA,MAAM,qBAAqB,EACtD,CAAA,CAgBE,UAdkBA,CAAAA,CAAAA,EAAqB,CACvC,OAAQ,CAAA,GAAA,CAAI,WAAMA,CAAK,CAAA,MAAM,sBAAsB,EACrD,CAAA,CAaE,aAXoBA,CAAqB,EAAA,CACzC,QAAQ,GAAI,CAAA,CAAA,cAAA,EAAOA,EAAK,MAAM,CAAA,sBAAA,CAAwB,EACxD,CAUA,CAAA","file":"chunk-SIXWIPEM.js","sourcesContent":["import { Lifecycle } from \"types/lifecycle.types\";\n\ntype LoggerInfo = { origin: string };\n\ninterface Logger\n  extends Lifecycle<\n    [LoggerInfo], //OnLoad\n    [LoggerInfo], //onMount\n    [deltaTime: number, info: LoggerInfo], //onUpdate\n    [LoggerInfo], //onUnmount\n    [LoggerInfo], //onDestroy\n    false\n  > {\n  onActivate: (info: LoggerInfo) => void;\n  onDeactivate: (info: LoggerInfo) => void;\n}\n\nconst createLogger = (): Logger => {\n  const onLoad = (info: LoggerInfo) => {\n    console.log(`‚ôªÔ∏è [${info.origin}] is being loaded....`);\n  };\n\n  const onMount = (info: LoggerInfo) => {\n    console.log(`‚ûï [${info.origin}] is being mounted...`);\n  };\n\n  const onUpdate = (deltaTime: number, info: LoggerInfo) => {\n    console.log(\n      `üîÑ [${info.origin}] is being updated.. with ${deltaTime.toFixed(2)}`\n    );\n  };\n\n  const onUnmount = (info: LoggerInfo) => {\n    console.log(`‚ûñ [${info.origin}] is being unmounted`);\n  };\n\n  const onDestroy = (info: LoggerInfo) => {\n    console.log(`üóëÔ∏è [${info.origin}] is being disposed`);\n  };\n\n  const onActivate = (info: LoggerInfo) => {\n    console.log(`‚úÖ [${info.origin}] is being activated`);\n  };\n\n  const onDeactivate = (info: LoggerInfo) => {\n    console.log(`‚úñÔ∏è [${info.origin}] is being deactiavted`);\n  };\n\n  return {\n    onLoad,\n    onMount,\n    onUpdate,\n    onUnmount,\n    onDestroy,\n    onActivate,\n    onDeactivate,\n  };\n};\n\nexport { createLogger };\nexport type { Logger };\n"]}