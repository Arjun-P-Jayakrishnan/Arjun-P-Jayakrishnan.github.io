{"version":3,"sources":["../src/components/website/navbar/header.ts"],"names":["template","Navbar","e","key","showEvent","hideEvent","id","showHandler","hideHandler","clone","eventBusManager"],"mappings":"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","file":"chunk-YRMUWQYQ.js","sourcesContent":["import { EventBus } from \"@utils/event_management/eventBus\";\nimport { EventBusManager } from \"@utils/event_management/eventBusFactory\";\nimport { DisplayEvents } from \"@utils/event_management/eventType\";\n\nconst template = document.createElement(\"template\");\n\ntemplate.innerHTML = `\n  <link rel=\"stylesheet\" href=\"/style/header.css\"/>\n  <nav class=\"navbar\" id=\"main-nav\">\n      <div class=\"logo\">Logo</div>\n      <button class=\"toggle-btn\" aria-expanded=\"false\" aria-controls=\"main-nav\">&#9776</button>\n      <ul class=\"nav-links\">\n          <li><a href=\"\" id=\"home\">Home</a></li>\n          <li><a href=\"\" id=\"about\">About</a></li>\n          <li><a href=\"\" id=\"projects\">Projects</a></li>\n          <li><a href=\"\" id=\"contact\">Contact</a></li>\n      </ul>\n  </nav>\n`;\n\ninterface TabShowState {\n  project: boolean;\n  about: boolean;\n  home: boolean;\n  contact: boolean;\n}\n\ninterface State {\n  hamburgerMenu: {\n    isOpen: boolean;\n    isTransitioning: boolean;\n  };\n  tabs: TabShowState;\n}\n\ninterface Components {\n  toggleBtn: HTMLElement | null;\n  navLinks: HTMLElement | null;\n  projects: HTMLAnchorElement | null;\n  about: HTMLAnchorElement | null;\n  home: HTMLAnchorElement | null;\n  contact: HTMLAnchorElement | null;\n}\n\nexport class Navbar extends HTMLElement {\n  //State\n  private state: State = {\n    hamburgerMenu: {\n      isOpen: false,\n      isTransitioning: false,\n    },\n    tabs: {\n      project: false,\n      about: false,\n      contact: false,\n      home: false,\n    },\n  };\n\n  private displayEventBus: EventBus<DisplayEvents> | null = null;\n  private components: Components = {\n    about: null,\n    navLinks: null,\n    projects: null,\n    contact: null,\n    home: null,\n    toggleBtn: null,\n  };\n\n  root: ShadowRoot;\n\n  busHandlers: Record<\n    `${keyof TabShowState}:show` | `${keyof TabShowState}:hide`,\n    (e: DisplayEvents) => void\n  > | null = null;\n  sections = [\"project\", \"about\", \"contact\", \"home\"] as const;\n\n  constructor() {\n    super();\n    this.root = this.attachShadow({ mode: \"open\" });\n    const clone = template.content.cloneNode(true);\n    this.root.appendChild(clone);\n    this.queryElements();\n  }\n\n  static get observedAttributes() {\n    return [];\n  }\n\n  /**\n   * @description called when the component is mounted\n   */\n  connectedCallback() {\n    this.bindEvents();\n    this.setupBusListeners();\n  }\n\n  /**\n   * @description called when component is un mounted\n   */\n  disconnectedCallback() {\n    this.unBindEvents();\n    this.disposeBusListeners();\n  }\n\n  queryElements() {\n    this.components.toggleBtn = this.root.querySelector(\".toggle-btn\");\n    this.components.navLinks = this.root.querySelector(\".nav-links\");\n\n    if (this.components.navLinks) {\n      this.components.projects =\n        this.components.navLinks.querySelector(\"#projects\");\n\n      this.components.about = this.components.navLinks.querySelector(\"#about\");\n\n      this.components.contact =\n        this.components.navLinks.querySelector(\"#contact\");\n\n      this.components.home = this.components.navLinks.querySelector(\"#home\");\n    }\n  }\n\n  bindEvents() {\n    this.components.toggleBtn?.addEventListener(\"click\", this.onToggleClick);\n    this.components.navLinks?.addEventListener(\n      \"transitionend\",\n      this.onAnimationEnd\n    );\n    this.components.projects?.addEventListener(\"click\", this.onProjectClick);\n    this.components.about?.addEventListener(\"click\", this.onAboutClick);\n    this.components.home?.addEventListener(\"click\", this.onHomeClick);\n    this.components.contact?.addEventListener(\"click\", this.onContactClick);\n  }\n\n  unBindEvents() {\n    this.components.toggleBtn?.removeEventListener(\"click\", this.onToggleClick);\n    this.components.navLinks?.removeEventListener(\n      \"transitionend\",\n      this.onAnimationEnd\n    );\n    this.components.projects?.removeEventListener(\"click\", this.onProjectClick);\n    this.components.about?.removeEventListener(\"click\", this.onAboutClick);\n    this.components.home?.removeEventListener(\"click\", this.onHomeClick);\n    this.components.contact?.removeEventListener(\"click\", this.onContactClick);\n  }\n\n  /***\n   * @description on Click handler for hamburger menu closing or opening\n   */\n  toggleHamburgerMenu = (): void => {\n    if (!this.components.navLinks) return;\n    if (this.state.hamburgerMenu.isTransitioning) return;\n\n    this.state.hamburgerMenu.isTransitioning = true;\n    this.components.navLinks.classList.toggle(\n      \"open\",\n      !this.state.hamburgerMenu.isOpen\n    );\n    this.components.navLinks.classList.toggle(\n      \"closing\",\n      this.state.hamburgerMenu.isOpen\n    );\n    this.state.hamburgerMenu.isOpen = !this.state.hamburgerMenu.isOpen;\n\n    this.components?.toggleBtn?.setAttribute(\n      \"aria-expanded\",\n      String(this.state.hamburgerMenu.isOpen)\n    );\n  };\n\n  /**\n   * @description handle the transition end\n   * @param e event triggered\n   */\n  handleTransitionEnd = (e: Event) => {\n    if ((e as TransitionEvent).propertyName !== \"transform\") return;\n\n    this.components.navLinks?.classList.remove(\"closing\");\n    this.state.hamburgerMenu.isTransitioning = false;\n  };\n\n  toggleSections = <K extends DisplayEvents[\"elementId\"]>(e: Event, key: K) => {\n    e.preventDefault();\n    this.state.tabs[key] = !this.state.tabs[key];\n    const showEvent = {\n      elementId: key,\n      type: `${key}:show`,\n    } as DisplayEvents;\n\n    const hideEvent = {\n      elementId: key,\n      type: `${key}:hide`,\n    } as DisplayEvents;\n\n    this.state.tabs[key]\n      ? this.displayEventBus?.emit(showEvent)\n      : this.displayEventBus?.emit(hideEvent);\n  };\n\n  private onToggleClick = (e: Event) => this.toggleHamburgerMenu();\n  private onAnimationEnd = (e: Event) => this.handleTransitionEnd(e);\n  private onProjectClick = (e: Event) => this.toggleSections(e, \"project\");\n  private onAboutClick = (e: Event) => this.toggleSections(e, \"about\");\n  private onHomeClick = (e: Event) => this.toggleSections(e, \"home\");\n  private onContactClick = (e: Event) => this.toggleSections(e, \"contact\");\n\n  setupBusListeners = () => {\n    if (!this.displayEventBus) return;\n\n    this.sections.forEach((id) => {\n      const showHandler = (e: DisplayEvents) => {\n        this.state.tabs[id] = true;\n      };\n      const hideHandler = (e: DisplayEvents) => {\n        this.state.tabs[id] = false;\n      };\n\n      this.displayEventBus?.on(`${id}:show`, showHandler);\n      this.displayEventBus?.on(`${id}:hide`, hideHandler);\n\n      if (!this.busHandlers) return;\n\n      this.busHandlers[`${id}:show`] = showHandler;\n      this.busHandlers[`${id}:hide`] = hideHandler;\n    });\n  };\n\n  disposeBusListeners = () => {\n    if (!this.displayEventBus) return;\n\n    this.sections.forEach((id) => {\n      if (!this.busHandlers) return;\n\n      this.displayEventBus?.off(`${id}:show`, this.busHandlers[`${id}:show`]);\n      this.displayEventBus?.off(`${id}:hide`, this.busHandlers[`${id}:hide`]);\n    });\n  };\n\n  set eventBusManager(eventBusManager: EventBusManager) {\n    this.displayEventBus = eventBusManager.displayBus;\n  }\n}\n"]}