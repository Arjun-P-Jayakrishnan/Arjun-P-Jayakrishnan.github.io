{"version":3,"sources":["../src/graphics/internal/context.ts"],"sourcesContent":["import { PerspectiveCamera, Scene, WebGLRenderer } from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n\nexport interface ThreeJsContext {\n  scene: Scene;\n  renderer: WebGLRenderer;\n  camera: PerspectiveCamera;\n  orbit: OrbitControls;\n}\n\nlet context: ThreeJsContext | null = null;\n\nexport interface ThreeJsContextManager {\n  mount: (context: ThreeJsContext) => void;\n  unmount: () => void;\n  getProperty: <K extends keyof ThreeJsContext>(key: K) => ThreeJsContext[K];\n}\n\nexport const getThreeJsContext = (): ThreeJsContextManager => {\n  const mount = (_context: ThreeJsContext) => {\n    if (!context) {\n      context = _context;\n    }\n  };\n\n  const unmount = () => {};\n\n  const getProperty = <K extends keyof ThreeJsContext>(key: K) => {\n    if (!context) {\n      throw new Error(`Mount the three js context before accessing it`);\n    }\n\n    return context[key];\n  };\n\n  return {\n    mount: mount,\n    unmount: unmount,\n    getProperty: getProperty,\n  };\n};\n"],"mappings":"AAUA,IAAIA,EAAiC,KAQxBC,EAAoB,KAiBxB,CACL,MAjBaC,GAA6B,CACrCF,IACHA,EAAUE,EAEd,EAcE,QAZc,IAAM,CAAC,EAarB,YAXmDC,GAAW,CAC9D,GAAI,CAACH,EACH,MAAM,IAAI,MAAM,gDAAgD,EAGlE,OAAOA,EAAQG,CAAG,CACpB,CAMA","names":["context","getThreeJsContext","_context","key"]}