{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { attachReferences, mountComponents } from \"@components/main\";\r\nimport {\r\n  createEventBusManager,\r\n  EventBusManager,\r\n} from \"@utils/event_management/eventBusFactory\";\r\nimport { getGlobalContext, References } from \"@utils/globalContext\";\r\nimport { createGlobalState, GlobalState } from \"@utils/state/globalState\";\r\nimport { GlobalStateContext } from \"@utils/state/globalStateData\";\r\nimport { createGameplay, Gameplay } from \"graphics/instance/gameplay\";\r\nimport { createGameEngineInstance, GameEngineInstance } from \"graphics/main\";\r\n\r\n\r\n\r\n\r\ninterface Instances {\r\n  gameEngine: GameEngineInstance;\r\n  gamePlay: Gameplay;\r\n}\r\n\r\nlet references: References;\r\nlet instances: Instances;\r\n\r\n\r\n\r\nconst mountWindowEventListeners = () => {};\r\n\r\nconst preMount = () => {\r\n  /**\r\n   * References\r\n   */\r\n  references = getGlobalContext();\r\n\r\n  references.globalState.inflate();\r\n\r\n  // references.eventBusManager.loadingBus.on(\"load:complete\", () => {\r\n  //   console.log(\"loading complete\");\r\n  // });\r\n\r\n  // references.globalState.subscribe(\"loading\", (observable) => {\r\n  //   console.log(\"global state \", observable);\r\n  // });\r\n\r\n  mountComponents();\r\n};\r\n\r\n/**\r\n * helps to add all necessary mounting function\r\n */\r\nconst mount = () => {\r\n  attachReferences({\r\n    state: references.globalState,\r\n    eventBusManager: references.eventBusManager,\r\n  });\r\n\r\n  /**\r\n   * Instances\r\n   */\r\n\r\n  instances = {\r\n    gameEngine: createGameEngineInstance({\r\n      globalState: references.globalState,\r\n      eventBusManager: references.eventBusManager,\r\n    }),\r\n    gamePlay: createGameplay(\r\n      {},\r\n      {\r\n        globalState: references.globalState,\r\n        eventBusManager: references.eventBusManager,\r\n      }\r\n    ),\r\n  };\r\n\r\n  Promise.allSettled([instances.gameEngine.mount(instances.gamePlay)]).then(\r\n    () => {\r\n      console.log(\"all components mounted\");\r\n      instances.gameEngine.update();\r\n    }\r\n  );\r\n};\r\n\r\n/**\r\n * helps to clear any unmounted objects\r\n */\r\nconst unmount = () => {\r\n  instances.gameEngine.unmount();\r\n};\r\n\r\n/**\r\n * entry point for the whole app\r\n */\r\nconst main = () => {\r\n  preMount();\r\n\r\n  /**\r\n   * Mounts the components when dom is fully loaded\r\n   */\r\n  document.addEventListener(\"DOMContentLoaded\", () => {\r\n    mount();\r\n    mountWindowEventListeners();\r\n    /**\r\n     * Unmounts everything when the window is going to unload\r\n     */\r\n    window.addEventListener(\"beforeunload\", () => {\r\n      unmount();\r\n    });\r\n  });\r\n};\r\n\r\nmain();\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,IAAI;AACJ,IAAI;AAIJ,IAAM,4BAA4B,MAAM;AAAC;AAEzC,IAAM,WAAW,MAAM;AAIrB,eAAa,iBAAiB;AAE9B,aAAW,YAAY,QAAQ;AAU/B,kBAAgB;AAClB;AAKA,IAAM,QAAQ,MAAM;AAClB,mBAAiB;AAAA,IACf,OAAO,WAAW;AAAA,IAClB,iBAAiB,WAAW;AAAA,EAC9B,CAAC;AAMD,cAAY;AAAA,IACV,YAAY,yBAAyB;AAAA,MACnC,aAAa,WAAW;AAAA,MACxB,iBAAiB,WAAW;AAAA,IAC9B,CAAC;AAAA,IACD,UAAU;AAAA,MACR,CAAC;AAAA,MACD;AAAA,QACE,aAAa,WAAW;AAAA,QACxB,iBAAiB,WAAW;AAAA,MAC9B;AAAA,IACF;AAAA,EACF;AAEA,UAAQ,WAAW,CAAC,UAAU,WAAW,MAAM,UAAU,QAAQ,CAAC,CAAC,EAAE;AAAA,IACnE,MAAM;AACJ,cAAQ,IAAI,wBAAwB;AACpC,gBAAU,WAAW,OAAO;AAAA,IAC9B;AAAA,EACF;AACF;AAKA,IAAM,UAAU,MAAM;AACpB,YAAU,WAAW,QAAQ;AAC/B;AAKA,IAAM,OAAO,MAAM;AACjB,WAAS;AAKT,WAAS,iBAAiB,oBAAoB,MAAM;AAClD,UAAM;AACN,8BAA0B;AAI1B,WAAO,iBAAiB,gBAAgB,MAAM;AAC5C,cAAQ;AAAA,IACV,CAAC;AAAA,EACH,CAAC;AACH;AAEA,KAAK;","names":[]}