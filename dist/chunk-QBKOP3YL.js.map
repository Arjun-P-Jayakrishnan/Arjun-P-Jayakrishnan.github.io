{"version":3,"sources":["../src/gameplay/rooms/projects/room.ts"],"names":["createProjectRoom","player","ground","serviceRegistry","getServiceRegistry","storage","context","eventBusManager","logger","scene","camera","orbit","renderer","components","createCameraManager","createPlayer","createGround","createLighting","group","deltaTime"],"mappings":"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","file":"chunk-QBKOP3YL.js","sourcesContent":["import { getServiceRegistry } from \"engine/core/ServiceRegistry\";\nimport { Group, Object3DEventMap } from \"three\";\nimport { ModelIdentifier, Room, RoomProps } from \"types/rooms.types\";\nimport { CameraManager, createCameraManager } from \"./camera\";\nimport { createGround, Ground } from \"./ground\";\nimport { createLighting, Lighting } from \"./lights\";\nimport { createPlayer, Player } from \"./player\";\n\nexport interface ProjectRoomProps extends RoomProps {\n  player: ModelIdentifier;\n  ground: ModelIdentifier;\n}\n\ninterface Components {\n  camera: CameraManager;\n  player: Player;\n  ground: Ground;\n  lighting: Lighting;\n}\n\nexport const createProjectRoom = ({\n  player,\n  ground,\n}: ProjectRoomProps): Room => {\n  //====References===\n  const serviceRegistry = getServiceRegistry();\n  const [storage, context, eventBusManager, logger] = [\n    serviceRegistry.get(\"GlobalStorageManager\"),\n    serviceRegistry.get(\"ThreeJSContextManager\"),\n    serviceRegistry.get(\"EventBusManager\"),\n    serviceRegistry.get(\"Logger\"),\n  ];\n\n  const { scene, camera, orbit, renderer } = {\n    scene: context.get(\"scene\")!,\n    camera: context.get(\"camera\")!,\n    orbit: context.get(\"orbit\")!,\n    renderer: context.get(\"renderer\")!,\n  };\n\n  //===Local===\n  const components: Components = {\n    camera: createCameraManager({\n      camera,\n      eventBusManager,\n      orbit,\n      scene,\n    }),\n    player: createPlayer({ logger, reference: player, storage }),\n    ground: createGround({ logger, reference: ground, storage }),\n    lighting: createLighting({ renderer, scene }),\n  };\n  let group: Nullable<Group<Object3DEventMap>> = null;\n\n  const mount = () => {\n    components.ground.mount();\n    components.player.mount();\n    components.camera.mount();\n    components.lighting.mount();\n\n    group =\n      storage.getStorage(\"model\").retrieve(ground.storageId)?.groups ?? null;\n\n    logger.onMount({ origin: \"Projects-Room\" });\n  };\n\n  const activate = () => {\n    if (group) group.visible = true;\n\n    components.camera.activate();\n    components.ground.actiavte();\n    components.lighting.activate();\n    components.player.activate();\n\n    logger.onActivate({ origin: \"Projects-Room\" });\n  };\n\n  const update = (deltaTime: number) => {\n    components.player.update(deltaTime);\n    components.camera.update(deltaTime);\n  };\n\n  const deactivate = () => {\n    if (group) group.visible = false;\n\n    components.camera.deactivate();\n    components.ground.deactivate();\n    components.lighting.deactivate();\n    components.player.deactiavte();\n\n    logger.onDeactivate({ origin: \"Projects-Room\" });\n  };\n\n  const unmount = () => {\n    components.camera.unmount();\n    components.ground.unmount();\n    components.lighting.unmount();\n    components.player.unmount();\n\n    logger.onUnmount({ origin: \"Projects-Room\" });\n  };\n\n  return {\n    mount: mount,\n    setActive: activate,\n    update: update,\n    setDeactive: deactivate,\n    unmount: unmount,\n    isLoaded: false,\n  };\n};\n"]}