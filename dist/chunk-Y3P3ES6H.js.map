{"version":3,"sources":["../src/graphics/internal/internal.ts"],"names":["createThreeJsInstance","props","fov","aspectRatio","near","far","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","controls","OrbitControls","animationLoop","animationFrameId","contextManager","getThreeJsContext","_mountRenderer","tag","container","_configureControls","addAxesHelper","axes_helper","AxesHelper","_mountThreeJsContext","mount","register","loop","render"],"mappings":"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","file":"chunk-Y3P3ES6H.js","sourcesContent":["import { AxesHelper, PerspectiveCamera, Scene, WebGLRenderer } from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\nimport { getThreeJsContext } from \"./context\";\n\nexport interface ThreeJSRenderProps {\n  /**\n   * Properties for camera\n   */\n  camera: {\n    fov?: number;\n    aspect?: number;\n    near?: number;\n    far?: number;\n  };\n  /**\n   * Tag to which renderer has to be attached\n   */\n  domMountTag: string;\n}\n\nexport interface ThreeJsRenderReference {\n  /**\n   * @description Mount\n   */\n  mount: () => void;\n  /**\n   * @description\n   * @param loop the callback for updating\n   */\n  register: (loop: () => void) => void;\n  /**\n   * @description Loop\n   */\n  render: () => void;\n  /**\n   * @description UnMount\n   */\n  dispose: () => void;\n}\n\n/**\n * @description Creates a threejs environment in which further additions can be made\n * @param props properties that define the setup of game engine\n * @returns Render Lifecycle methods\n */\nexport const createThreeJsInstance = (\n  props: ThreeJSRenderProps\n): ThreeJsRenderReference => {\n  //Local references\n  const { fov, aspectRatio, near, far } = {\n    fov: 75,\n    aspectRatio: window.innerWidth / window.innerHeight,\n    near: 0.1,\n    far: 1000,\n  };\n\n  let scene: Scene = new Scene();\n\n  let camera: PerspectiveCamera = new PerspectiveCamera(\n    props.camera.fov ?? fov,\n    props.camera.aspect ?? aspectRatio,\n    props.camera.near ?? near,\n    props.camera.far ?? far\n  );\n\n  let renderer: WebGLRenderer = new WebGLRenderer({ antialias: true });\n\n  let controls: OrbitControls = new OrbitControls(camera, renderer.domElement);\n\n  let animationLoop: () => void | undefined;\n  let animationFrameId: number = 0;\n\n  const contextManager = getThreeJsContext();\n\n  /**\n   * @description add the renderer so that it can display the 3d\n   * @param tag the dom tag to which the renderer is to be attached\n   */\n  const _mountRenderer = (tag: string) => {\n    const container = document.getElementById(tag);\n\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n\n    if (container) {\n      container.appendChild(renderer.domElement);\n    } else {\n      console.warn(`Could not find element with selector tag : ${tag}`);\n    }\n  };\n\n  /**\n   * @description setup initial properties of orbital controls\n   */\n  const _configureControls = () => {\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.25;\n    controls.screenSpacePanning = false;\n    controls.maxPolarAngle = Math.PI / 2;\n  };\n\n  const addAxesHelper = () => {\n    const axes_helper = new AxesHelper();\n    scene.add(axes_helper);\n  };\n\n  const _mountThreeJsContext = () => {\n    contextManager.mount({\n      scene: scene,\n      camera: camera,\n      renderer: renderer,\n      orbit: controls,\n    });\n  };\n\n  const mount = () => {\n    _mountRenderer(props.domMountTag);\n    _configureControls();\n\n    camera.position.set(0, 0, 0.5);\n    // scene.add(camera);\n\n    addAxesHelper();\n\n    _mountThreeJsContext();\n  };\n\n  const register = (loop: () => void) => {\n    animationLoop = loop;\n  };\n\n  const render = () => {\n    //Recursive callback function\n    animationFrameId = requestAnimationFrame(render);\n\n    if (controls.enabled || controls.enableDamping) {\n      controls.update();\n    }\n\n    if (animationLoop) {\n      animationLoop();\n    }\n\n    //Render scene from cameras perspective\n    renderer.render(scene, camera);\n  };\n\n  /**\n   * @description Life cycle method similar to UnMount\n   * @param disposeCallbacks array of dispose callbacks to be executed\n   */\n  const dispose = () => {\n    const container = document.getElementById(props.domMountTag);\n    if (container && renderer.domElement.parentElement === container) {\n      container.removeChild(renderer.domElement);\n    }\n\n    cancelAnimationFrame(animationFrameId);\n\n    renderer.dispose();\n    controls.dispose();\n\n    animationFrameId = 0;\n  };\n\n  return Object.freeze({\n    mount: mount,\n    register: register,\n    render: render,\n    dispose: dispose,\n  });\n};\n"]}