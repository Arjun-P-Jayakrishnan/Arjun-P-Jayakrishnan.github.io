{"version":3,"sources":["../src/debug/debugger.ts"],"names":["createDebugger","name","action","processPipelineDebugger"],"mappings":"AAaO,IAAMA,EAAe,KA+BjB,CACH,MA9BUC,CAAAA,CAAAA,EAAc,CACxB,OAAQ,CAAA,GAAA,CAAI,CAAcA,kBAAAA,EAAAA,CAAI,cAAc,EAChD,CAAA,CA6BI,UAVY,CAACA,CAAAA,CAAYC,IAAiB,CAC1C,OAAA,CAAQ,GAAI,CAAA,CAAA,eAAA,EAAaD,CAAI,CAA8BC,2BAAAA,EAAAA,CAAM,MAAM,EAC3E,CAAA,CASI,QAPU,CAACD,CAAAA,CAAYC,CAAiB,GAAA,CACxC,QAAQ,GAAI,CAAA,CAAA,eAAA,EAAaD,CAAI,CAA0BC,uBAAAA,EAAAA,CAAM,EAAE,EACnE,CAAA,CAMI,OAzBWD,CAAAA,CAAAA,EAAc,CACzB,OAAQ,CAAA,GAAA,CAAI,WAAMA,CAAI,CAAA,kBAAA,CAAoB,EAC9C,CAwBI,CAAA,MAAA,CAtBUA,CAAc,EAAA,CACxB,QAAQ,GAAI,CAAA,CAAA,WAAA,EAAOA,CAAI,CAAwB,sBAAA,CAAA,EACnD,EAqBI,SAnBaA,CAAAA,CAAAA,EAAc,CAC3B,OAAA,CAAQ,IAAI,CAAMA,QAAAA,EAAAA,CAAI,qBAAqB,EAC/C,CAAA,CAkBI,WAhCcA,CAAc,EAAA,CAC5B,OAAQ,CAAA,GAAA,CAAI,cAAOA,CAAI,CAAA,WAAA,CAAa,EACxC,CA+BA,CAAA,CAAA,CAIOE,EAAiCH,CAAe","file":"chunk-37KH4TOK.js","sourcesContent":["type Actions=\"mount\" | \"unmount\" | \"fetch\"\n\nexport interface Debugger {\n  onInit: (name: String) => void;\n  onSuccess: (name: String, action:Actions ) => void;\n  onError: (name: String, action: Actions) => void;\n  onMount:(name:string)=>void;\n  onLoad:(name:string)=>void;\n  onUnmount:(name:string)=>void\n  onCallback:(name:string)=>void\n}\n\n\nexport const createDebugger=():Debugger=>{\n\n    const onInit=(name:String)=>{\n        console.log(`üìç Process ${name} has started`)\n    }\n    \n    const onCallback=(name:string)=>{\n        console.log(`üìü [${name}] is called`)\n    }\n\n    const onMount=(name:string)=>{\n        console.log(`‚ûï [${name}] is mounting.....`)\n    }\n\n    const onLoad=(name:string)=>{\n        console.log(`üí´ [${name}] is loading data ....`)\n    }\n\n    const onUnmount=(name:string)=>{\n        console.log(`‚ûñ [${name}] is unmounting....`)\n    }\n\n\n    const onSuccess=(name:String,action:Actions)=>{\n        console.log(`‚úÖ Process ${name} is successfully completed ${action}ing `);\n    }\n\n    const onError=(name:String,action:Actions)=>{\n        console.log(`‚ùå Process ${name} is failed to complete ${action}`);\n    }\n\n    return {\n        onInit:onInit,\n        onSuccess,\n        onError,\n        onMount,\n        onLoad,\n        onUnmount,\n        onCallback\n    }\n}\n\n\nexport let processPipelineDebugger:Debugger=createDebugger();\n\n"]}