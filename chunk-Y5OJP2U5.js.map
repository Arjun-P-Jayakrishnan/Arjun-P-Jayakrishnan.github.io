{"version":3,"sources":["../src/components/threejs/scene_inspector.ts"],"sourcesContent":["import { EventBus } from \"@utils/event_management/eventBus\";\nimport { EventBusManager } from \"@utils/event_management/eventBusFactory\";\nimport { DebugEvents } from \"@utils/event_management/eventType\";\nimport { Material, Object3D, Scene } from \"three\";\n\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = `\n    <link rel=\"stylesheet\" href=\"/style/scene_inspector.css\">\n    <div class=\"inspector-wrapper\">\n\n      <div class=\"resizer\"></div>\n    \n      <div class=\"scene-inspector hidden\">\n        <div class=\"inspector-header\">\n          <span class=\"title\">Scene Inspector</span>\n          <button class=\"close-btn\"> ✕ </button>\n        </div>\n\n        <div class=\"inspector-content\">\n          <ul class=\"tree-view\">\n\n          </ul>\n        </div>\n      </div>\n\n      \n    </div>\n`;\n\n//\n\ninterface State {\n  isMenuHidden: boolean;\n  isResizing: boolean;\n}\n\ninterface TreeNode {\n  id: string;\n  label: string;\n  //  type: \"mesh\" | \"camera\" | \"light\" | \"animation\" | \"sprite\" | \"group\";\n  type: string;\n  nodes: TreeNode[];\n}\n\ninterface TreeView {\n  Objects: TreeNode[];\n  Materials: TreeNode[];\n}\n\nexport class SceneInspector extends HTMLElement {\n  root: ShadowRoot;\n  eventBus: EventBus<DebugEvents> | undefined;\n  state: State;\n  element: Element;\n  treeView: TreeView;\n\n  constructor() {\n    super();\n    this.root = this.attachShadow({ mode: \"open\" });\n    const clone = template.content.cloneNode(true);\n\n    this.root.appendChild(clone);\n    this.state = {\n      isMenuHidden: true,\n      isResizing: false,\n    };\n\n    this.element = this.root.querySelector(\".scene-inspector\")!;\n\n    this.treeView = {\n      Objects: [],\n      Materials: [],\n    };\n\n    this.handleResize();\n  }\n\n  set eventBusManager(eventBusManager: EventBusManager) {\n    this.eventBus = eventBusManager.debugBus;\n    this.eventBus?.on(\"debug:inspector\", (data) => {\n      this.handleShowHideEvent(data);\n    });\n  }\n\n  handleShowHideEvent(data: DebugEvents) {\n    this.state.isMenuHidden = !this.state.isMenuHidden;\n\n    if (this.state.isMenuHidden) {\n      this.element.classList.add(\"hidden\");\n    } else {\n      this.element.classList.remove(\"hidden\");\n      if (data.scene != null && data.scene !== undefined) {\n        this.renderTree(data.scene);\n      }\n    }\n  }\n\n  handleResize() {\n    const resizer: HTMLElement = this.root.querySelector(\".resizer\")!;\n    const panel: HTMLElement = this.root.querySelector(\".scene-inspector\")!;\n\n    resizer.addEventListener(\"mousedown\", (e) => {\n      this.state.isResizing = true;\n      document.body.style.cursor = \"ew-resize\";\n      e.preventDefault();\n    });\n\n    window.addEventListener(\"mousemove\", (e) => {\n      if (!this.state.isResizing) return;\n\n      const newWidth = window.innerWidth - (e as MouseEvent).clientX;\n\n      panel.style.width = `${Math.min(Math.max(newWidth, 200), 600)}px`;\n    });\n\n    window.addEventListener(\"mouseup\", (e) => {\n      if (this.state.isResizing) {\n        this.state.isResizing = false;\n        document.body.style.cursor = \"\";\n      }\n    });\n  }\n\n  toggleCloseButton() {\n    this.state.isMenuHidden = true;\n\n    this.element.classList.add(\"hidden\");\n  }\n\n  private collectSceneData(scene: Scene): TreeView {\n    const objects: TreeNode[] = [];\n    const materialsMap: Map<string, TreeNode> = new Map();\n\n    const traverse = (object: Object3D): TreeNode => {\n      const node: TreeNode = {\n        id: object.uuid,\n        label: object.name == \"\" ? object.type : object.name,\n        type: object.type,\n        nodes: [],\n      };\n\n      object.children.forEach((child) => {\n        node.nodes.push(traverse(child));\n      });\n\n      if (\"material\" in object && object.material) {\n        const mats: Material[] = Array.isArray(object.material)\n          ? object.material\n          : [object.material];\n        mats.forEach((mat) => {\n          /**\n           * Ensure that a material is registered only once to avoid duplicate entry\n           */\n          if (!materialsMap.has(mat.uuid)) {\n            materialsMap.set(mat.uuid, {\n              id: mat.uuid,\n              label: mat.name == \"\" ? mat.type : mat.name,\n              type: \"material\",\n              nodes: [],\n            });\n          }\n        });\n      }\n\n      return node;\n    };\n\n    scene.children.forEach((child) => {\n      objects.push(traverse(child));\n    });\n\n    return {\n      Objects: objects,\n      Materials: Array.from(materialsMap.values()),\n    };\n  }\n\n  protected renderTree(scene: Scene) {\n    this.treeView = this.collectSceneData(scene);\n\n    const treeNode = this.root.querySelector(\".tree-view\")!;\n    treeNode.innerHTML = ``;\n\n    this.addCategory(\"Objects\", treeNode, this.treeView.Objects);\n    this.addCategory(\"Materials\", treeNode, this.treeView.Materials);\n  }\n\n  private addCategory(label: string, treeRoot: Element, nodes: TreeNode[]) {\n    const li = document.createElement(\"li\");\n    li.classList.add(\"category\", \"collapsed\");\n\n    const header = document.createElement(\"div\");\n    header.classList.add(\"category-toggle\");\n    header.textContent = `⮞ ${label}`;\n\n    header.addEventListener(\"click\", (e) => {\n      li.classList.toggle(\"collapsed\");\n      const isCollapsed = li.classList.contains(\"collapsed\");\n      header.textContent = isCollapsed ? `⮞ ${label}` : `▼ ${label}`;\n    });\n\n    const nodeList = document.createElement(\"ul\");\n    nodeList.classList.add(\"category-content\");\n    nodes.forEach((node) => {\n      nodeList.appendChild(this.renderTreeNode(node));\n    });\n\n    li.appendChild(header);\n    li.appendChild(nodeList);\n    treeRoot.appendChild(li);\n  }\n\n  private renderTreeNode(node: TreeNode): HTMLElement {\n    const nodeRoot = document.createElement(\"li\");\n    nodeRoot.classList.add(\"tree-node\");\n\n    const label = document.createElement(\"div\");\n    label.classList.add(\"node-label\");\n    label.textContent = `${node.label} (${node.type})`;\n\n    nodeRoot.appendChild(label);\n\n    if (node.nodes.length > 0) {\n      nodeRoot.classList.add(\"collapsed\");\n\n      const ul = document.createElement(\"ul\");\n\n      node.nodes.forEach((node) => {\n        ul.appendChild(this.renderTreeNode(node));\n      });\n\n      label.addEventListener(\"click\", () => {\n        nodeRoot.classList.toggle(\"collapsed\");\n      });\n\n      nodeRoot.appendChild(ul);\n    }\n\n    return nodeRoot;\n  }\n\n  connectedCallback() {\n    const closeButton = this.root.querySelector(\".close-btn\")!;\n\n    closeButton.addEventListener(\"click\", () => {\n      this.toggleCloseButton();\n    });\n  }\n\n  disconnectedCallback() {}\n}\n"],"mappings":"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","names":["node"]}